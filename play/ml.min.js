! function() {
	"use strict";

	function e() {
		this.init()
	}

	function t(e) {
		e.src && 0 !== e.src.length ? this.init(e) : console.error("An array of source files must be passed with any new Howl.")
	}
	e.prototype = {
		init: function() {
			var e = this || f;
			return e._counter = 1e3, e._html5AudioPool = [], e.html5PoolSize = 10, e._codecs = {}, e._howls = [], e._muted = !1, e._volume = 1, e._canPlayEvent = "canplaythrough", e._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null, e.masterGain = null, e.noAudio = !1, e.usingWebAudio = !0, e.autoSuspend = !0, e.ctx = null, e.autoUnlock = !0, e._setup(), e
		},
		volume: function(e) {
			var t = this || f;
			if (e = parseFloat(e), t.ctx || _(), void 0 !== e && 0 <= e && e <= 1) {
				if (t._volume = e, !t._muted) {
					t.usingWebAudio && t.masterGain.gain.setValueAtTime(e, f.ctx.currentTime);
					for (var i = 0; i < t._howls.length; i++)
						if (!t._howls[i]._webAudio)
							for (var o = t._howls[i]._getSoundIds(), n = 0; n < o.length; n++) {
								var a = t._howls[i]._soundById(o[n]);
								a && a._node && (a._node.volume = a._volume * e)
							}
				}
				return t
			}
			return t._volume
		},
		mute: function(e) {
			var t = this || f;
			t.ctx || _(), t._muted = e, t.usingWebAudio && t.masterGain.gain.setValueAtTime(e ? 0 : t._volume, f.ctx.currentTime);
			for (var i = 0; i < t._howls.length; i++)
				if (!t._howls[i]._webAudio)
					for (var o = t._howls[i]._getSoundIds(), n = 0; n < o.length; n++) {
						var a = t._howls[i]._soundById(o[n]);
						a && a._node && (a._node.muted = !!e || a._muted)
					}
			return t
		},
		unload: function() {
			for (var e = this || f, t = e._howls.length - 1; 0 <= t; t--) e._howls[t].unload();
			return e.usingWebAudio && e.ctx && void 0 !== e.ctx.close && (e.ctx.close(), e.ctx = null, _()), e
		},
		codecs: function(e) {
			return (this || f)._codecs[e.replace(/^x-/, "")]
		},
		_setup: function() {
			var t = this || f;
			if (t.state = t.ctx && t.ctx.state || "suspended", t._autoSuspend(), !t.usingWebAudio)
				if ("undefined" != typeof Audio) try {
					void 0 === (new Audio).oncanplaythrough && (t._canPlayEvent = "canplay")
				} catch (e) {
					t.noAudio = !0
				} else t.noAudio = !0;
			try {
				(new Audio).muted && (t.noAudio = !0)
			} catch (t) {}
			return t.noAudio || t._setupCodecs(), t
		},
		_setupCodecs: function() {
			var e, t, i = this || f,
				o = null;
			try {
				o = "undefined" != typeof Audio ? new Audio : null
			} catch (e) {
				return i
			}
			return o && "function" == typeof o.canPlayType && (e = o.canPlayType("audio/mpeg;").replace(/^no$/, ""), t = (t = i._navigator && i._navigator.userAgent.match(/OPR\/([0-6].)/g)) && parseInt(t[0].split("/")[1], 10) < 33, i._codecs = {
				mp3: !(t || !e && !o.canPlayType("audio/mp3;").replace(/^no$/, "")),
				mpeg: !!e,
				opus: !!o.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""),
				ogg: !!o.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
				oga: !!o.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
				wav: !!o.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
				aac: !!o.canPlayType("audio/aac;").replace(/^no$/, ""),
				caf: !!o.canPlayType("audio/x-caf;").replace(/^no$/, ""),
				m4a: !!(o.canPlayType("audio/x-m4a;") || o.canPlayType("audio/m4a;") || o.canPlayType("audio/aac;")).replace(/^no$/, ""),
				mp4: !!(o.canPlayType("audio/x-mp4;") || o.canPlayType("audio/mp4;") || o.canPlayType("audio/aac;")).replace(/^no$/, ""),
				weba: !!o.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
				webm: !!o.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""),
				dolby: !!o.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""),
				flac: !!(o.canPlayType("audio/x-flac;") || o.canPlayType("audio/flac;")).replace(/^no$/, "")
			}), i
		},
		_unlockAudio: function() {
			var s, l = this || f;
			if (!l._audioUnlocked && l.ctx) return l._audioUnlocked = !1, l.autoUnlock = !1, l._mobileUnloaded || 44100 === l.ctx.sampleRate || (l._mobileUnloaded = !0, l.unload()), l._scratchBuffer = l.ctx.createBuffer(1, 1, 22050), s = function(e) {
				for (var t = 0; t < l.html5PoolSize; t++) try {
					var i = new Audio;
					i._unlocked = !0, l._releaseHtml5Audio(i)
				} catch (e) {
					l.noAudio = !0
				}
				for (t = 0; t < l._howls.length; t++)
					if (!l._howls[t]._webAudio)
						for (var o = l._howls[t]._getSoundIds(), n = 0; n < o.length; n++) {
							var a = l._howls[t]._soundById(o[n]);
							a && a._node && !a._node._unlocked && (a._node._unlocked = !0, a._node.load())
						}
				l._autoResume();
				var r = l.ctx.createBufferSource();
				r.buffer = l._scratchBuffer, r.connect(l.ctx.destination), void 0 === r.start ? r.noteOn(0) : r.start(0), "function" == typeof l.ctx.resume && l.ctx.resume(), r.onended = function() {
					r.disconnect(0), l._audioUnlocked = !0, document.removeEventListener("touchstart", s, !0), document.removeEventListener("touchend", s, !0), document.removeEventListener("click", s, !0);
					for (var e = 0; e < l._howls.length; e++) l._howls[e]._emit("unlock")
				}
			}, document.addEventListener("touchstart", s, !0), document.addEventListener("touchend", s, !0), document.addEventListener("click", s, !0), l
		},
		_obtainHtml5Audio: function() {
			var e = this || f;
			return e._html5AudioPool.length ? e._html5AudioPool.pop() : ((e = (new Audio).play()) && "undefined" != typeof Promise && (e instanceof Promise || "function" == typeof e.then) && e.catch(function() {
				console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.")
			}), new Audio)
		},
		_releaseHtml5Audio: function(e) {
			var t = this || f;
			return e._unlocked && t._html5AudioPool.push(e), t
		},
		_autoSuspend: function() {
			var e = this;
			if (e.autoSuspend && e.ctx && void 0 !== e.ctx.suspend && f.usingWebAudio) {
				for (var t = 0; t < e._howls.length; t++)
					if (e._howls[t]._webAudio)
						for (var i = 0; i < e._howls[t]._sounds.length; i++)
							if (!e._howls[t]._sounds[i]._paused) return e;
				return e._suspendTimer && clearTimeout(e._suspendTimer), e._suspendTimer = setTimeout(function() {
					e.autoSuspend && (e._suspendTimer = null, e.state = "suspending", e.ctx.suspend().then(function() {
						e.state = "suspended", e._resumeAfterSuspend && (delete e._resumeAfterSuspend, e._autoResume())
					}))
				}, 3e4), e
			}
		},
		_autoResume: function() {
			var t = this;
			if (t.ctx && void 0 !== t.ctx.resume && f.usingWebAudio) return "running" === t.state && t._suspendTimer ? (clearTimeout(t._suspendTimer), t._suspendTimer = null) : "suspended" === t.state ? (t.ctx.resume().then(function() {
				t.state = "running";
				for (var e = 0; e < t._howls.length; e++) t._howls[e]._emit("resume")
			}), t._suspendTimer && (clearTimeout(t._suspendTimer), t._suspendTimer = null)) : "suspending" === t.state && (t._resumeAfterSuspend = !0), t
		}
	};
	var f = new e,
		a = (t.prototype = {
			init: function(e) {
				var t = this;
				return f.ctx || _(), t._autoplay = e.autoplay || !1, t._format = "string" != typeof e.format ? e.format : [e.format], t._html5 = e.html5 || !1, t._muted = e.mute || !1, t._loop = e.loop || !1, t._pool = e.pool || 5, t._preload = "boolean" != typeof e.preload || e.preload, t._rate = e.rate || 1, t._sprite = e.sprite || {}, t._src = "string" != typeof e.src ? e.src : [e.src], t._volume = void 0 !== e.volume ? e.volume : 1, t._xhrWithCredentials = e.xhrWithCredentials || !1, t._duration = 0, t._state = "unloaded", t._sounds = [], t._endTimers = {}, t._queue = [], t._playLock = !1, t._onend = e.onend ? [{
					fn: e.onend
				}] : [], t._onfade = e.onfade ? [{
					fn: e.onfade
				}] : [], t._onload = e.onload ? [{
					fn: e.onload
				}] : [], t._onloaderror = e.onloaderror ? [{
					fn: e.onloaderror
				}] : [], t._onplayerror = e.onplayerror ? [{
					fn: e.onplayerror
				}] : [], t._onpause = e.onpause ? [{
					fn: e.onpause
				}] : [], t._onplay = e.onplay ? [{
					fn: e.onplay
				}] : [], t._onstop = e.onstop ? [{
					fn: e.onstop
				}] : [], t._onmute = e.onmute ? [{
					fn: e.onmute
				}] : [], t._onvolume = e.onvolume ? [{
					fn: e.onvolume
				}] : [], t._onrate = e.onrate ? [{
					fn: e.onrate
				}] : [], t._onseek = e.onseek ? [{
					fn: e.onseek
				}] : [], t._onunlock = e.onunlock ? [{
					fn: e.onunlock
				}] : [], t._onresume = [], t._webAudio = f.usingWebAudio && !t._html5, void 0 !== f.ctx && f.ctx && f.autoUnlock && f._unlockAudio(), f._howls.push(t), t._autoplay && t._queue.push({
					event: "play",
					action: function() {
						t.play()
					}
				}), t._preload && t.load(), t
			},
			load: function() {
				var e = this,
					t = null;
				if (!f.noAudio) {
					"string" == typeof e._src && (e._src = [e._src]);
					for (var i, o, n = 0; n < e._src.length; n++) {
						if (e._format && e._format[n]) i = e._format[n];
						else {
							if ("string" != typeof(o = e._src[n])) {
								e._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
								continue
							}
							i = (i = (i = /^data:audio\/([^;,]+);/i.exec(o)) || /\.([^.]+)$/.exec(o.split("?", 1)[0])) && i[1].toLowerCase()
						}
						if (i || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'), i && f.codecs(i)) {
							t = e._src[n];
							break
						}
					}
					return t ? (e._src = t, e._state = "loading", "https:" === window.location.protocol && "http:" === t.slice(0, 5) && (e._html5 = !0, e._webAudio = !1), new a(e), e._webAudio && s(e), e) : void e._emit("loaderror", null, "No codec support for selected audio sources.")
				}
				e._emit("loaderror", null, "No audio support.")
			},
			play: function(t, i) {
				var o = this,
					e = null;
				if ("number" == typeof t) e = t, t = null;
				else {
					if ("string" == typeof t && "loaded" === o._state && !o._sprite[t]) return null;
					if (void 0 === t && (t = "__default", !o._playLock)) {
						for (var n = 0, a = 0; a < o._sounds.length; a++) o._sounds[a]._paused && !o._sounds[a]._ended && (n++, e = o._sounds[a]._id);
						1 === n ? t = null : e = null
					}
				}
				var r, s = e ? o._soundById(e) : o._inactiveSound();
				if (!s) return null;
				if (e && !t && (t = s._sprite || "__default"), "loaded" !== o._state) return s._sprite = t, s._ended = !1, r = s._id, o._queue.push({
					event: "play",
					action: function() {
						o.play(r)
					}
				}), r;
				if (e && !s._paused) return i || o._loadQueue("play"), s._id;
				o._webAudio && f._autoResume();
				var l, d, c, _, p = Math.max(0, 0 < s._seek ? s._seek : o._sprite[t][0] / 1e3),
					u = Math.max(0, (o._sprite[t][0] + o._sprite[t][1]) / 1e3 - p),
					h = 1e3 * u / Math.abs(s._rate),
					v = o._sprite[t][0] / 1e3,
					g = (o._sprite[t][0] + o._sprite[t][1]) / 1e3,
					j = !(!s._loop && !o._sprite[t][2]),
					m = (s._sprite = t, s._ended = !1, function() {
						s._paused = !1, s._seek = p, s._start = v, s._stop = g, s._loop = j
					});
				if (!(g <= p)) return l = s._node, o._webAudio ? (c = function() {
					o._playLock = !1, m(), o._refreshBuffer(s);
					var e = s._muted || o._muted ? 0 : s._volume;
					l.gain.setValueAtTime(e, f.ctx.currentTime), s._playStart = f.ctx.currentTime, void 0 === l.bufferSource.start ? s._loop ? l.bufferSource.noteGrainOn(0, p, 86400) : l.bufferSource.noteGrainOn(0, p, u) : s._loop ? l.bufferSource.start(0, p, 86400) : l.bufferSource.start(0, p, u), h !== 1 / 0 && (o._endTimers[s._id] = setTimeout(o._ended.bind(o, s), h)), i || setTimeout(function() {
						o._emit("play", s._id), o._loadQueue()
					}, 0)
				}, "running" === f.state ? c() : (o._playLock = !0, o.once("resume", c), o._clearTimer(s._id))) : (d = function() {
					l.currentTime = p, l.muted = s._muted || o._muted || f._muted || l.muted, l.volume = s._volume * f.volume(), l.playbackRate = s._rate;
					try {
						var e = l.play();
						(e && "undefined" != typeof Promise && (e instanceof Promise || "function" == typeof e.then) ? (o._playLock = !0, m(), e.then(function() {
							o._playLock = !1, l._unlocked = !0, i || (o._emit("play", s._id), o._loadQueue())
						}).catch(function() {
							o._playLock = !1, o._emit("playerror", s._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."), s._ended = !0, s._paused = !0
						})) : i || (o._playLock = !1, m(), o._emit("play", s._id), o._loadQueue()), l.playbackRate = s._rate, l.paused) ? o._emit("playerror", s._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."): "__default" !== t || s._loop ? o._endTimers[s._id] = setTimeout(o._ended.bind(o, s), h) : (o._endTimers[s._id] = function() {
							o._ended(s), l.removeEventListener("ended", o._endTimers[s._id], !1)
						}, l.addEventListener("ended", o._endTimers[s._id], !1))
					} catch (e) {
						o._emit("playerror", s._id, e)
					}
				}, "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA" === l.src && (l.src = o._src, l.load()), c = window && window.ejecta || !l.readyState && f._navigator.isCocoonJS, 3 <= l.readyState || c ? d() : (o._playLock = !0, _ = function() {
					d(), l.removeEventListener(f._canPlayEvent, _, !1)
				}, l.addEventListener(f._canPlayEvent, _, !1), o._clearTimer(s._id))), s._id;
				o._ended(s)
			},
			pause: function(e) {
				var t = this;
				if ("loaded" !== t._state || t._playLock) t._queue.push({
					event: "pause",
					action: function() {
						t.pause(e)
					}
				});
				else
					for (var i = t._getSoundIds(e), o = 0; o < i.length; o++) {
						t._clearTimer(i[o]);
						var n = t._soundById(i[o]);
						if (n && !n._paused && (n._seek = t.seek(i[o]), n._rateSeek = 0, n._paused = !0, t._stopFade(i[o]), n._node))
							if (t._webAudio) {
								if (!n._node.bufferSource) continue;
								void 0 === n._node.bufferSource.stop ? n._node.bufferSource.noteOff(0) : n._node.bufferSource.stop(0), t._cleanBuffer(n._node)
							} else isNaN(n._node.duration) && n._node.duration !== 1 / 0 || n._node.pause();
						arguments[1] || t._emit("pause", n ? n._id : null)
					}
				return t
			},
			stop: function(e, t) {
				var i = this;
				if ("loaded" !== i._state || i._playLock) i._queue.push({
					event: "stop",
					action: function() {
						i.stop(e)
					}
				});
				else
					for (var o = i._getSoundIds(e), n = 0; n < o.length; n++) {
						i._clearTimer(o[n]);
						var a = i._soundById(o[n]);
						a && (a._seek = a._start || 0, a._rateSeek = 0, a._paused = !0, a._ended = !0, i._stopFade(o[n]), a._node && (i._webAudio ? a._node.bufferSource && (void 0 === a._node.bufferSource.stop ? a._node.bufferSource.noteOff(0) : a._node.bufferSource.stop(0), i._cleanBuffer(a._node)) : isNaN(a._node.duration) && a._node.duration !== 1 / 0 || (a._node.currentTime = a._start || 0, a._node.pause(), a._node.duration === 1 / 0 && i._clearSound(a._node))), t || i._emit("stop", a._id))
					}
				return i
			},
			mute: function(e, t) {
				var i = this;
				if ("loaded" !== i._state || i._playLock) i._queue.push({
					event: "mute",
					action: function() {
						i.mute(e, t)
					}
				});
				else {
					if (void 0 === t) {
						if ("boolean" != typeof e) return i._muted;
						i._muted = e
					}
					for (var o = i._getSoundIds(t), n = 0; n < o.length; n++) {
						var a = i._soundById(o[n]);
						a && (a._muted = e, a._interval && i._stopFade(a._id), i._webAudio && a._node ? a._node.gain.setValueAtTime(e ? 0 : a._volume, f.ctx.currentTime) : a._node && (a._node.muted = !!f._muted || e), i._emit("mute", a._id))
					}
				}
				return i
			},
			volume: function() {
				var e, t, i = this,
					o = arguments;
				if (0 === o.length) return i._volume;
				if (1 === o.length || 2 === o.length && void 0 === o[1] ? 0 <= i._getSoundIds().indexOf(o[0]) ? n = parseInt(o[0], 10) : e = parseFloat(o[0]) : 2 <= o.length && (e = parseFloat(o[0]), n = parseInt(o[1], 10)), !(void 0 !== e && 0 <= e && e <= 1)) return (t = n ? i._soundById(n) : i._sounds[0]) ? t._volume : 0;
				if ("loaded" !== i._state || i._playLock) i._queue.push({
					event: "volume",
					action: function() {
						i.volume.apply(i, o)
					}
				});
				else {
					void 0 === n && (i._volume = e);
					for (var n = i._getSoundIds(n), a = 0; a < n.length; a++)(t = i._soundById(n[a])) && (t._volume = e, o[2] || i._stopFade(n[a]), i._webAudio && t._node && !t._muted ? t._node.gain.setValueAtTime(e, f.ctx.currentTime) : t._node && !t._muted && (t._node.volume = e * f.volume()), i._emit("volume", t._id))
				}
				return i
			},
			fade: function(e, t, i, o) {
				var n = this;
				if ("loaded" !== n._state || n._playLock) n._queue.push({
					event: "fade",
					action: function() {
						n.fade(e, t, i, o)
					}
				});
				else {
					e = parseFloat(e), t = parseFloat(t), i = parseFloat(i), n.volume(e, o);
					for (var a = n._getSoundIds(o), r = 0; r < a.length; r++) {
						var s, l, d = n._soundById(a[r]);
						d && (o || n._stopFade(a[r]), n._webAudio && !d._muted && (l = (s = f.ctx.currentTime) + i / 1e3, d._volume = e, d._node.gain.setValueAtTime(e, s), d._node.gain.linearRampToValueAtTime(t, l)), n._startFadeInterval(d, e, t, i, a[r], void 0 === o))
					}
				}
				return n
			},
			_startFadeInterval: function(t, i, o, n, e, a) {
				var r = this,
					s = i,
					l = o - i,
					d = Math.abs(l / .01),
					d = Math.max(4, 0 < d ? n / d : n),
					c = Date.now();
				t._fadeTo = o, t._interval = setInterval(function() {
					var e = (Date.now() - c) / n;
					c = Date.now(), s += l * e, s = Math.max(0, s), s = Math.min(1, s), s = Math.round(100 * s) / 100, r._webAudio ? t._volume = s : r.volume(s, t._id, !0), a && (r._volume = s), (o < i && s <= o || i < o && o <= s) && (clearInterval(t._interval), t._interval = null, t._fadeTo = null, r.volume(o, t._id), r._emit("fade", t._id))
				}, d)
			},
			_stopFade: function(e) {
				var t = this,
					i = t._soundById(e);
				return i && i._interval && (t._webAudio && i._node.gain.cancelScheduledValues(f.ctx.currentTime), clearInterval(i._interval), i._interval = null, t.volume(i._fadeTo, e), i._fadeTo = null, t._emit("fade", e)), t
			},
			loop: function() {
				var e, t, i, o = this,
					n = arguments;
				if (0 === n.length) return o._loop;
				if (1 === n.length) {
					if ("boolean" != typeof n[0]) return !!(i = o._soundById(parseInt(n[0], 10))) && i._loop;
					o._loop = e = n[0]
				} else 2 === n.length && (e = n[0], t = parseInt(n[1], 10));
				for (var a = o._getSoundIds(t), r = 0; r < a.length; r++)(i = o._soundById(a[r])) && (i._loop = e, o._webAudio) && i._node && i._node.bufferSource && (i._node.bufferSource.loop = e) && (i._node.bufferSource.loopStart = i._start || 0, i._node.bufferSource.loopEnd = i._stop);
				return o
			},
			rate: function() {
				var e, t, i = this,
					o = arguments;
				if (0 === o.length ? a = i._sounds[0]._id : 1 === o.length ? 0 <= i._getSoundIds().indexOf(o[0]) ? a = parseInt(o[0], 10) : e = parseFloat(o[0]) : 2 === o.length && (e = parseFloat(o[0]), a = parseInt(o[1], 10)), "number" != typeof e) return ((t = i._soundById(a)) || i)._rate;
				if ("loaded" !== i._state || i._playLock) i._queue.push({
					event: "rate",
					action: function() {
						i.rate.apply(i, o)
					}
				});
				else {
					void 0 === a && (i._rate = e);
					for (var n, a = i._getSoundIds(a), r = 0; r < a.length; r++)(t = i._soundById(a[r])) && (i.playing(a[r]) && (t._rateSeek = i.seek(a[r]), t._playStart = i._webAudio ? f.ctx.currentTime : t._playStart), t._rate = e, i._webAudio && t._node && t._node.bufferSource ? t._node.bufferSource.playbackRate.setValueAtTime(e, f.ctx.currentTime) : t._node && (t._node.playbackRate = e), n = i.seek(a[r]), n = 1e3 * ((i._sprite[t._sprite][0] + i._sprite[t._sprite][1]) / 1e3 - n) / Math.abs(t._rate), !i._endTimers[a[r]] && t._paused || (i._clearTimer(a[r]), i._endTimers[a[r]] = setTimeout(i._ended.bind(i, t), n)), i._emit("rate", t._id))
				}
				return i
			},
			seek: function() {
				var e, t, i = this,
					o = arguments;
				if (0 === o.length ? t = i._sounds[0]._id : 1 === o.length ? 0 <= i._getSoundIds().indexOf(o[0]) ? t = parseInt(o[0], 10) : i._sounds.length && (t = i._sounds[0]._id, e = parseFloat(o[0])) : 2 === o.length && (e = parseFloat(o[0]), t = parseInt(o[1], 10)), void 0 !== t)
					if ("loaded" !== i._state || i._playLock) i._queue.push({
						event: "seek",
						action: function() {
							i.seek.apply(i, o)
						}
					});
					else {
						var n, a, r = i._soundById(t);
						if (r) {
							if (!("number" == typeof e && 0 <= e)) return i._webAudio ? (n = i.playing(t) ? f.ctx.currentTime - r._playStart : 0, a = r._rateSeek ? r._rateSeek - r._seek : 0, r._seek + (a + n * Math.abs(r._rate))) : r._node.currentTime;
							var s, l = i.playing(t),
								d = (l && i.pause(t, !0), r._seek = e, r._ended = !1, i._clearTimer(t), i._webAudio || !r._node || isNaN(r._node.duration) || (r._node.currentTime = e), function() {
									i._emit("seek", t), l && i.play(t, !0)
								});
							l && !i._webAudio ? (s = function() {
								i._playLock ? setTimeout(s, 0) : d()
							}, setTimeout(s, 0)) : d()
						}
					} return i
			},
			playing: function(e) {
				if ("number" == typeof e) return !!(e = this._soundById(e)) && !e._paused;
				for (var t = 0; t < this._sounds.length; t++)
					if (!this._sounds[t]._paused) return !0;
				return !1
			},
			duration: function(e) {
				var t = this._duration,
					e = this._soundById(e);
				return t = e ? this._sprite[e._sprite][1] / 1e3 : t
			},
			state: function() {
				return this._state
			},
			unload: function() {
				for (var e = this, t = e._sounds, i = 0; i < t.length; i++) t[i]._paused || e.stop(t[i]._id), e._webAudio || (e._clearSound(t[i]._node), t[i]._node.removeEventListener("error", t[i]._errorFn, !1), t[i]._node.removeEventListener(f._canPlayEvent, t[i]._loadFn, !1), f._releaseHtml5Audio(t[i]._node)), delete t[i]._node, e._clearTimer(t[i]._id);
				for (var o = f._howls.indexOf(e), n = (0 <= o && f._howls.splice(o, 1), !0), i = 0; i < f._howls.length; i++)
					if (f._howls[i]._src === e._src || 0 <= e._src.indexOf(f._howls[i]._src)) {
						n = !1;
						break
					} return r && n && delete r[e._src], f.noAudio = !1, e._state = "unloaded", e._sounds = [], null
			},
			on: function(e, t, i, o) {
				e = this["_on" + e];
				return "function" == typeof t && e.push(o ? {
					id: i,
					fn: t,
					once: o
				} : {
					id: i,
					fn: t
				}), this
			},
			off: function(e, t, i) {
				var o = this,
					n = o["_on" + e],
					a = 0;
				if ("number" == typeof t && (i = t, t = null), t || i)
					for (a = 0; a < n.length; a++) {
						var r = i === n[a].id;
						if (t === n[a].fn && r || !t && r) {
							n.splice(a, 1);
							break
						}
					} else if (e) o["_on" + e] = [];
					else
						for (var s = Object.keys(o), a = 0; a < s.length; a++) 0 === s[a].indexOf("_on") && Array.isArray(o[s[a]]) && (o[s[a]] = []);
				return o
			},
			once: function(e, t, i) {
				return this.on(e, t, i, 1), this
			},
			_emit: function(e, t, i) {
				for (var o = this, n = o["_on" + e], a = n.length - 1; 0 <= a; a--) n[a].id && n[a].id !== t && "load" !== e || (setTimeout(function(e) {
					e.call(this, t, i)
				}.bind(o, n[a].fn), 0), n[a].once && o.off(e, n[a].fn, n[a].id));
				return o._loadQueue(e), o
			},
			_loadQueue: function(e) {
				var t, i = this;
				return 0 < i._queue.length && ((t = i._queue[0]).event === e && (i._queue.shift(), i._loadQueue()), e || t.action()), i
			},
			_ended: function(e) {
				var t, i = this,
					o = e._sprite;
				return !i._webAudio && e._node && !e._node.paused && !e._node.ended && e._node.currentTime < e._stop ? setTimeout(i._ended.bind(i, e), 100) : (o = !(!e._loop && !i._sprite[o][2]), i._emit("end", e._id), !i._webAudio && o && i.stop(e._id, !0).play(e._id), i._webAudio && o && (i._emit("play", e._id), e._seek = e._start || 0, e._rateSeek = 0, e._playStart = f.ctx.currentTime, t = 1e3 * (e._stop - e._start) / Math.abs(e._rate), i._endTimers[e._id] = setTimeout(i._ended.bind(i, e), t)), i._webAudio && !o && (e._paused = !0, e._ended = !0, e._seek = e._start || 0, e._rateSeek = 0, i._clearTimer(e._id), i._cleanBuffer(e._node), f._autoSuspend()), i._webAudio || o || i.stop(e._id, !0)), i
			},
			_clearTimer: function(e) {
				var t, i = this;
				return i._endTimers[e] && ("function" != typeof i._endTimers[e] ? clearTimeout(i._endTimers[e]) : (t = i._soundById(e)) && t._node && t._node.removeEventListener("ended", i._endTimers[e], !1), delete i._endTimers[e]), i
			},
			_soundById: function(e) {
				for (var t = 0; t < this._sounds.length; t++)
					if (e === this._sounds[t]._id) return this._sounds[t];
				return null
			},
			_inactiveSound: function() {
				var e = this;
				e._drain();
				for (var t = 0; t < e._sounds.length; t++)
					if (e._sounds[t]._ended) return e._sounds[t].reset();
				return new a(e)
			},
			_drain: function() {
				var e = this,
					t = e._pool,
					i = 0,
					o = 0;
				if (!(e._sounds.length < t)) {
					for (o = 0; o < e._sounds.length; o++) e._sounds[o]._ended && i++;
					for (o = e._sounds.length - 1; 0 <= o; o--) {
						if (i <= t) return;
						e._sounds[o]._ended && (e._webAudio && e._sounds[o]._node && e._sounds[o]._node.disconnect(0), e._sounds.splice(o, 1), i--)
					}
				}
			},
			_getSoundIds: function(e) {
				if (void 0 !== e) return [e];
				for (var t = [], i = 0; i < this._sounds.length; i++) t.push(this._sounds[i]._id);
				return t
			},
			_refreshBuffer: function(e) {
				return e._node.bufferSource = f.ctx.createBufferSource(), e._node.bufferSource.buffer = r[this._src], e._panner ? e._node.bufferSource.connect(e._panner) : e._node.bufferSource.connect(e._node), e._node.bufferSource.loop = e._loop, e._loop && (e._node.bufferSource.loopStart = e._start || 0, e._node.bufferSource.loopEnd = e._stop || 0), e._node.bufferSource.playbackRate.setValueAtTime(e._rate, f.ctx.currentTime), this
			},
			_cleanBuffer: function(e) {
				var t = f._navigator && 0 <= f._navigator.vendor.indexOf("Apple");
				if (f._scratchBuffer && e.bufferSource && (e.bufferSource.onended = null, e.bufferSource.disconnect(0), t)) try {
					e.bufferSource.buffer = f._scratchBuffer
				} catch (e) {}
				return e.bufferSource = null, this
			},
			_clearSound: function(e) {
				/MSIE |Trident\//.test(f._navigator && f._navigator.userAgent) || (e.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA")
			}
		}, function(e) {
			this._parent = e, this.init()
		}),
		r = (a.prototype = {
			init: function() {
				var e = this,
					t = e._parent;
				return e._muted = t._muted, e._loop = t._loop, e._volume = t._volume, e._rate = t._rate, e._seek = 0, e._paused = !0, e._ended = !0, e._sprite = "__default", e._id = ++f._counter, t._sounds.push(e), e.create(), e
			},
			create: function() {
				var e = this,
					t = e._parent,
					i = f._muted || e._muted || e._parent._muted ? 0 : e._volume;
				return t._webAudio ? (e._node = void 0 === f.ctx.createGain ? f.ctx.createGainNode() : f.ctx.createGain(), e._node.gain.setValueAtTime(i, f.ctx.currentTime), e._node.paused = !0, e._node.connect(f.masterGain)) : (e._node = f._obtainHtml5Audio(), e._errorFn = e._errorListener.bind(e), e._node.addEventListener("error", e._errorFn, !1), e._loadFn = e._loadListener.bind(e), e._node.addEventListener(f._canPlayEvent, e._loadFn, !1), e._node.src = t._src, e._node.preload = "auto", e._node.volume = i * f.volume(), e._node.load()), e
			},
			reset: function() {
				var e = this,
					t = e._parent;
				return e._muted = t._muted, e._loop = t._loop, e._volume = t._volume, e._rate = t._rate, e._seek = 0, e._rateSeek = 0, e._paused = !0, e._ended = !0, e._sprite = "__default", e._id = ++f._counter, e
			},
			_errorListener: function() {
				var e = this;
				e._parent._emit("loaderror", e._id, e._node.error ? e._node.error.code : 0), e._node.removeEventListener("error", e._errorFn, !1)
			},
			_loadListener: function() {
				var e = this._parent;
				e._duration = Math.ceil(10 * this._node.duration) / 10, 0 === Object.keys(e._sprite).length && (e._sprite = {
					__default: [0, 1e3 * e._duration]
				}), "loaded" !== e._state && (e._state = "loaded", e._emit("load"), e._loadQueue()), this._node.removeEventListener(f._canPlayEvent, this._loadFn, !1)
			}
		}, {}),
		s = function(t) {
			var e = t._src;
			if (r[e]) t._duration = r[e].duration, c(t);
			else if (/^data:[^;]+;base64,/.test(e)) {
				for (var i = atob(e.split(",")[1]), o = new Uint8Array(i.length), n = 0; n < i.length; ++n) o[n] = i.charCodeAt(n);
				d(o.buffer, t)
			} else {
				var a = new XMLHttpRequest;
				a.open("GET", e, !0), a.withCredentials = t._xhrWithCredentials, a.responseType = "arraybuffer", a.onload = function() {
					var e = (a.status + "")[0];
					"0" !== e && "2" !== e && "3" !== e ? t._emit("loaderror", null, "Failed loading audio file with status: " + a.status + ".") : d(a.response, t)
				}, a.onerror = function() {
					t._webAudio && (t._html5 = !0, t._webAudio = !1, t._sounds = [], delete r[e], t.load())
				}, l(a)
			}
		},
		l = function(t) {
			try {
				t.send()
			} catch (e) {
				t.onerror()
			}
		},
		d = function(e, t) {
			function i() {
				t._emit("loaderror", null, "Decoding audio data failed.")
			}

			function o(e) {
				e && 0 < t._sounds.length ? (r[t._src] = e, c(t, e)) : i()
			}
			"undefined" != typeof Promise && 1 === f.ctx.decodeAudioData.length ? f.ctx.decodeAudioData(e).then(o).catch(i) : f.ctx.decodeAudioData(e, o, i)
		},
		c = function(e, t) {
			t && !e._duration && (e._duration = t.duration), 0 === Object.keys(e._sprite).length && (e._sprite = {
				__default: [0, 1e3 * e._duration]
			}), "loaded" !== e._state && (e._state = "loaded", e._emit("load"), e._loadQueue())
		},
		_ = function() {
			if (f.usingWebAudio) {
				try {
					"undefined" != typeof AudioContext ? f.ctx = new AudioContext : "undefined" != typeof webkitAudioContext ? f.ctx = new webkitAudioContext : f.usingWebAudio = !1
				} catch (e) {
					f.usingWebAudio = !1
				}
				f.ctx || (f.usingWebAudio = !1);
				var e = /iP(hone|od|ad)/.test(f._navigator && f._navigator.platform),
					t = f._navigator && f._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),
					t = t ? parseInt(t[1], 10) : null;
				e && t && t < 9 && (t = /safari/.test(f._navigator && f._navigator.userAgent.toLowerCase()), f._navigator && f._navigator.standalone && !t || f._navigator && !f._navigator.standalone && !t) && (f.usingWebAudio = !1), f.usingWebAudio && (f.masterGain = void 0 === f.ctx.createGain ? f.ctx.createGainNode() : f.ctx.createGain(), f.masterGain.gain.setValueAtTime(f._muted ? 0 : 1, f.ctx.currentTime), f.masterGain.connect(f.ctx.destination)), f._setup()
			}
		};
	"function" == typeof define && define.amd && define([], function() {
		return {
			Howler: f,
			Howl: t
		}
	}), "undefined" != typeof exports && (exports.Howler = f, exports.Howl = t), "undefined" != typeof window ? (window.HowlerGlobal = e, window.Howler = f, window.Howl = t, window.Sound = a) : "undefined" != typeof global && (global.HowlerGlobal = e, global.Howler = f, global.Howl = t, global.Sound = a)
}(), ! function() {
	"use strict";
	HowlerGlobal.prototype._pos = [0, 0, 0], HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0], HowlerGlobal.prototype.stereo = function(e) {
		var t = this;
		if (t.ctx && t.ctx.listener)
			for (var i = t._howls.length - 1; 0 <= i; i--) t._howls[i].stereo(e);
		return t
	}, HowlerGlobal.prototype.pos = function(e, t, i) {
		var o = this;
		return o.ctx && o.ctx.listener ? (t = "number" != typeof t ? o._pos[1] : t, i = "number" != typeof i ? o._pos[2] : i, "number" != typeof e ? o._pos : (o._pos = [e, t, i], void 0 !== o.ctx.listener.positionX ? (o.ctx.listener.positionX.setTargetAtTime(o._pos[0], Howler.ctx.currentTime, .1), o.ctx.listener.positionY.setTargetAtTime(o._pos[1], Howler.ctx.currentTime, .1), o.ctx.listener.positionZ.setTargetAtTime(o._pos[2], Howler.ctx.currentTime, .1)) : o.ctx.listener.setPosition(o._pos[0], o._pos[1], o._pos[2]), o)) : o
	}, HowlerGlobal.prototype.orientation = function(e, t, i, o, n, a) {
		var r, s = this;
		return s.ctx && s.ctx.listener ? (r = s._orientation, t = "number" != typeof t ? r[1] : t, i = "number" != typeof i ? r[2] : i, o = "number" != typeof o ? r[3] : o, n = "number" != typeof n ? r[4] : n, a = "number" != typeof a ? r[5] : a, "number" != typeof e ? r : (s._orientation = [e, t, i, o, n, a], void 0 !== s.ctx.listener.forwardX ? (s.ctx.listener.forwardX.setTargetAtTime(e, Howler.ctx.currentTime, .1), s.ctx.listener.forwardY.setTargetAtTime(t, Howler.ctx.currentTime, .1), s.ctx.listener.forwardZ.setTargetAtTime(i, Howler.ctx.currentTime, .1), s.ctx.listener.upX.setTargetAtTime(e, Howler.ctx.currentTime, .1), s.ctx.listener.upY.setTargetAtTime(t, Howler.ctx.currentTime, .1), s.ctx.listener.upZ.setTargetAtTime(i, Howler.ctx.currentTime, .1)) : s.ctx.listener.setOrientation(e, t, i, o, n, a), s)) : s
	}, Howl.prototype.init = (n = Howl.prototype.init, function(e) {
		var t = this;
		return t._orientation = e.orientation || [1, 0, 0], t._stereo = e.stereo || null, t._pos = e.pos || null, t._pannerAttr = {
			coneInnerAngle: void 0 !== e.coneInnerAngle ? e.coneInnerAngle : 360,
			coneOuterAngle: void 0 !== e.coneOuterAngle ? e.coneOuterAngle : 360,
			coneOuterGain: void 0 !== e.coneOuterGain ? e.coneOuterGain : 0,
			distanceModel: void 0 !== e.distanceModel ? e.distanceModel : "inverse",
			maxDistance: void 0 !== e.maxDistance ? e.maxDistance : 1e4,
			panningModel: void 0 !== e.panningModel ? e.panningModel : "HRTF",
			refDistance: void 0 !== e.refDistance ? e.refDistance : 1,
			rolloffFactor: void 0 !== e.rolloffFactor ? e.rolloffFactor : 1
		}, t._onstereo = e.onstereo ? [{
			fn: e.onstereo
		}] : [], t._onpos = e.onpos ? [{
			fn: e.onpos
		}] : [], t._onorientation = e.onorientation ? [{
			fn: e.onorientation
		}] : [], n.call(this, e)
	}), Howl.prototype.stereo = function(e, t) {
		var i = this;
		if (i._webAudio)
			if ("loaded" !== i._state) i._queue.push({
				event: "stereo",
				action: function() {
					i.stereo(e, t)
				}
			});
			else {
				var o = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
				if (void 0 === t) {
					if ("number" != typeof e) return i._stereo;
					i._stereo = e, i._pos = [e, 0, 0]
				}
				for (var n = i._getSoundIds(t), a = 0; a < n.length; a++) {
					var r = i._soundById(n[a]);
					if (r) {
						if ("number" != typeof e) return r._stereo;
						r._stereo = e, r._pos = [e, 0, 0], r._node && (r._pannerAttr.panningModel = "equalpower", r._panner && r._panner.pan || d(r, o), "spatial" == o ? void 0 !== r._panner.positionX ? (r._panner.positionX.setValueAtTime(e, Howler.ctx.currentTime), r._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime), r._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime)) : r._panner.setPosition(e, 0, 0) : r._panner.pan.setValueAtTime(e, Howler.ctx.currentTime)), i._emit("stereo", r._id)
					}
				}
			} return i
	}, Howl.prototype.pos = function(e, t, i, o) {
		var n = this;
		if (n._webAudio)
			if ("loaded" !== n._state) n._queue.push({
				event: "pos",
				action: function() {
					n.pos(e, t, i, o)
				}
			});
			else {
				if (t = "number" != typeof t ? 0 : t, i = "number" != typeof i ? -.5 : i, void 0 === o) {
					if ("number" != typeof e) return n._pos;
					n._pos = [e, t, i]
				}
				for (var a = n._getSoundIds(o), r = 0; r < a.length; r++) {
					var s = n._soundById(a[r]);
					if (s) {
						if ("number" != typeof e) return s._pos;
						s._pos = [e, t, i], s._node && (s._panner && !s._panner.pan || d(s, "spatial"), void 0 !== s._panner.positionX ? (s._panner.positionX.setValueAtTime(e, Howler.ctx.currentTime), s._panner.positionY.setValueAtTime(t, Howler.ctx.currentTime), s._panner.positionZ.setValueAtTime(i, Howler.ctx.currentTime)) : s._panner.setPosition(e, t, i)), n._emit("pos", s._id)
					}
				}
			} return n
	}, Howl.prototype.orientation = function(e, t, i, o) {
		var n = this;
		if (n._webAudio)
			if ("loaded" !== n._state) n._queue.push({
				event: "orientation",
				action: function() {
					n.orientation(e, t, i, o)
				}
			});
			else {
				if (t = "number" != typeof t ? n._orientation[1] : t, i = "number" != typeof i ? n._orientation[2] : i, void 0 === o) {
					if ("number" != typeof e) return n._orientation;
					n._orientation = [e, t, i]
				}
				for (var a = n._getSoundIds(o), r = 0; r < a.length; r++) {
					var s = n._soundById(a[r]);
					if (s) {
						if ("number" != typeof e) return s._orientation;
						s._orientation = [e, t, i], s._node && (s._panner || (s._pos || (s._pos = n._pos || [0, 0, -.5]), d(s, "spatial")), void 0 !== s._panner.orientationX ? (s._panner.orientationX.setValueAtTime(e, Howler.ctx.currentTime), s._panner.orientationY.setValueAtTime(t, Howler.ctx.currentTime), s._panner.orientationZ.setValueAtTime(i, Howler.ctx.currentTime)) : s._panner.setOrientation(e, t, i)), n._emit("orientation", s._id)
					}
				}
			} return n
	}, Howl.prototype.pannerAttr = function() {
		var e, t, i, o = this,
			n = arguments;
		if (o._webAudio) {
			if (0 === n.length) return o._pannerAttr;
			if (1 === n.length) {
				if ("object" != typeof n[0]) return ((i = o._soundById(parseInt(n[0], 10))) || o)._pannerAttr;
				e = n[0], void 0 === t && (e.pannerAttr || (e.pannerAttr = {
					coneInnerAngle: e.coneInnerAngle,
					coneOuterAngle: e.coneOuterAngle,
					coneOuterGain: e.coneOuterGain,
					distanceModel: e.distanceModel,
					maxDistance: e.maxDistance,
					refDistance: e.refDistance,
					rolloffFactor: e.rolloffFactor,
					panningModel: e.panningModel
				}), o._pannerAttr = {
					coneInnerAngle: void 0 !== e.pannerAttr.coneInnerAngle ? e.pannerAttr.coneInnerAngle : o._coneInnerAngle,
					coneOuterAngle: void 0 !== e.pannerAttr.coneOuterAngle ? e.pannerAttr.coneOuterAngle : o._coneOuterAngle,
					coneOuterGain: void 0 !== e.pannerAttr.coneOuterGain ? e.pannerAttr.coneOuterGain : o._coneOuterGain,
					distanceModel: void 0 !== e.pannerAttr.distanceModel ? e.pannerAttr.distanceModel : o._distanceModel,
					maxDistance: void 0 !== e.pannerAttr.maxDistance ? e.pannerAttr.maxDistance : o._maxDistance,
					refDistance: void 0 !== e.pannerAttr.refDistance ? e.pannerAttr.refDistance : o._refDistance,
					rolloffFactor: void 0 !== e.pannerAttr.rolloffFactor ? e.pannerAttr.rolloffFactor : o._rolloffFactor,
					panningModel: void 0 !== e.pannerAttr.panningModel ? e.pannerAttr.panningModel : o._panningModel
				})
			} else 2 === n.length && (e = n[0], t = parseInt(n[1], 10));
			for (var a, r, s = o._getSoundIds(t), l = 0; l < s.length; l++)(i = o._soundById(s[l])) && (a = i._pannerAttr, a = {
				coneInnerAngle: (void 0 !== e.coneInnerAngle ? e : a).coneInnerAngle,
				coneOuterAngle: (void 0 !== e.coneOuterAngle ? e : a).coneOuterAngle,
				coneOuterGain: (void 0 !== e.coneOuterGain ? e : a).coneOuterGain,
				distanceModel: (void 0 !== e.distanceModel ? e : a).distanceModel,
				maxDistance: (void 0 !== e.maxDistance ? e : a).maxDistance,
				refDistance: (void 0 !== e.refDistance ? e : a).refDistance,
				rolloffFactor: (void 0 !== e.rolloffFactor ? e : a).rolloffFactor,
				panningModel: (void 0 !== e.panningModel ? e : a).panningModel
			}, (r = i._panner) ? (r.coneInnerAngle = a.coneInnerAngle, r.coneOuterAngle = a.coneOuterAngle, r.coneOuterGain = a.coneOuterGain, r.distanceModel = a.distanceModel, r.maxDistance = a.maxDistance, r.refDistance = a.refDistance, r.rolloffFactor = a.rolloffFactor, r.panningModel = a.panningModel) : (i._pos || (i._pos = o._pos || [0, 0, -.5]), d(i, "spatial")))
		}
		return o
	}, Sound.prototype.init = (o = Sound.prototype.init, function() {
		var e = this,
			t = e._parent;
		e._orientation = t._orientation, e._stereo = t._stereo, e._pos = t._pos, e._pannerAttr = t._pannerAttr, o.call(this), e._stereo ? t.stereo(e._stereo) : e._pos && t.pos(e._pos[0], e._pos[1], e._pos[2], e._id)
	}), Sound.prototype.reset = (i = Sound.prototype.reset, function() {
		var e = this,
			t = e._parent;
		return e._orientation = t._orientation, e._stereo = t._stereo, e._pos = t._pos, e._pannerAttr = t._pannerAttr, e._stereo ? t.stereo(e._stereo) : e._pos ? t.pos(e._pos[0], e._pos[1], e._pos[2], e._id) : e._panner && (e._panner.disconnect(0), e._panner = void 0, t._refreshBuffer(e)), i.call(this)
	});
	var i, o, n, d = function(e, t) {
		"spatial" === (t = t || "spatial") ? (e._panner = Howler.ctx.createPanner(), e._panner.coneInnerAngle = e._pannerAttr.coneInnerAngle, e._panner.coneOuterAngle = e._pannerAttr.coneOuterAngle, e._panner.coneOuterGain = e._pannerAttr.coneOuterGain, e._panner.distanceModel = e._pannerAttr.distanceModel, e._panner.maxDistance = e._pannerAttr.maxDistance, e._panner.refDistance = e._pannerAttr.refDistance, e._panner.rolloffFactor = e._pannerAttr.rolloffFactor, e._panner.panningModel = e._pannerAttr.panningModel, void 0 !== e._panner.positionX ? (e._panner.positionX.setValueAtTime(e._pos[0], Howler.ctx.currentTime), e._panner.positionY.setValueAtTime(e._pos[1], Howler.ctx.currentTime), e._panner.positionZ.setValueAtTime(e._pos[2], Howler.ctx.currentTime)) : e._panner.setPosition(e._pos[0], e._pos[1], e._pos[2]), void 0 !== e._panner.orientationX ? (e._panner.orientationX.setValueAtTime(e._orientation[0], Howler.ctx.currentTime), e._panner.orientationY.setValueAtTime(e._orientation[1], Howler.ctx.currentTime), e._panner.orientationZ.setValueAtTime(e._orientation[2], Howler.ctx.currentTime)) : e._panner.setOrientation(e._orientation[0], e._orientation[1], e._orientation[2])) : (e._panner = Howler.ctx.createStereoPanner(), e._panner.pan.setValueAtTime(e._stereo, Howler.ctx.currentTime)), e._panner.connect(e._node), e._paused || e._parent.pause(e._id, !0).play(e._id, !0)
	}
}(), ! function(e) {
	var t, i, o = !1;
	"function" == typeof define && define.amd && (define(e), o = !0), "object" == typeof exports && (module.exports = e(), o = !0), o || (t = window.Cookies, (i = window.Cookies = e()).noConflict = function() {
		return window.Cookies = t, i
	})
}(function() {
	function v() {
		for (var e = 0, t = {}; e < arguments.length; e++) {
			var i, o = arguments[e];
			for (i in o) t[i] = o[i]
		}
		return t
	}
	return function e(u) {
		function h(e, t, i) {
			var o, n;
			if ("undefined" != typeof document) {
				if (1 < arguments.length) {
					"number" == typeof(i = v({
						path: "/"
					}, h.defaults, i)).expires && ((n = new Date).setMilliseconds(n.getMilliseconds() + 864e5 * i.expires), i.expires = n), i.expires = i.expires ? i.expires.toUTCString() : "";
					try {
						o = JSON.stringify(t), /^[\{\[]/.test(o) && (t = o)
					} catch (e) {}
					t = u.write ? u.write(t, e) : encodeURIComponent(String(t)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent), e = (e = (e = encodeURIComponent(String(e))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape);
					var a, r = "";
					for (a in i) i[a] && (r += "; " + a, !0 !== i[a]) && (r += "=" + i[a]);
					return document.cookie = e + "=" + t + r
				}
				e || (o = {});
				for (var s = document.cookie ? document.cookie.split("; ") : [], l = /(%[0-9A-Z]{2})+/g, d = 0; d < s.length; d++) {
					var c = s[d].split("=");
					'"' === (p = c.slice(1).join("=")).charAt(0) && (p = p.slice(1, -1));
					try {
						var _ = c[0].replace(l, decodeURIComponent),
							p = u.read ? u.read(p, _) : u(p, _) || p.replace(l, decodeURIComponent);
						if (this.json) try {
							p = JSON.parse(p)
						} catch (e) {}
						if (e === _) {
							o = p;
							break
						}
						e || (o[_] = p)
					} catch (e) {}
				}
				return o
			}
		}
		return (h.set = h).get = function(e) {
			return h.call(h, e)
		}, h.getJSON = function() {
			return h.apply({
				json: !0
			}, [].slice.call(arguments))
		}, h.defaults = {}, h.remove = function(e, t) {
			h(e, "", v(t, {
				expires: -1
			}))
		}, h.withConverter = e, h
	}(function() {})
}), ! function() {
	"use strict";
	var a = "undefined" != typeof window && void 0 !== window.document ? window.document : {},
		e = "undefined" != typeof module && module.exports,
		n = function() {
			for (var e, t = [
					["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"],
					["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"],
					["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"],
					["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"],
					["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]
				], i = 0, o = t.length, n = {}; i < o; i++)
				if ((e = t[i]) && e[1] in a) {
					for (i = 0; i < e.length; i++) n[t[0][i]] = e[i];
					return n
				} return !1
		}(),
		i = {
			change: n.fullscreenchange,
			error: n.fullscreenerror
		},
		t = {
			request: function(o) {
				return new Promise(function(e, t) {
					var i = function() {
						this.off("change", i), e()
					}.bind(this);
					this.on("change", i), o = o || a.documentElement, Promise.resolve(o[n.requestFullscreen]()).catch(t)
				}.bind(this))
			},
			exit: function() {
				return new Promise(function(e, t) {
					var i;
					this.isFullscreen ? (i = function() {
						this.off("change", i), e()
					}.bind(this), this.on("change", i), Promise.resolve(a[n.exitFullscreen]()).catch(t)) : e()
				}.bind(this))
			},
			toggle: function(e) {
				return this.isFullscreen ? this.exit() : this.request(e)
			},
			onchange: function(e) {
				this.on("change", e)
			},
			onerror: function(e) {
				this.on("error", e)
			},
			on: function(e, t) {
				e = i[e];
				e && a.addEventListener(e, t, !1)
			},
			off: function(e, t) {
				e = i[e];
				e && a.removeEventListener(e, t, !1)
			},
			raw: n
		};
	n ? (Object.defineProperties(t, {
		isFullscreen: {
			get: function() {
				return Boolean(a[n.fullscreenElement])
			}
		},
		element: {
			enumerable: !0,
			get: function() {
				return a[n.fullscreenElement]
			}
		},
		isEnabled: {
			enumerable: !0,
			get: function() {
				return Boolean(a[n.fullscreenEnabled])
			}
		}
	}), e ? module.exports = t : window.screenfull = t) : e ? module.exports = {
		isEnabled: !1
	} : window.screenfull = {
		isEnabled: !1
	}
}();
var jv = {};

function loadScript(e, t) {
	var i = document.createElement("script");
	i.type = "text/javascript", i.readyState ? i.onreadystatechange = function() {
		"loaded" != i.readyState && "complete" != i.readyState || (i.onreadystatechange = null, t())
	} : i.onload = function() {
		t()
	}, i.src = e, document.getElementsByTagName("head")[0].appendChild(i)
}
jv.assets = [], jv.state = "init", jv.pixiver = 4, jv.fps = 0, jv.load = function(e) {
	jv.assets.push(e)
}, jv.include = function(e) {
	jv.includes += 1, loadScript(e, jv.include_loaded)
}, jv.include_loaded = function() {
	--jv.includes
}, jv.fps_obj = {
	startTime: 0,
	frameNumber: 0,
	getFPS: function() {
		this.frameNumber++;
		var e = (new Date).getTime(),
			t = (e - this.startTime) / 1e3,
			i = Math.round(this.frameNumber / t);
		return 1 < t && (this.startTime = e, this.frameNumber = 0), i
	}
}, jv.frame = function() {
	requestAnimationFrame(jv.frame), jv.fps_num = jv.fps_obj.getFPS(), jv.loop(), jv.renderer.render(jv.stage)
}, jv.add = jv.addChild = function(e) {
	jv.stage.addChild(e)
}, jv.gpu_detect = function(e) {
	var t, i, o = document.createElement("canvas");
	try {
		i = o.getContext("webgl") || o.getContext("experimental-webgl")
	} catch (e) {}
	return !(!i || (o = i.getExtension("WEBGL_debug_renderer_info"), t = i.getParameter(o.UNMASKED_VENDOR_WEBGL), i = i.getParameter(o.UNMASKED_RENDERER_WEBGL), -1 === t.indexOf(e) && -1 === i.indexOf(e)))
}, jv.screen = function(e, t) {
	var i = jv.gpu_detect("Mali-400");
	jv.renderer = new PIXI.autoDetectRenderer(e, t, {
		antialias: !1,
		view: document.getElementById("jv"),
		preserveDrawingBuffer: i,
		roundPixels: !0
	}), PIXI.SCALE_MODES.DEFAULT = PIXI.SCALE_MODES.NEAREST, jv.stage = new PIXI.Container, jv.stage.scaleMode = PIXI.SCALE_MODES.NEAREST, jv.stage.interactive = !0, jv.stage.hitArea = new PIXI.Rectangle(0, 0, e, t), jv.mouseDown = !1, jv.stage.mousedown = function() {
		jv.mouseDown = !0
	}, jv.stage.mouseup = function() {
		jv.mouseDown = !1
	}, jv.mouse = jv.renderer.plugins.interaction.mouse.global
}, jv.image = function(e) {
	return PIXI.Texture.fromImage(e)
}, jv.scene = function() {
	return new PIXI.Container
}, jv.text = function(e, t) {
	return void 0 === t && (t = {
		font: "24px Verdana",
		fill: "white"
	}), new PIXI.Text(e, t)
}, jv.spritesheet = function(e, t, i, o) {
	for (var n, a, r, e = "string" == typeof e ? PIXI.TextureCache[e] : e, s = (1 === e.baseTexture.width && (e.baseTexture = PIXI.Texture.WHITE), e.baseTexture), l = (24 == t && 32 == i && 128 != s.width && (t = Math.floor(s.width / 3), i = Math.floor(s.height / 4), o = 2), s.scaleMode = e.baseTexture.scaleMode = PIXI.SCALE_MODES.NEAREST, o && (4 == jv.pixiver ? (n = new PIXI.BaseRenderTexture(s.width * o, s.height * o, PIXI.SCALE_MODES.NEAREST, 1), n = new PIXI.RenderTexture(n), (a = new PIXI.Sprite.from(s)).scale.x = o, a.scale.y = o, jv.renderer.render(a, n)) : (n = new PIXI.RenderTexture(jv.renderer, s.width * o, s.height * o, PIXI.SCALE_MODES.NEAREST, 1), a = new PIXI.Sprite(e), e = new PIXI.Container, a.scale.x = o, a.scale.y = o, e.addChild(a), n.render(e)), s = n.baseTexture, t *= o, i *= o), []), d = 0; d < Math.floor(s.width / t); d++)
		for (null == l[d] && (l[d] = []), r = 0; r < Math.floor(s.height / i); r++) l[d][r] = new PIXI.Texture(s, new PIXI.Rectangle(d * t, r * i, t, i));
	return l
}, jv.sprite = function(e) {
	return new("string" == typeof e ? PIXI.Sprite.fromImage : PIXI.Sprite)(e)
}, jv.bringToFront = function(e) {
	var t;
	e.parent && ((t = e.parent).removeChild(e), t.addChild(e))
}, jv.prevent = function(e) {
	return e.preventDefault(), 1
}, jv.key_array = [], jv.keyboard = function(e) {
	var t = {};
	return jv.key_array.push(t), t.code = e, t.isDown = !1, t.isUp = !0, t.press = void 0, t.release = void 0, t.downHandler = function(e) {
		jv.prevent(e) && e.keyCode === t.code && (t.isUp && t.press && t.press(), t.isDown = !0, t.isUp = !1)
	}, t.upHandler = function(e) {
		jv.prevent(e) && e.keyCode === t.code && (t.isDown && t.release && t.release(), t.isDown = !1, t.isUp = !0)
	}, window.addEventListener("keydown", t.downHandler.bind(t), !1), window.addEventListener("keyup", t.upHandler.bind(t), !1), t
}, jv.unzip = function(e) {
	for (var t = {}, i = (e + "").split(""), o = i[0], n = o, a = [o], r = 57344, s = 1; s < i.length; s++) {
		var l = i[s].charCodeAt(0),
			l = l < 57344 ? i[s] : t[l] || n + o;
		a.push(l), o = l.charAt(0), t[r] = n + o, r++, n = l
	}
	return a.join("")
}, jv.zip = function(e) {
	for (var t, i = {}, o = (e + "").split(""), n = [], a = o[0], r = 57344, s = 1; s < o.length; s++) null != i[a + (t = o[s])] ? a += t : (n.push(1 < a.length ? i[a] : a.charCodeAt(0)), i[a + t] = r, r++, a = t);
	n.push(1 < a.length ? i[a] : a.charCodeAt(0));
	for (s = 0; s < n.length; s++) n[s] = String.fromCharCode(n[s]);
	return n.join("")
}, jv.random = function(e, t) {
	return Math.floor(Math.random() * t + e)
}, jv.toString = function(e) {
	return JSON.stringify(e)
}, jv.fromString = function(e) {
	return JSON.parse(e)
}, jv.hit = function(e, t) {
	var i, o, n;
	return e.centerX = e.x + e.width / 2, e.centerY = e.y + e.height / 2, t.centerX = t.x + t.width / 2, t.centerY = t.y + t.height / 2, e.halfWidth = e.width / 2, e.halfHeight = e.height / 2, t.halfWidth = t.width / 2, t.halfHeight = t.height / 2, o = e.centerX - t.centerX, n = e.centerY - t.centerY, i = e.halfWidth + t.halfWidth, e = e.halfHeight + t.halfHeight, Math.abs(o) < i && Math.abs(n) < e
};
var Warehouse = {
		create: function(e) {
			var t = {
				items: [],
				next_id: 0
			};
			return t.index = e = void 0 === e ? "wid" : e, t.add = function(e) {
				e[this.index] = this.next_id++, e.array_obj = this, e.remove = function() {
					this.ref && (this.ref[this.id] = null), this.array_obj.items[this.array_index] = null
				};
				for (var t = this.items.length, i = 0; i < t; i++)
					if (!this.items[i]) return e.array_index = i, void(this.items[i] = e);
				e.array_index = this.items.length, this.items.push(e)
			}, t.fetch = function(e, t) {
				void 0 === t && (t = this.index);
				for (var i = this.items.length, o = 0; o < i; o++)
					if (this.items[o] && this.items[o][t] == e) return this.items[o];
				return i && null === this.items[i - 1] && (this.items.length = i - 1), null
			}, t.process = function(e) {
				for (var t = this.items.length, i = 0; i < t; i++) this.items[i] && e(this.items[i]);
				t && null === this.items[t - 1] && (this.items.length = t - 1)
			}, t
		}
	},
	Effect = (jv.Shelf = {
		create: function(e, t) {
			var i = {
				items: [],
				hole: [],
				next_id: 1
			};
			return i.label = e, i.useid = t, i.add = function(e) {
				this.hole.length ? e[this.label] = this.hole.pop() : e[this.label] = this.items.length, this.useid && (e.id = this.next_id++), this.items[e[this.label]] = e
			}, i.remove = function(e) {
				void 0 !== e[this.label] && (e[this.label] == this.items.length - 1 ? (this.items[e[this.label]] = null, this.items.length--) : (this.hole[this.hole.length] = e[this.label], this.items[e[this.label]] = null), delete e[this.label])
			}, i.fetch = function(e) {
				for (var t = this.items.length, i = 0; i < t; i++)
					if (this.items[i] && this.items[i].id == e) return this.items[i];
				return null
			}, i.exists = function(e) {
				return null != e[this.label]
			}, i.process = function(e) {
				var t, i = this.items.length;
				if (this.hole.length)
					for (t = 0; t < i; t++) this.items[t] && e(this.items[t]);
				else
					for (t = 0; t < i; t++) e(this.items[t])
			}, i
		}
	}, {
		create: function(e, t) {
			var i = {};
			return i.x = Math.floor(e / 32), i.y = Math.floor(t / 32), i.life = 5, i.sprite = 155, i.draw = function() {}, i.update = function() {
				this.life--, this.life <= 0 && this.destroy()
			}, i
		}
	}),
	Tile = {
		sprite: 0,
		x: 0,
		y: 0
	},
	Map = {
		create: function(e, t, i) {
			var o = {
				map: [
					[]
				]
			};
			return o.container = e, o.sheet = t, o.sheet_width = i, o.get = function(e, t) {
				return null == this.map[e] && (this.map[e] = []), this.map[e][t]
			}, o.set = function(e, t, i, o) {
				var n = jv.sprite(this.sheet[i][o]);
				return n.sprite = i + o * this.sheet_width, null == this.map[e] && (this.map[e] = []), null != n.x && (null != this.map[e][t] && null != this.map[e][t].x && this.map[e][t].parent.removeChild(this.map[e][t]), n.x = e * n.width, n.y = t * n.height), this.map[e][t] = n, this.container.addChild(n), n
			}, o.clear = function() {
				this.process(function(e, t, i) {
					null != i && null != i.x && i.parent.removeChild(i)
				}), this.map = [
					[]
				]
			}, o.load = function(e) {
				for (var t in this.clear(), e = "string" == typeof e ? jv.fromString(e) : e)
					for (var i in e[t]) null != e[t][i] && null != e[t][i] && this.set(t, i, e[t][i] % this.sheet_width, Math.floor(e[t][i] / this.sheet_width))
			}, o.raw = function() {
				var e, t = [];
				for (e in this.map)
					for (var i in null == this.map[e] && (this.map[e] = []), t[e] = [], this.map[e]) t[e][i] = this.map[e][i].sprite;
				return t
			}, o.process = function(e) {
				for (var t in this.map)
					for (var i in null == this.map[t] && (this.map[t] = []), this.map[t]) null != this.map[t][i] && e(t, i, this.map[t][i])
			}, o.draw = function() {}, o
		}
	},
	game_load = (jv.base64_encode = function(e) {
		if ("undefined" == typeof window) return new Buffer(e).toString("base64");
		if (void 0 !== window.btoa) return window.btoa(decodeURIComponent(encodeURIComponent(e)));
		var t, i, o, n, a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
			r = 0,
			s = 0,
			l = "",
			d = [];
		if (!e) return e;
		for (e = decodeURIComponent(encodeURIComponent(e)); t = (n = e.charCodeAt(r++) << 16 | e.charCodeAt(r++) << 8 | e.charCodeAt(r++)) >> 12 & 63, i = n >> 6 & 63, o = 63 & n, d[s++] = a.charAt(n >> 18 & 63) + a.charAt(t) + a.charAt(i) + a.charAt(o), r < e.length;);
		var l = d.join(""),
			c = e.length % 3;
		return (c ? l.slice(0, c - 3) : l) + "===".slice(c || 3)
	}, jv.base64_decode = function(e) {
		if ("undefined" == typeof window) return new Buffer(e, "base64").toString("utf-8");
		if (void 0 !== window.atob) return decodeURIComponent(encodeURIComponent(window.atob(e)));
		var t, i, o, n, a, r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
			s = 0,
			l = 0,
			d = "",
			c = [];
		if (!e) return e;
		for (e += ""; t = (a = r.indexOf(e.charAt(s++)) << 18 | r.indexOf(e.charAt(s++)) << 12 | (o = r.indexOf(e.charAt(s++))) << 6 | (n = r.indexOf(e.charAt(s++)))) >> 16 & 255, i = a >> 8 & 255, a = 255 & a, c[l++] = 64 === o ? String.fromCharCode(t) : 64 === n ? String.fromCharCode(t, i) : String.fromCharCode(t, i, a), s < e.length;);
		return d = c.join(""), decodeURIComponent(encodeURIComponent(d.replace(/\0+$/, "")))
	}, function() {
		var e = document.getElementById("mlloader");
		e && (e.outerHTML = "", delete e), "init" === jv.state && (jv.state = "scripts", jv.init && jv.init(), jv.loop && jv.frame(), jv.state = "loading", jv.retry_assets = [], PIXI.loader.onError.add(function(e, t, i) {
			console.log("Loaded : " + t.progress + "%, name : " + i.name + ", url : " + i.url), console.log(JSON.stringify(e)), PIXI.loader.resources[i.name] = new PIXI.Sprite
		}), PIXI.loader.add(jv.assets).load(jv.ready), void 0 !== load_progress) && PIXI.loader.on("progress", load_progress)
	}),
	version = "5.1.2",
	vt = ("undefined" != typeof mlmeta && (version = mlmeta.version), "?v=" + version),
	path = "",
	res = (window.location && window.location.host && -1 !== window.location.host.indexOf("mysteralegacy.com") && (path = "/"), []),
	debugging = 0,
	clothes_fixed = [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16],
	clothes_hooded = [5, 9, 12, 14],
	hair_fixed = [6, 11, 12, 16, 17, 19, 20, 21, 22],
	hair_front = [10, 14],
	max_clothes = 16,
	max_body = 9,
	max_hair = 22,
	max_costume = 148,
	phone = (jv.selected_ip = "use.mysteralegacy.com", jv.update_x = 18, jv.update_y = 13, jv.update_map_width = 2 * jv.update_x, jv.update_map_height = 2 * jv.update_y, !!window.cordova);
phone ? (path = "", Howler.mobileAutoEnable = !0, document.addEventListener("deviceready", game_load)) : window.onload = game_load, res.push(path + "data/body/e1.png" + vt);
for (var i = 1; i <= max_body; i++) res.push(path + "data/body/b" + i + ".png" + vt);
for (var i = 1; i <= max_clothes; i++) res.push(path + "data/clothes/c" + i + "_a.png" + vt), -1 != clothes_fixed.indexOf(i) && res.push(path + "data/clothes/c" + i + "_b.png" + vt);
for (var i = 1; i <= max_hair; i++) res.push(path + "data/hair/h" + i + "_a.png" + vt), -1 != hair_fixed.indexOf(i) && res.push(path + "data/hair/h" + i + "_b.png" + vt), -1 != hair_front.indexOf(i) && res.push(path + "data/hair/h" + i + "_c.png" + vt);
for (var i = 1; i <= max_costume; i++) res.push(path + "data/monsters/" + i + ".png" + vt);
var tile_path = path,
	res = res.concat([path + "data/misc/splash_screen.jpg" + vt, path + "data/misc/mapfont.fnt" + vt, tile_path + "data/misc/tile16.png" + vt, tile_path + "data/misc/item16.png" + vt, path + "data/misc/compass.png" + vt, path + "data/misc/button.png" + vt, path + "data/misc/star.png" + vt, path + "data/misc/edges.png" + vt, path + "data/misc/chat_say.png" + vt, path + "data/misc/chat_tell.png" + vt, path + "data/misc/chat_global.png" + vt, path + "data/misc/chat_tribe.png" + vt, path + "data/misc/chat_party.png" + vt, path + "data/misc/sound_icon.png" + vt, path + "data/misc/music_icon.png" + vt, path + "data/misc/color.png" + vt, path + "data/misc/buffs.png" + vt]),
	sound = (jv.load(res), []),
	load_sounds = function() {
		sound.swish = [new Howl({
			src: [path + "sounds/swish.mp3"]
		}), new Howl({
			src: [path + "sounds/swish2.mp3"]
		})], sound.pickaxe = [new Howl({
			src: [path + "sounds/pickaxe1.mp3"]
		}), new Howl({
			src: [path + "sounds/pickaxe2.mp3"]
		})], sound.shovel = [new Howl({
			src: [path + "sounds/shovel1.mp3"]
		}), new Howl({
			src: [path + "sounds/shovel2.mp3"]
		})], sound.chop = [new Howl({
			src: [path + "sounds/chop.mp3"]
		})], sound.drop = [new Howl({
			src: [path + "sounds/drop.mp3"]
		})], sound.bush = [new Howl({
			src: [path + "sounds/berry.mp3"]
		})], sound.hammer = [new Howl({
			src: [path + "sounds/hammer_wall.mp3"]
		})], sound.blood = [new Howl({
			src: [path + "sounds/slap.mp3"]
		})], sound.hit = [new Howl({
			src: [path + "sounds/punch.mp3"]
		})], sound.crit = [new Howl({
			src: [path + "sounds/splatter.mp3"]
		})], sound.stab = [new Howl({
			src: [path + "sounds/stab.mp3"]
		})], sound.sword_equip = [new Howl({
			src: [path + "sounds/sword_equip.mp3"]
		})], sound.chicken = [new Howl({
			src: [path + "sounds/chicken.mp3"]
		})], sound.chick = [new Howl({
			src: [path + "sounds/chick.mp3"]
		})], sound.water = [new Howl({
			src: [path + "sounds/water.mp3"]
		})], sound.water_pour = [new Howl({
			src: [path + "sounds/water_pour.mp3"]
		})], sound.cow = [new Howl({
			src: [path + "sounds/cow1.mp3"]
		}), new Howl({
			src: [path + "sounds/cow2.mp3"]
		})], sound.sheep = [new Howl({
			src: [path + "sounds/sheep.mp3"]
		})], sound.door_open = [new Howl({
			src: [path + "sounds/door_open.mp3"]
		})], sound.door_close = [new Howl({
			src: [path + "sounds/door_close.mp3"]
		})], sound.cooking = [new Howl({
			src: [path + "sounds/cooking.mp3"]
		})], sound.shield_block = [new Howl({
			src: [path + "sounds/shieldblock1.mp3"]
		}), new Howl({
			src: [path + "sounds/shieldblock2.mp3"]
		})], sound.death = [new Howl({
			src: [path + "sounds/death_animal.mp3"]
		})], sound.arrow = [new Howl({
			src: [path + "sounds/arrow.mp3"]
		})], sound.knitting = [new Howl({
			src: [path + "sounds/knitting.mp3"]
		})], sound.thud = [new Howl({
			src: [path + "sounds/thud.mp3"]
		})], sound.building = [new Howl({
			src: [path + "sounds/building.mp3"]
		})], sound.twinkle = [new Howl({
			src: [path + "sounds/twinkle.mp3"]
		})], sound.woosh = [new Howl({
			src: [path + "sounds/woosh.mp3"]
		})], sound.swoosh = [new Howl({
			src: [path + "sounds/swoosh.mp3"]
		})], sound.restore = [new Howl({
			src: [path + "sounds/restore.mp3"]
		})], sound.level = [new Howl({
			src: [path + "sounds/level.mp3"]
		})], sound.fireball = [new Howl({
			src: [path + "sounds/fireball.mp3"]
		})], sound.whip = [new Howl({
			src: [path + "sounds/whip.mp3"]
		})], sound.steps = [new Howl({
			src: [path + "sounds/steps.mp3"]
		})], sound.eat = [new Howl({
			src: [path + "sounds/eating1.mp3"]
		}), new Howl({
			src: [path + "sounds/eating2.mp3"]
		})], sound.click = [new Howl({
			src: [path + "sounds/click.mp3"]
		})], sound.myst = [new Howl({
			src: [path + "sounds/myst1.mp3"]
		}), new Howl({
			src: [path + "sounds/myst2.mp3"]
		})], sound.rain = [new Howl({
			src: [path + "sounds/rain.mp3"]
		})], sound.dash = [new Howl({
			src: [path + "sounds/dash.mp3"]
		})], sound.barrier = [new Howl({
			src: [path + "sounds/barrier.mp3"]
		})], sound.pages = [new Howl({
			src: [path + "sounds/pages.mp3"]
		})], sound.skill_up = [new Howl({
			src: [path + "sounds/skill_up.mp3"]
		})], sound.swap = [new Howl({
			src: [path + "sounds/swap.mp3"]
		})], sound.pop = [new Howl({
			src: [path + "sounds/pop.mp3"]
		})], sound.beepup = [new Howl({
			src: [path + "sounds/beepup.mp3"]
		})], sound.beepdown = [new Howl({
			src: [path + "sounds/beepdown.mp3"]
		})]
	},
	music = [],
	show_fps = (jv.current_song = null, jv.music_volume = .4, jv.sound_volume = .5, jv.chatters = [], Howler.volume(.75), 0),
	show_ping = (debugging && (show_fps = 1), 0),
	GAME_INIT = (debugging && (show_ping = 1), 0),
	GAME_TITLE = 1,
	GAME_PLAYING = 2,
	me = -1,
	myself, family, fps, fps_time, fps_frames = 0,
	game_state = GAME_INIT,
	editor, editing = 0,
	inputting = 0,
	action = 0,
	dest = -1,
	last_ping = Date.now(),
	last_pong = last_ping,
	ping_count = 0,
	ping = 0,
	dlevel = "",
	cur_wall = 0,
	cur_cover = 0,
	last_dest = 0,
	has_focus = 1,
	has_quit = 0,
	drag = void 0,
	sound_on = 1,
	select = 0,
	build_type = "",
	build_page = 0,
	cave_wall = 175,
	cave_floor = 73,
	keyRight = jv.keyboard(39),
	keyLeft = jv.keyboard(37),
	keyUp = jv.keyboard(38),
	keyDown = jv.keyboard(40),
	keyCtrl = jv.keyboard(17),
	keyShift = jv.keyboard(16),
	keySpace = jv.keyboard(32),
	keyEnter = jv.keyboard(13),
	keyEscape = jv.keyboard(27),
	keyQ = jv.keyboard(81),
	keyE = jv.keyboard(69),
	keyR = jv.keyboard(82),
	keyT = jv.keyboard(84),
	keyF = jv.keyboard(70),
	keyW = jv.keyboard(87),
	keyA = jv.keyboard(65),
	keyS = jv.keyboard(83),
	keyD = jv.keyboard(68),
	keyC = jv.keyboard(67),
	keyB = jv.keyboard(66),
	keyI = jv.keyboard(73),
	keyK = jv.keyboard(75),
	keyU = jv.keyboard(85),
	keyM = jv.keyboard(77),
	key1 = jv.keyboard(49),
	key2 = jv.keyboard(50),
	key3 = jv.keyboard(51),
	key4 = jv.keyboard(52),
	key5 = jv.keyboard(53),
	key6 = jv.keyboard(54),
	key7 = jv.keyboard(55),
	key8 = jv.keyboard(56),
	key9 = jv.keyboard(57),
	keyComma = jv.keyboard(188),
	keyPeriod = jv.keyboard(190),
	keySlash = jv.keyboard(191),
	keyBackslash = jv.keyboard(220),
	keyBracket = jv.keyboard(221),
	keyQuote = jv.keyboard(222),
	keyTab = jv.keyboard(9),
	connection, theme, myName = (jv.hot_slot = [0, 2, 4, 1, 3, 5], !1),
	mobs = jv.Shelf.create("sm"),
	objects = jv.Shelf.create("so"),
	effects = jv.Shelf.create("se"),
	hp_status, skill_status, exp_status, hunger_status, object_dict = [],
	player_dict = [],
	effect_dict = [],
	obj_ref = [],
	mob_ref = [],
	map = [],
	MAP_WIDTH = 100,
	MAP_HEIGHT = 100,
	item_length = 15,
	build_length = 15,
	view_width = 17,
	view_height = 13,
	hero_x = 224,
	hero_y = 224,
	mx = 0,
	my = 0,
	center_x, center_y, last_status, now = Date.now(),
	animation_timer = Date.now(),
	heading = "",
	drop_amt = "all",
	last_tell = "",
	master_container, map_container, object_container, player_container, anim_map_container, edge_container, effect_container, hover_container, ui_container, cover = [],
	map_index = {},
	item_page = 0,
	item_data = [],
	inv = [],
	bld = [],
	build_data = [],
	space_timer = (tile_speed = {}, Date.now()),
	space_toggle = 0,
	update_sort = 1,
	last_sort = 0,
	is_chatting = 0,
	monster = [],
	chars = [],
	clothes = [],
	hair = [],
	tiles, items, edges, wall_sprite, compass, inventory, graphics, ph_pickup, ph_action, input_field, touching = 0,
	touchx, touchy, target, map_fade, game_fade, fade_to = 1,
	load_progress = (jv.game_width = 740, jv.game_height = 416, jv.color_bright = 7834252, jv.color_light = 6583413, jv.color_medium = 5005152, jv.color_base = 3686992, jv.color_dark = 2699322, jv.init = function() {
		phone && (StatusBar.hide(), screen.orientation.lock("landscape"), document.addEventListener("backbutton", function(e) {
			e.preventDefault(), keyEscape.press && keyEscape.press();
			return !1
		}, !1)), jv.screen(jv.game_width, jv.game_height), "undefined" != typeof do_resize && do_resize();
		var e = new PIXI.Graphics;
		e.beginFill(4473924, 1), e.drawRect(0, 0, jv.game_width / 2, 40), e.endFill(), e.beginFill(5592405, 1), e.drawRect(4, 4, jv.game_width / 2 - 8, 32), e.endFill(), e.beginFill(6710886, 1), e.drawRect(8, 8, jv.game_width / 2 - 16, 24), e.endFill(), jv.loading_bar = new PIXI.Graphics, jv.loading_text = jv.text("Loading 0%", {
			font: "10px Verdana",
			fill: 16777215,
			lineJoin: "round",
			stroke: 6710886,
			strokeThickness: 1
		}), jv.loading_text.y = -16, jv.loading_text_sprite = new PIXI.Sprite, jv.loading_text_sprite.addChild(jv.loading_text), jv.loading_text_sprite.scale.x = 2, jv.loading_text_sprite.scale.y = 2, jv.loading_container = new PIXI.Container, jv.loading_container.addChild(e), jv.loading_container.addChild(jv.loading_bar), jv.loading_container.addChild(jv.loading_text_sprite), jv.loading_container.x = jv.game_width / 2 - jv.loading_container.width / 2, jv.loading_container.y = jv.game_height / 2 - jv.loading_container.height / 2, jv.add(jv.loading_container), player_container = jv.scene(), phone && (AndroidFullScreen && (AndroidFullScreen.showUnderStatusBar(), AndroidFullScreen.showUnderSystemUI(), AndroidFullScreen.immersiveMode()), window.cordova) && window.cordova.InAppBrowser && (window.open = window.cordova.InAppBrowser.open), load_sounds()
	}, function(e, t) {
		var i = Math.ceil(e.progress),
			i = (99 <= e.progress && (i = 100), jv.loading_text.text = "Loading " + i + "%", e.progress * Math.abs(jv.loading_container.width - 8) / 100);
		jv.loading_bar.beginFill(43520, 1), jv.loading_bar.drawRect(4, 4, i, 32), jv.loading_bar.endFill(), jv.loading_bar.beginFill(56576, 1), jv.loading_bar.drawRect(8, 8, Math.abs(i - 8), 24), jv.loading_bar.endFill(), jv.loading_bar.beginFill(13434828, 1), jv.loading_bar.drawRect(8, 8, Math.abs(i - 8), 4), jv.loading_bar.endFill()
	}),
	dist = function(e, t) {
		return Math.sqrt(e * e + t * t)
	},
	send = function(e) {
		connection.send(JSON.stringify(e))
	},
	show_console = function() {
		jv.stage.addChild(jv.chat_box), jv.chat_box.gfx.alpha = 0
	},
	build_doll = function(e, t, i, o, n, a) {
		var r, s, l, d = new PIXI.Container,
			e = jv.sprite(path + "data/body/b" + e + ".png" + vt),
			c = jv.sprite(path + "data/body/e1.png" + vt),
			_ = jv.sprite(path + "data/clothes/c" + t + "_a.png" + vt),
			p = (-1 != clothes_fixed.indexOf(t) && (r = jv.sprite(path + "data/clothes/c" + t + "_b.png" + vt)), jv.sprite(path + "data/hair/h" + o + "_a.png" + vt));
		return -1 != hair_fixed.indexOf(o) && (s = jv.sprite(path + "data/hair/h" + o + "_b.png" + vt)), -1 != hair_front.indexOf(Number(o)) && (l = jv.sprite(path + "data/hair/h" + o + "_c.png" + vt)), d.addChild(e), c.tint = a, d.addChild(c), _.tint = i, d.addChild(_), r && d.addChild(r), -1 == clothes_hooded.indexOf(Number(t)) && (p.tint = n, d.addChild(p), s) && d.addChild(s), l && (l.tint = n, d.addChild(l)), jv.spritesheet(jv.renderer.generateTexture(d), 18, 26)
	},
	update_inventory = function() {
		var e, t, i;
		for (e in inv) inv[e].clear_item();
		for (e in item_data) item_page * item_length <= e && e < (item_page + 1) * item_length && void 0 !== item_data[e].slot && (t = item_data[e].slot - item_page * item_length, inv[t].draw_item(item_data[e].n, item_data[e].qty, item_data[e].spr, item_data[e].eqp, "#" + item_data[e].col), void 0 !== info_pane.slot) && e == info_pane.slot && info_pane.set_info(inv[t]), void 0 !== info_pane.slot && void 0 === item_data[e].slot && e == info_pane.slot && info_pane.set_info();
		for (update_recipes(), update_build(), e = 0; e < 6; e++) item_data[jv.hot_slot[e]] && void 0 !== item_data[jv.hot_slot[e]].slot ? (item_data[jv.hot_slot[e]].spr < 0 ? jv.hot_button[e].graphic.texture = tiles[-item_data[jv.hot_slot[e]].spr % 16][Math.floor(-item_data[jv.hot_slot[e]].spr / 16)] : jv.hot_button[e].graphic.texture = items[item_data[jv.hot_slot[e]].spr % 16][Math.floor(item_data[jv.hot_slot[e]].spr / 16)], (jv.hot_button[e].visible = 1) < item_data[jv.hot_slot[e]].qty ? jv.hot_button[e].qty_text.text = item_data[jv.hot_slot[e]].qty : (i = jv.hot_button[e].main_color, jv.hot_button[e].main_color = jv.color_dark, 1 === item_data[jv.hot_slot[e]].eqp ? jv.hot_button[e].qty_text.text = "E" : 2 === item_data[jv.hot_slot[e]].eqp ? (jv.hot_button[e].qty_text.text = "E", jv.hot_button[e].main_color = 8912896) : jv.hot_button[e].qty_text.text = "", i !== jv.hot_button[e].main_color && (jv.hot_button[e].clear_item(), jv.hot_button[e].draw_item()))) : (jv.hot_button[e].graphic.texture = items[0][0], jv.hot_button[e].visible = 0)
	},
	update_recipes = function() {
		var e, t, i, o, n, a;
		for (o in build_data = JSON.parse(jv.raw_build_data))
			for (a in build_data[o].total = 0, build_data[o].r) build_data[o].total += build_data[o].r[a];
		var r = [],
			s = [],
			l = ["fire", "stone_axe", "stone_pickaxe", "bone_dagger", "grass_band"];
		for (o in build_data) {
			for (a in t = 1, i = 0, build_data[o].r) {
				for (n in e = build_data[o].r[a] <= 10 ? 1 : 0, item_data) item_data[n].tpl == a && (i = 1, e = item_data[n].qty >= build_data[o].r[a] ? 2 : 1);
				if (0 == e) {
					t = -1;
					break
				}
				1 == e && (t = 0)
			}
			0 == (t = -1 == (t = i ? t : -1) && -1 !== l.indexOf(build_data[o].t) ? 0 : t) ? r.push(build_data[o]) : 1 == t && (build_data[o].can_make = 1, s.push(build_data[o]))
		}
		r.sort(function(e, t) {
			return e.total - t.total
		}), s.sort(function(e, t) {
			return e.total - t.total
		}), build_data = s.concat(r)
	},
	update_build = function() {
		var e, t = build_data;
		for (e in build_data.length <= build_page * build_length && (build_page = 0), bld) bld[e].clear_item();
		var i = 0;
		for (e in t) build_page * build_length <= e && e < (build_page + 1) * build_length && (bld[e - build_page * build_length].template = t[e].t, bld[e - build_page * build_length].build_type = t[e].c, bld[e - build_page * build_length].can_pickup = t[e].p, t[e].can_make ? bld[e - build_page * build_length].draw_item(t[e].n, 1, t[e].s, 0, "#" + t[e].col) : bld[e - build_page * build_length].draw_item(t[e].n, 0, t[e].s, 0, "#" + t[e].col)), jv.build_dialog.info.obj && jv.build_dialog.info.template == t[e].t && t[e].can_make && (i = 1);
		!i && jv.build_dialog.info.obj && jv.build_dialog.info.obj.build && jv.build_dialog.info.set_info(), build_pane.prev.visible = 0 != build_page, build_data.length <= (build_page + 1) * build_length ? build_pane.next.visible = !1 : build_pane.next.visible = !0
	},
	romanize = function(e) {
		var t, i = {
				M: 1e3,
				CM: 900,
				D: 500,
				CD: 400,
				C: 100,
				XC: 90,
				L: 50,
				XL: 40,
				X: 10,
				IX: 9,
				V: 5,
				IV: 4,
				I: 1
			},
			o = "";
		for (t in i)
			for (; i[t] <= e;) o += t, e -= i[t];
		return o
	},
	inbounds = function(e, t) {
		return !(e < -1 || MAP_WIDTH < e || t < -1 || MAP_HEIGHT < t)
	},
	getkey = function(e, t) {
		return 1e4 * e + t
	},
	occupied = function(t, i, o) {
		var n, e;
		return !inbounds(t, i) || null == (e = map[loc2tile(t, i)]) || null == e.spr || 325 == e.spr || cur_wall && e.spr == cur_wall || (n = 0, mobs.process(function(e) {
			e.id !== o && e.x === t && e.y === i && (n = 1)
		}), n) || (e = map_index[getkey(t, i)]) && e.block ? 1 : 0
	},
	do_mob_title = function(t) {
		t.title = jv.text(t.name.toString(), {
			font: "12px Verdana",
			fill: 14540253,
			stroke: 6710886,
			lineJoin: "round",
			strokeThickness: 2,
			align: "center"
		}), t.title.yoff = -5, t.title.xoff = t.title.width / 2, t.title.alpha = 0, t.monster_sprite.interactive = !0, t.monster_sprite.mouseover = function(e) {
			t.title.alpha = 1
		}, t.monster_sprite.mouseout = function(e) {
			t.title.alpha = 0
		}, hover_container.addChild(t.title), player_container.addChild(t.monster_sprite), t.monster_sprite.do_click = function() {
			info_pane.set_info(t), select = 0
		}, t.monster_sprite.on("mouseup", t.monster_sprite.do_click), t.monster_sprite.on("touchend", t.monster_sprite.do_click), t.monster_sprite.on("mousedown", function() {
			select = 1
		}), t.monster_sprite.on("touchstart", function() {
			select = 1
		}), t.monster_sprite.on("mouseupoutside", function() {
			select = 0
		}), t.monster_sprite.on("touchendoutside", function() {
			select = 0
		})
	},
	hex_to_int = function(e) {
		e = e.substr(0, 2) + e.substr(2, 2) + e.substr(4, 2);
		return parseInt(e, 16)
	},
	rgb_to_int = function(e, t, i) {
		return (e << 16) + (t << 8) + i
	},
	color_limit = function(e, t) {
		var i, o;
		if (void 0 !== e) return t = t || 50, i = e >> 16 & 255, o = e >> 8 & 255, e = 255 & e, 0 < (t = Math.floor(t - (Math.min(i, o, e) + Math.max(i, o, e)) / 2)) && (i = Math.min(i + t, 255), o = Math.min(o + t, 255), e = Math.min(e + t, 255)), rgb_to_int(i, o, e)
	},
	do_player_title = function(i) {
		i.title = jv.text((i.prefix || "") + i.name.toString(), {
			font: "12px Verdana",
			fill: i.title_color,
			lineJoin: "round",
			stroke: 2236962,
			strokeThickness: 4,
			align: "center"
		}), i.title.xoff = i.title.width / 2, i.title.yoff = -10;
		var e = i.body_sprite;
		(e = e || i.monster_sprite).interactive = !0, e.mouseover = function(e) {
			var t = i.name + " Lvl " + i.level;
			"" !== i.tribe && (t += "\n" + i.tribe + " Tribe "), i.title.text = t.trim(), i.title.xoff = i.title.width / 2, i.title.yoff = -18, i.title.x = i.spr.x - i.title.xoff + i.halfx, i.title.y = i.spr.y + i.title.yoff
		}, e.mouseout = function(e) {
			i.title.text = (i.prefix || "") + i.name.toString().trim(), i.title.xoff = i.title.width / 2, i.title.yoff = -10, i.title.x = i.spr.x - i.title.xoff + i.halfx, i.title.y = i.spr.y + i.title.yoff
		}, hover_container.addChild(i.title), player_container.addChild(e), e.do_click = function() {
			info_pane.set_info(i), select = 0
		}, e.on("mouseup", e.do_click), e.on("touchend", e.do_click), e.on("mousedown", function() {
			select = 1
		}), e.on("touchstart", function() {
			select = 1
		}), e.on("mouseupoutside", function() {
			select = 0, i.id == me && (jv.mouse.y < 140 ? (i.dir = 0, send({
				type: "m",
				x: i.x,
				y: i.y,
				d: i.dir
			})) : 440 < jv.mouse.x ? (i.dir = 1, send({
				type: "m",
				x: i.x,
				y: i.y,
				d: i.dir
			})) : 276 < jv.mouse.y ? (i.dir = 2, send({
				type: "m",
				x: i.x,
				y: i.y,
				d: i.dir
			})) : jv.mouse.x < 310 && (i.dir = 3, send({
				type: "m",
				x: i.x,
				y: i.y,
				d: i.dir
			})))
		}), e.on("touchendoutside", function(e) {
			select = 0;
			var t = e.data.global.x,
				e = e.data.global.y;
			i.id == me && (e < 130 ? (i.dir = 0, send({
				type: "m",
				x: i.x,
				y: i.y,
				d: i.dir
			})) : 420 < t ? (i.dir = 1, send({
				type: "m",
				x: i.x,
				y: i.y,
				d: i.dir
			})) : 240 < e ? (i.dir = 2, send({
				type: "m",
				x: i.x,
				y: i.y,
				d: i.dir
			})) : t < 320 && (i.dir = 3, send({
				type: "m",
				x: i.x,
				y: i.y,
				d: i.dir
			})))
		})
	},
	pos2tile = function(e, t) {
		return (e + jv.update_x) * jv.update_map_height + +(t + jv.update_y)
	},
	tile_sprite = function(e, t) {
		e = pos2tile(e, t);
		return map[e] ? 218 === map[e].spr ? 3 : 215 === map[e].spr || 248 === map[e].spr ? 2 : 36 === map[e].spr || 21 === map[e].spr ? 1 : 0 : 0
	},
	get_edge = function(e, t, i) {
		var o = tile_sprite(e, t),
			n = tile_sprite(e, t - 1),
			a = tile_sprite(e + 1, t),
			r = tile_sprite(e, t + 1),
			e = tile_sprite(e - 1, t);
		return 1 === o ? edges[0][1] : (t = 0, o || 2 !== n && 2 !== a && 2 !== r && 2 !== e ? o || 3 !== n && 3 !== a && 3 !== r && 3 !== e || (t = 4) : t = 2, o === a && (a = 0), o === r && (r = 0), o === e && (e = 0), (n = o === n ? 0 : n) && a && r && e ? edges[15][t] : n && a && r ? edges[14][t] : n && a && e ? edges[7][t] : n && r && e ? edges[11][t] : a && r && e ? edges[13][t] : n && r ? edges[10][t] : n && a ? edges[6][t] : n && e ? edges[3][t] : a && e ? edges[5][t] : a && r ? edges[12][t] : e && r ? edges[9][t] : n ? edges[1][t] : a ? edges[4][t] : r ? edges[8][t] : e ? edges[2][t] : edges[0][1])
	},
	make_covers = function() {
		wall_sprite.texture = tiles[cur_wall % 16][Math.floor(cur_wall / 16)], wall_sprite.tint = 16777215;
		var e = new PIXI.Graphics;
		e.beginFill(16777215), e.drawRect(0, 0, 32, 32), e.endFill(), wall_sprite.mask = e, 4 == jv.pixiver ? (cover[0] = jv.renderer.generateTexture(wall_sprite), cover[1] = jv.renderer.generateTexture(wall_sprite), cover[2] = jv.renderer.generateTexture(wall_sprite), cover[4] = jv.renderer.generateTexture(wall_sprite), cover[5] = jv.renderer.generateTexture(wall_sprite), cover[8] = jv.renderer.generateTexture(wall_sprite), cover[10] = jv.renderer.generateTexture(wall_sprite)) : (cover[0] = wall_sprite.generateTexture(jv.renderer), cover[1] = wall_sprite.generateTexture(jv.renderer), cover[2] = wall_sprite.generateTexture(jv.renderer), cover[4] = wall_sprite.generateTexture(jv.renderer), cover[5] = wall_sprite.generateTexture(jv.renderer), cover[8] = wall_sprite.generateTexture(jv.renderer), cover[10] = wall_sprite.generateTexture(jv.renderer)), e.destroy(), e = null, (e = new PIXI.Graphics).beginFill(16777215), e.drawRoundedRect(0, 0, 32, 32, 6), e.drawRect(0, 0, 16, 16), e.drawRect(0, 16, 16, 16), e.drawRect(16, 0, 16, 16), e.endFill(), wall_sprite.mask = jv.sprite(jv.renderer.generateTexture(e)), 3 == jv.pixiver ? cover[6] = wall_sprite.generateTexture(jv.renderer) : cover[6] = jv.renderer.generateTexture(wall_sprite), e.destroy(), e = null, (e = new PIXI.Graphics).beginFill(16777215), e.drawRoundedRect(0, 0, 32, 32, 6), e.drawRect(0, 0, 16, 16), e.drawRect(0, 16, 16, 16), e.drawRect(16, 16, 16, 16), e.endFill(), wall_sprite.mask = jv.sprite(jv.renderer.generateTexture(e)), 3 == jv.pixiver ? cover[3] = wall_sprite.generateTexture(jv.renderer) : cover[3] = jv.renderer.generateTexture(wall_sprite), e.destroy(), e = null, (e = new PIXI.Graphics).beginFill(16777215, 1), e.drawRoundedRect(0, 0, 32, 32, 6), e.drawRect(16, 0, 16, 16), e.drawRect(0, 16, 16, 16), e.drawRect(16, 16, 16, 16), e.endFill(), wall_sprite.mask = jv.sprite(jv.renderer.generateTexture(e)), 3 == jv.pixiver ? cover[9] = wall_sprite.generateTexture(jv.renderer) : cover[9] = jv.renderer.generateTexture(wall_sprite), e.destroy(), e = null, (e = new PIXI.Graphics).beginFill(16777215), e.drawRoundedRect(0, 0, 32, 32, 6), e.drawRect(16, 0, 16, 16), e.drawRect(0, 0, 16, 16), e.drawRect(16, 16, 16, 16), e.endFill(), wall_sprite.mask = jv.sprite(jv.renderer.generateTexture(e)), 3 == jv.pixiver ? cover[12] = wall_sprite.generateTexture(jv.renderer) : cover[12] = jv.renderer.generateTexture(wall_sprite), e.destroy(), e = null, (e = new PIXI.Graphics).beginFill(16777215), e.drawRoundedRect(0, 0, 32, 32, 6), e.drawRect(0, 16, 16, 16), e.drawRect(16, 16, 16, 16), e.endFill(), wall_sprite.mask = jv.sprite(jv.renderer.generateTexture(e)), 3 == jv.pixiver ? cover[11] = wall_sprite.generateTexture(jv.renderer) : cover[11] = jv.renderer.generateTexture(wall_sprite), e.destroy(), e = null, (e = new PIXI.Graphics).beginFill(16777215), e.drawRoundedRect(0, 0, 32, 32, 6), e.drawRect(0, 0, 16, 16), e.drawRect(16, 0, 16, 16), e.endFill(), wall_sprite.mask = jv.sprite(jv.renderer.generateTexture(e)), 3 == jv.pixiver ? cover[14] = wall_sprite.generateTexture(jv.renderer) : cover[14] = jv.renderer.generateTexture(wall_sprite), e.destroy(), e = null, (e = new PIXI.Graphics).beginFill(16777215), e.drawRoundedRect(0, 0, 32, 32, 6), e.drawRect(0, 0, 16, 16), e.drawRect(0, 16, 16, 16), e.endFill(), wall_sprite.mask = jv.sprite(jv.renderer.generateTexture(e)), 3 == jv.pixiver ? cover[7] = wall_sprite.generateTexture(jv.renderer) : cover[7] = jv.renderer.generateTexture(wall_sprite), e.destroy(), e = null, (e = new PIXI.Graphics).beginFill(16777215), e.drawRoundedRect(0, 0, 32, 32, 6), e.drawRect(16, 0, 16, 16), e.drawRect(16, 16, 16, 16), e.endFill(), wall_sprite.mask = jv.sprite(jv.renderer.generateTexture(e)), 3 == jv.pixiver ? cover[13] = wall_sprite.generateTexture(jv.renderer) : cover[13] = jv.renderer.generateTexture(wall_sprite), e.destroy(), e = null, (e = new PIXI.Graphics).beginFill(16777215), e.drawRoundedRect(0, 0, 32, 32, 6), e.endFill(), wall_sprite.mask = jv.sprite(jv.renderer.generateTexture(e)), 3 == jv.pixiver ? cover[15] = wall_sprite.generateTexture(jv.renderer) : cover[15] = jv.renderer.generateTexture(wall_sprite), e.destroy()
	},
	update_edges = function() {
		edge_container.cacheAsBitmap && (edge_container.cacheAsBitmap = !1);
		for (var e, t, i, o = edge_container.edges = 0, n = -jv.update_x; n < jv.update_x; n++)
			for (e = -jv.update_y; e < jv.update_y; e++) map[o].edge.texture = get_edge(n, e, map[o].spr), map[o].edge.texture == edges[0][1] ? map[o].edge.visible = 0 : (edge_container.edges++, map[o].edge.visible = 1), "" !== dlevel ? cur_wall && map[o].spr == cur_wall ? (map[o].tint = 5592422, t = 0, (i = map[o + 1]) && i.spr != map[o].spr && (t += 4, i.tint = 11184810), (i = map[o - 1]) && i.spr != map[o].spr && (t += 1), (i = map[o + 26]) && i.spr != map[o].spr && (t += 2), (i = map[o - 26]) && i.spr != map[o].spr && (t += 8), map[o].cover.texture = cover[t], map[o].cover.visible = 1) : (map[o].cover.visible = 0, (i = map[o - 1]) && i.spr !== cur_wall && (map[o].tint = 16777215)) : map[o].cover.texture != tiles[0][0] && (map[o].cover.visible = 0), o += 1
	},
	playSound = (jv.update_map = function(e) {
		e.x, jv.update_x, e.y, jv.update_y;
		mx = e.x - jv.update_x, my = e.y - jv.update_y, map_container.x = 32 * mx + 32 * jv.update_x, map_container.y = 32 * my + 32 * jv.update_y, edge_container.x = map_container.x, edge_container.y = map_container.y, anim_map_container.x = map_container.x, anim_map_container.y = map_container.y, object_container.cacheAsBitmap && (object_container.cacheAsBitmap = !1, anim1_container.cacheAsBitmap = !1, anim2_container.cacheAsBitmap = !1), map_container.cacheAsBitmap && (map_container.cacheAsBitmap = !1, anim_map_container.cacheAsBitmap = !1), anim_map_container.animations = 0;
		for (var t, i, o, n, a, r = e.tiles.split(":"), s = 0, l = [], d = [], c = -jv.update_x; c < jv.update_x; c++)
			for (i = -jv.update_y; i < jv.update_y; i++) {
				if (r[s] ? (t = r[s].split("_"), d[s] = Number(t.shift())) : (d[s] = 0, t = []), 325 == d[s] ? (map[s].anim.visible = 1, anim_map_container.animations++) : map[s].anim.visible = 0, 19 == d[s] && (d[s] = cave_floor), 112 == d[s] && (d[s] = cave_wall), map[s].texture = tiles[d[s] % 16][Math.floor(d[s] / 16)], map[s].tint = 16777215, map[s].spr = d[s], map[s].cover.x = 32 * c + map_container.x, map[s].cover.y = 32 * i + map_container.y - 20, map[s].cover.ry = map[s].cover.y + 32, a = 1e4 * (e.x + c) + (e.y + i), n = map_index[a]) {
					if (n.template === r[s]) {
						n.update = now, s += 1;
						continue
					}
					for (p in n.o) l.push(n.o[p])
				} else map_index[a] = {}, n = map_index[a];
				for (p in n.o = [], n.update = now, n.template = r[s], n.block = 0, t)(o = jv.Object.create()).template = t[p], o.x = e.x + c, o.y = e.y + i, o.name = object_dict[o.template].name, o.description = object_dict[o.template].description, o.build = object_dict[o.template].build, o.buildup() || (o.sprite = object_dict[o.template].sprite, o.sprite < 0 ? o.obj_sprite = jv.sprite(tiles[-o.sprite % 16][Math.floor(-o.sprite / 16)]) : o.obj_sprite = jv.sprite(items[o.sprite % 16][Math.floor(o.sprite / 16)]), o.obj_sprite.x = 32 * o.x, o.obj_sprite.y = 32 * o.y, object_container.addChild(o.obj_sprite)), o.can_block = object_dict[o.template].can_block, o.can_stack = object_dict[o.template].can_stack, o.can_pickup = object_dict[o.template].can_pickup, o.can_block && (n.block = 1), n.o.push(o), objects.add(o);
				s += 1
			}
		for (p in map_index)
			if (map_index[p].update !== now) {
				for (s in map_index[p].o) l.push(map_index[p].o[s]);
				delete map_index[p]
			} for (var _ = l.length, p = 0; p < _; p++) l[p].cleanup();
		update_edges(), jv.transition && (jv.transition = 2), update_sort = 1
	}, recheck_caches = function() {
		object_container.cacheAsBitmap || (object_container.children.length && (object_container.cacheAsBitmap = !0), anim1_container.children.length && (anim1_container.cacheAsBitmap = !0), anim2_container.children.length && (anim2_container.cacheAsBitmap = !0)), map_container.cacheAsBitmap || (map_container.cacheAsBitmap = !0, anim_map_container.animations && (anim_map_container.cacheAsBitmap = !0)), !edge_container.cacheAsBitmap && edge_container.edges && (edge_container.cacheAsBitmap = !0)
	}, update_container = function() {
		master_container.x = hero_x + 132 - myself.spr.x + myself.xoffset, master_container.y = hero_y + -32 - myself.spr.y + myself.yoffset
	}, function(e) {
		var t = Math.floor(Math.random() * sound[e].length);
		sound[e][t].volume(jv.sound_volume), sound[e][t].play()
	}),
	fadeSong = function(e) {
		var t;
		e && e.playing() && (e.fade(option_dialog.music_slider.percent / 100, 0, 2e3), t = e, setTimeout(function() {
			t.playing() && jv.current_song != t && (t.stop(), t.volume(option_dialog.music_slider.percent / 100))
		}, 3e3))
	},
	playMusic = (jv.songEnd = function(e) {}, jv.songFade = function(e) {}, jv.songStop = function(e) {}, jv.songLoaded = function(e) {}, jv.songError = function(e, t) {}, function(e, t, i) {
		var o;
		i && jv.current_song && jv.current_song.playing() || i && jv.last_song == e || music[e] && music[e].playing() || (e && void 0 === music[e] && (music[e] = phone ? new Howl({
			src: ["https://www.mysteralegacy.com/music/" + e + ".webm", "https://www.mysteralegacy.com/music/" + e + ".mp3"],
			autoplay: !1,
			loop: !0,
			html5: !0,
			preload: !0,
			volume: jv.music_volume,
			onload: jv.songLoaded,
			onloaderror: jv.songError,
			onstop: jv.songStop,
			onend: jv.songEnd,
			onfade: jv.songFade
		}) : new Howl({
			src: ["//www.mysteralegacy.com/music/" + e + ".webm", "//www.mysteralegacy.com/music/" + e + ".mp3"],
			autoplay: !1,
			loop: !1,
			html5: !0,
			preload: !0,
			xhrWithCredentials: !0,
			volume: jv.music_volume,
			onload: jv.songLoaded,
			onloaderror: jv.songError,
			onstop: jv.songStop,
			onend: jv.songEnd,
			onfade: jv.songFade
		}), music[e].on("load", function() {
			i || this.loop(!0)
		}), music[e].on("play", function() {
			"rpgtitle" == e && (game_state == GAME_PLAYING || jv.current_song && jv.current_song != music[e]) ? music[e].stop() : "rpgtitle" !== e && music.rpgtitle && music.rpgtitle.playing() ? music.rpgtitle.stop() : jv.current_song && jv.current_song !== music[e] && music[e].stop()
		})), e && void 0 !== music[e] ? (jv.current_song && fadeSong(jv.current_song), jv.current_song = music[e], jv.last_song = e, jv.current_song.stop(), 0 == option_dialog.music_slider.percent || (o = jv.current_song.play(), i && jv.current_song.loop(!1, o), t) || jv.current_song.fade(0, option_dialog.music_slider.percent / 100, 2e3)) : (jv.playlist = null, jv.current_song && fadeSong(jv.current_song), jv.current_song = null))
	}),
	pos2tilex = (String.prototype.capitalize = function() {
		return this.replace(/\w\S*/g, function(e) {
			return e.charAt(0).toUpperCase() + e.substr(1).toLowerCase()
		})
	}, String.prototype.replaceAll = function(e, t) {
		return this.split(e).join(t)
	}, confirmLeave = function(e) {
		return jv.before_blur(), has_focus = 1, "Really close this page?"
	}, getMob = function(e) {
		return mob_ref[e] || (mob_ref[e] = mobs.fetch(e, "id"), mob_ref[e] && (mob_ref[e].ref = mob_ref)), mob_ref[e]
	}, getObj = function(e) {
		return obj_ref[e] || (obj_ref[e] = objects.fetch(e, "id"), obj_ref[e] && (obj_ref[e].ref = obj_ref)), obj_ref[e]
	}, mob_x = function(e) {
		return -effect_container.x + e.sx + e.halfx
	}, mob_y = function(e) {
		return -effect_container.y + e.sy + e.halfy
	}, jv.before_blur = function() {
		for (var e in has_focus = 0, jv.key_array) jv.key_array[e].isDown && (jv.key_array[e].release && jv.key_array[e].release(), jv.key_array[e].isDown = 0, jv.key_array[e].isUp = 1);
		action && !space_toggle && (action = 0, space_timer = now, send({
			type: "a"
		})), -1 != dest && (send({
			type: "h",
			x: this.x,
			y: this.y
		}), dest = -1)
	}, jv.prevent = function(e) {
		return editing || jv.current_input && jv.current_input.hasFocus ? 0 : (e.preventDefault(), 1)
	}, function(e, t) {
		return Math.floor((e - master_container.x) / 32)
	}),
	pos2tiley = function(e, t) {
		e = map[Math.floor(loc2tile(e / 32, t / 32))];
		return e ? e.y : -1
	},
	loc2tile = function(e, t) {
		return (e - mx) * jv.update_map_height + (t - my)
	},
	tile2x = function(e) {},
	append = function(e) {
		jv.chat_box.append(e), jv.chat_fade.lines.length || (jv.chat_fade.offset = 0, jv.chat_fade.line_container.y = 0), jv.chat_fade.append(e)
	};

function depthCompare(e, t) {
	if (null != e.base && null != t.base) {
		if (e.base.y < t.base.y) return -1;
		if (e.base.y > t.base.y) return 1;
		if (e.base.y == t.base.y) {
			if (e.ordering < t.ordering) return -1;
			if (e.ordering > t.ordering) return 1
		}
	}
	return 0
}

function sortCompare(e, t) {
	return e.ry < t.ry ? -1 : e.ry > t.ry ? 1 : 0
}

function vertCompare(e, t) {
	return e.y + e.height < t.y + t.height ? -1 : e.y + e.height > t.y + t.height ? 1 : 0
}

function zCompare(e, t) {
	return null == e || null == t ? 0 : e.z < t.z ? -1 : e.z > t.z ? 1 : 0
}
jv.ChatBubble = {
	create: function(e, t, i) {
		var o = jv.sprite();
		return e = (e = (e = (e = e.replace(/&quot;/g, '"')).replace(/&amp;/g, "&")).replace(/&lt;/g, "<")).replace(/&gt;/g, ">"), "number" == typeof t ? (o.fixed = 1, o.x = 32 * t + 16, o.y = 32 * i - 4) : (o.x = t.spr.x + t.halfx, o.y = t.spr.y - 6, t.bubble = this, o.talker = t), o.life = Date.now(), o.max_life = 50 * e.length, o.max_life < 3e3 ? o.max_life = 3e3 : 8e3 < o.max_life && (o.max_life = 8e3), o.fixed && (o.max_life += 1e3), o.gfx = new PIXI.Graphics, o.gfx.x = 0, o.gfx.y = 0, o.addChild(o.gfx), o.title = jv.text(e, {
			font: "14px Verdana",
			fill: 16777215,
			stroke: 6710886,
			strokeThickness: 2,
			lineJoin: "round",
			wordWrap: !0,
			wordWrapWidth: 240,
			padding: 5
		}), o.title.x = 4 - o.title.width / 2 - 4, o.title.y = 3 - o.title.height - 8, o.gfx.x = 0 - o.title.width / 2 - 6, o.gfx.y = 0 - o.title.height - 8, o.addChild(o.title), hover_container.addChild(o), o.check = setInterval(function() {
			if (!o.fixed) {
				if (!o.talker || !o.talker.monster_sprite && !o.talker.body_sprite) return void o.cleanup();
				o.talker.bubble !== this && (o.x = o.talker.spr.x + o.talker.halfx, o.y = o.talker.spr.y - 6)
			}
			now - o.life > o.max_life && o.cleanup()
		}, 20), o.draw = function() {
			var e = this.title.width + 13,
				t = this.title.height + 6,
				e = [0, 0, e, 0, e, t, e / 2 + 4, t, e / 2, t + 4, e / 2 - 4, t, 0, t, 0, 0];
			this.gfx.clear(), this.gfx.beginFill(3355460, .3), this.gfx.lineStyle(3, 7829384, .5), this.gfx.drawPolygon(e), this.gfx.lineStyle(1, 15658751, .5), this.gfx.drawPolygon(e), this.gfx.endFill()
		}, o.cleanup = function() {
			null !== this.title && (this.title.parent.removeChild(this.title), void 0 !== this.title.destroy) && this.title.destroy(), delete this.title, this.gfx.parent.removeChild(this.gfx), void 0 !== this.gfx.destroy && this.gfx.destroy(), delete this.gfx, clearInterval(this.check), this.fixed || this.talker.bubble != this || (this.talker.bubble = null), void 0 !== this.destroy && this.destroy()
		}, o.draw(), o
	}
}, jv.StatusBar = {
	create: function(e, t) {
		var i = jv.sprite();
		return i.max = 100, i.val = 75, i.size = 80, i.color = t, i.x = jv.game_width - 140, i.y = 320, i.gfx = new PIXI.Graphics, i.gfx.x = 0, i.gfx.y = 0, i.addChild(i.gfx), i.title = jv.text(e, {
			font: "11px Verdana",
			fill: 15658734,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 4
		}), i.title.x = 4, i.title.y = -8, i.addChild(i.title), ui_container.addChild(i), i.draw = function() {
			this.gfx.clear(), this.gfx.lineStyle(2, jv.color_dark, 0), this.gfx.beginFill(jv.color_base, .9), this.gfx.drawRect(0, 0, this.size, 16), this.gfx.endFill(), this.gfx.beginFill(this.color, 1), this.gfx.drawRect(0, 0, this.val * this.size / 100, 16), this.gfx.endFill(), this.gfx.beginFill(15658734, .3), this.gfx.drawRect(0, 0, this.val * this.size / 100, 8), this.gfx.endFill(), this.gfx.beginFill(3355443, .6), this.gfx.drawRect(0, 12, this.size, 4), this.gfx.endFill(), this.gfx.beginFill(16777215, .6), this.gfx.drawRect(0, 3, this.size, 2), this.gfx.endFill(), this.gfx.lineStyle(2, jv.color_dark, 1), this.gfx.drawRoundedRect(0, 0, this.size, 16, 4), this.gfx.moveTo(0, 16), this.gfx.lineTo(this.size, 16)
		}, i.set = function(e) {
			this.val = e, this.draw()
		}, i.cleanup = function() {}, i
	}
}, jv.HPBar = {
	create: function(e, t) {
		var i = jv.sprite();
		return (i.player = e).hpbar = this, e.spr ? (i.x = e.spr.x + 2, i.y = e.spr.y + 0, i.w = e.spr.width - 4) : (i.x = i.player.obj_sprite.x + 2, i.x = i.player.obj_sprite.y + 7, i.w = 28), i.life = Date.now(), i.max_life = 4e3, i.max = 1e3, i.val = t, i.chaser = t, i.player !== myself && e.spr ? 0 <= i.player.body ? i.color = 56729 : i.color = 14544384 : i.color = 65280, i.gfx = new PIXI.Graphics, i.gfx.x = 0, i.gfx.y = 0, i.addChild(i.gfx), hover_container.addChild(i), i.check = setInterval(function() {
			(!i.player || !(i.player.monster_sprite || i.player.body_sprite || i.player.obj_sprite) || (i.player.spr || (i.x = i.player.obj_sprite.x + 2, i.y = i.player.obj_sprite.y + 7), i.chaser !== i.val && (i.chaser < i.val && (i.chaser += 12, i.chaser > i.val) && (i.chaser = i.val), i.chaser > i.val && (i.chaser -= 12, i.chaser < i.val) && (i.chaser = i.val), i.draw()), Date.now() - i.life > i.max_life && i.chaser == i.val && (i.alpha -= .05, i.alpha <= 0))) && i.cleanup()
		}, 20), i.draw = function() {
			this.gfx.clear(), this.gfx.beginFill(1118481, .8), this.gfx.drawRect(0, 0, this.w, 6), this.gfx.endFill(), this.chaser > this.val && (this.gfx.beginFill(16711680, 1), this.gfx.lineStyle(0, 16777215), this.gfx.drawRect(this.val * this.w / 1e3, 0, this.chaser * this.w / 1e3 - this.val * this.w / 1e3, 6), this.gfx.endFill()), this.gfx.beginFill(this.color, 1), this.gfx.lineStyle(0, 16777215), this.gfx.drawRect(0, 0, this.val * this.w / 1e3, 6), this.gfx.endFill(), this.gfx.beginFill(15658734, .5), this.gfx.lineStyle(0, 16777215), this.gfx.drawRect(0, 0, this.val * this.w / 1e3, 3), this.gfx.endFill(), this.chaser < this.val && (this.gfx.beginFill(16777215, 1), this.gfx.lineStyle(0, 16777215), this.gfx.drawRect(this.val * this.w / 1e3, 0, this.chaser * this.w / 1e3 - this.val * this.w / 1e3, 6), this.gfx.endFill()), this.gfx.lineStyle(2, jv.color_dark, 1), this.gfx.drawRoundedRect(0, 0, this.w, 6, 2)
		}, i.set = function(e) {
			e < 0 ? e = 0 : e > this.max && (e = this.max), this.val = e, this.alpha = 1, this.life = Date.now(), this.draw()
		}, i.cleanup = function() {
			this.player && this.player.hpbar == this && (this.player.hpbar = null), this.gfx.parent.removeChild(this.gfx), this.gfx = null, clearInterval(this.check), this.player.hpbar == this && (this.player.hpbar = null)
		}, i.draw(), i
	}
}, jv.Entity = {
	create: function() {
		var e = {
			x: 0,
			y: 0,
			dx: 0,
			dy: 0,
			fromx: 0,
			fromy: 0,
			sx: 0,
			sy: 0,
			flip: 0,
			dir: 0,
			last_dir: -1,
			frame: 0,
			foot: 1,
			body: 0,
			body_sprite: null,
			hair: 0,
			hair_sprite: null,
			clothes: 0,
			clothes_sprite: null,
			name: "",
			title: null,
			chat_sprite: null,
			chat_dots: null,
			sprite: 0,
			spr: null,
			monster_sprite: null,
			walking: 0,
			speed: 750,
			tile_speed: 0,
			net_tile_speed: 0,
			bonus: 0
		};
		return e.cur_speed = e.speed, e.traveled = 0, e.travel_start = 0, e.last_check = new Date, e.now = e.last_check, e.updated = 0, e.tweenx = 0, e.tweeny = 0, e.shakex = 0, e.shakey = 0, e.pushx = 0, e.pushy = 0, e.xoffset = 4, e.yoffset = -16, e.still = function() {
			return this.fromx == this.x && this.fromy == this.y
		}, e.move = function(e, t) {
			this.fromx = this.x, this.fromy = this.y, this.x > e ? this.dir = 3 : this.x < e ? this.dir = 1 : this.y > t ? this.dir = 0 : this.y < t && (this.dir = 2), this.id == me && (space_toggle && (space_toggle = 0, ph_action.gfx.tint = 16777215, jv.action_button.tint = jv.color_base, space_timer = now), keyCtrl.isDown) ? this.last_dir !== this.dir && (send({
				type: "m",
				x: this.x,
				y: this.y,
				d: this.dir
			}), this.last_dir = this.dir) : (this.id !== me && (this.traveled = 0), this.id == me && occupied(e, t, this.id) ? this.last_dir !== this.dir && (send({
				type: "m",
				x: this.x,
				y: this.y,
				d: this.dir
			}), this.last_dir = this.dir, -1 !== dest) && (send({
				type: "h",
				x: this.x,
				y: this.y
			}), dest = -1) : (this.x = e, this.y = t, this.last_dir = this.dir, this.id == me && (-1 == dest || this.dir !== dest || 1e3 <= Date.now() - last_dest) && (send({
				type: "h",
				x: this.fromx,
				y: this.fromy,
				d: this.dir
			}), last_ping = Date.now(), dest = this.dir, last_dest = Date.now())))
		}, e.set_sprite = function() {
			null !== this.monster_sprite ? this.spr = this.monster_sprite : this.spr = this.body_sprite
		}, e.update_pos = function() {
			this.spr.x = 32 * this.fromx + this.tweenx + this.xoffset, this.spr.y = 32 * this.fromy + this.tweeny + this.yoffset, this.title.x = this.spr.x - this.title.xoff + this.halfx, this.title.y = this.spr.y + this.title.yoff, this.chat_sprite.x = this.spr.x + this.halfx - 8, this.chat_sprite.y = this.spr.y + this.title.yoff - 12, this.id == target.id && (target.x = this.spr.x + this.halfx, target.y = this.spr.y + this.spr.height - 2), this.bubble && (this.bubble.x = this.spr.x + this.halfx, this.bubble.y = this.spr.y - 6), this.hpbar && (this.hpbar.x = this.spr.x + 2, this.hpbar.y = this.spr.y + 0), this.sy != this.spr.y && (this.spr.ry = this.spr.y + this.spr.height, update_sort = 1), this.sx = this.spr.x, this.sy = this.spr.y
		}, e.check_chat_indicator = function() {
			this.chat_sprite.visible && (this.chat_dots.alpha = Math.floor(now / 400) % 2)
		}, e.update = function() {
			this.still() ? (this.check_chat_indicator(), this.id == me && (jv.transition || (keyRight.isDown || keyD.isDown ? this.move(this.x + 1, this.y) : keyLeft.isDown || keyA.isDown ? this.move(this.x - 1, this.y) : keyDown.isDown || keyS.isDown ? this.move(this.x, this.y + 1) : keyUp.isDown || keyW.isDown ? this.move(this.x, this.y - 1) : -1 != dest && (send({
				type: "h",
				x: this.x,
				y: this.y
			}), dest = -1)), keyShift.isDown ? ph_pickup.is_pressed || (ph_pickup.clear_item(), ph_pickup.draw_item(1), ph_pickup.is_pressed = 1, ph_pickup.key_press = 1) : ph_pickup.is_pressed && ph_pickup.key_press && (ph_pickup.clear_item(), ph_pickup.draw_item(), ph_pickup.is_pressed = 0, ph_pickup.key_press = 0), keySpace.isDown ? (action ? space_toggle && (space_toggle = 0, ph_action.gfx.tint = 16777215, jv.action_button.tint = jv.color_base, space_timer = now) : (space_timer = now, space_toggle = 0, ph_action.clear_item(), ph_action.draw_item(1), ph_action.gfx.tint = 16777215, jv.action_button.tint = jv.color_base, action = 1, send({
				type: "A"
			})), 2500 <= now - space_timer && 1131605 !== jv.action_button.tint && (ph_action.gfx.tint = 13434879, jv.action_button.tint = 1131605, ph_action.clear_item(), ph_action.draw_item(1))) : action && !space_toggle && (now - space_timer < 2500 ? (action = 0, space_timer = now, send({
				type: "a"
			}), ph_action.clear_item(), ph_action.draw_item()) : (space_toggle = 1, space_timer = now))), this.moved = 0) : (this.traveled += Date.now() - this.last_check, this.traveled >= this.cur_speed && (this.traveled -= this.cur_speed, this.traveled >= this.cur_speed && (this.traveled = 0), this.travel_start = this.traveled, this.fromx = this.x, this.fromy = this.y, this.frame = 1, this.foot = -this.foot), this.traveled >= (this.cur_speed - this.travel_start) / 2 + this.travel_start ? this.frame = 1 + this.foot : this.frame = 1, this.tweenx = Math.floor((this.x - this.fromx) * (this.traveled / this.cur_speed) * 32), this.tweeny = Math.floor((this.y - this.fromy) * (this.traveled / this.cur_speed) * 32), this.traveled == this.cur_speed && (this.traveled = 0), this.update_pos(), this.moved = 1), (this.dir < 0 || 3 < this.dir) && (this.dir = 0), null !== this.monster_sprite && monster[this.sprite][this.frame][this.dir] != this.spr.texture ? this.spr.texture = monster[this.sprite][this.frame][this.dir] : null !== this.body_sprite && this.sheet[this.frame][this.dir] != this.body_sprite.texture && (this.body_sprite.texture = this.sheet[this.frame][this.dir]), this.pushx && (this.shakex < this.pushx ? this.shakex += 2 : this.shakex -= 2, 0 < this.pushx ? this.pushx -= 2 : this.pushx < 0 && (this.pushx += 2), Math.abs(this.pushx) <= 2 && (this.pushx = this.shakex = 0), this.spr.x = this.sx + this.shakex), this.pushy && (this.shakey < this.pushy ? this.shakey += 2 : this.shakey -= 2, 0 < this.pushy ? this.pushy -= 2 : this.pushy < 0 && (this.pushy += 2), Math.abs(this.pushy) <= 2 && (this.pushy = this.shakey = 0), this.spr.y = this.sy + this.shakey), this.last_check = Date.now()
		}, e.cleanup = function() {
			mob_ref[this.id] = null, target.id == this.id && (target.id = me, target.visible = !1, info_pane.set_info()), null !== this.monster_sprite && (null !== this.title && this.title.parent.removeChild(this.title), this.title = null, this.monster_sprite.parent.removeChild(this.monster_sprite), this.monster_sprite = null), null !== this.body_sprite && (null !== this.title && this.title.parent.removeChild(this.title), this.title = null, this.body_sprite.parent.removeChild(this.body_sprite), this.clothes_sprite = null, this.hair_sprite = null, this.body_sprite = null), null !== this.chat_sprite && (null !== this.chat_dots && this.chat_dots.parent.removeChild(this.chat_dots), this.chat_sprite.parent.removeChild(this.chat_sprite)), this.chat_sprite = null, this.chat_dots = null, mobs.remove(this)
		}, e
	}
}, jv.buildup_object = function(e) {
	if (!e.build || 0 == e.build.length) return 0;
	for (var t in null !== e.obj_sprite && (e.obj_sprite.parent.removeChild(e.obj_sprite), e.obj_sprite = null), e.other) null !== e.other[t] && (e.other[t].parent.removeChild(e.other[t]), e.other[t] = null);
	e.other = [];
	var i, o, n, a, r, s, l, d, c = -1 !== e.build.indexOf("a"),
		_ = e.build.split(","),
		p = e.x,
		u = e.y,
		h = 0,
		v = 0,
		g = 0;
	for (t in _) o = i = 0, "n" === _[t] ? u-- : "s" === _[t] ? u++ : "w" === _[t] ? p-- : "e" === _[t] ? p++ : (-1 !== _[t].indexOf("b") && (e.can_block = 1, _[t] = _[t].replace("b", "")), -1 !== _[t].indexOf("f") && (i = 1, _[t] = _[t].replace("f", "")), -1 !== _[t].indexOf("a") && (o = 1, _[t] = _[t].replace("a", "")), -1 !== _[t].indexOf("o") && (l = (s = _[t].split("")).indexOf("o"), d = s.indexOf("|", l), (v = s.splice(l, d - l + 1)).pop(), v.shift(), v = Number(v.join("")), _[t] = s.join("")), -1 !== _[t].indexOf("t") && (l = (s = _[t].split("")).indexOf("t"), d = s.indexOf("|", l), (n = s.splice(l, d - l + 1)).pop(), n.shift(), n = Number("0x" + n.join("")), _[t] = s.join("")), -1 !== _[t].indexOf("q") && (l = (s = _[t].split("")).indexOf("q"), d = s.indexOf("|", l), (a = s.splice(l, d - l + 1)).pop(), a.shift(), a = Number(a.join("")), _[t] = s.join("")), _[t] = Number(_[t]), isNaN(_[t]) && (_[t] = 858), (r = _[t] < 0 ? jv.sprite(tiles[-_[t] % 16][Math.floor(-_[t] / 16)]) : jv.sprite(items[_[t] % 16][Math.floor(_[t] / 16)])).x = 32 * p, r.y = 32 * u + v, r.ordering = g, v = v && 0, n && (r.tint = n, n = void 0), a && (r.alpha = a, a = void 0), 0 == g ? (e.sprite = _[t], e.obj_sprite = r, i ? (h++, r.ry = r.y + 32, player_container.addChild(r), update_sort = 1) : (c ? o ? anim2_container : anim1_container : object_container).addChild(r)) : (r.base = e.obj_sprite, e.other.push(r), i ? (r.foreground = !0, h++, r.ry = (r.base.y > r.y ? r.base : r).y + 32, 1 < h && (r.ry += h), player_container.addChild(r), update_sort = 1, debug_obj = r) : (c ? o ? anim2_container : anim1_container : object_container).addChild(r)), g += 1);
	return 1
}, jv.cleanup_object = function(e) {
	for (var t in obj_ref[e.id] = null, delete obj_ref[e.id], object_container.cacheAsBitmap = !1, null !== e.obj_sprite && e.obj_sprite.parent.removeChild(e.obj_sprite), e.other) null !== e.other[t] && e.other[t].parent.removeChild(e.other[t]);
	e.hpbar && e.hpbar.cleanup(), objects.remove(e)
}, jv.Object = {
	create: function(e, t) {
		var i = {
			template: "",
			name: "",
			owner: -1,
			x: -1,
			y: -1,
			sprite: 8,
			obj_sprite: null,
			other: [],
			can_block: 0,
			update: function() {},
			buildup: function() {
				return jv.buildup_object(this)
			},
			cleanup: function() {
				jv.cleanup_object(this)
			}
		};
		return i
	}
}, jv.Effect = {
	create: function(e, t) {
		var i = {
			template: ""
		};
		return i.x = e, i.y = t, i.life = 100, i.frame = 0, i.started = 0, i.created = Date.now(), i.p = [], i.start = function() {}, i.particle = function() {
			var e = new PIXI.Graphics;
			return e.created = Date.now(), e.move = function() {}, e.life = 50, e.frame = 0, e.x = this.x, e.y = this.y, effect_container.addChild(e), this.p.push(e), e
		}, i.circle = function(e, t) {
			var i = this.particle();
			return i.lineStyle(0), i.beginFill(e, .4), i.drawCircle(0, 0, t), i.beginFill(e, .9), i.drawCircle(0, 0, t - 1), i.endFill(), i
		}, i.text = function(e, t) {
			e = jv.text(e, t = null == t ? {
				font: "12px Verdana",
				lineJoin: "round",
				fill: 15658734
			} : t);
			return e.created = Date.now(), e.move = function() {}, e.life = 50, e.frame = 0, e.x = this.x, e.y = this.y, effect_container.addChild(e), this.p.push(e), e
		}, i.sprite = function(e) {
			return (e = e < 0 ? jv.sprite(tiles[-e % 16][Math.floor(-e / 16)]) : jv.sprite(items[e % 16][Math.floor(e / 16)])).created = Date.now(), e.move = function() {}, e.life = 50, e.frame = 0, e.position.x -= 16, e.position.y -= 16, e.x = this.x, e.y = this.y, e.anchor.x = .5, e.anchor.y = .5, effect_container.addChild(e), this.p.push(e), e
		}, i.run = function() {}, i.update = function() {
			for (var e in this.started || (this.start(), this.started = 1), this.run(this.p[e]), this.p) this.p[e].completed || (this.p[e].x += this.p[e].dx, this.p[e].y += this.p[e].dy, this.p[e].frame + 1 >= this.p[e].life ? (void(this.p[e].visible = 0) !== this.p[e].clear && this.p[e].clear(), this.p[e].completed = 1) : this.move(this.p[e]), this.p[e].frame++);
			this.frame++, this.frame > this.life && this.cleanup()
		}, i.cleanup = function() {
			for (var e in this.p) void 0 !== this.p[e].clear && this.p[e].clear(), this.p[e].parent.removeChild(this.p[e]), void 0 !== this.p[e].destroy && this.p[e].destroy(), delete this.p[e];
			effects.remove(this)
		}, i
	}
}, jv.InventorySlot = {
	create: function(e, t, i, o) {
		var n = jv.sprite();
		return o = o || ui_container, n.slot = i, n.z = i + 50, n.interactive = !0, n.do_touch = function(e) {
			this.build || this.texture == tiles[0][0] || (this.scale.x = 2, this.scale.y = 2, this.do_drag(), this.do_touch_move(e))
		}, n.do_touch_move = function(e) {
			touching += 1, touchx = e.data.getLocalPosition(this.parent).x, touchy = e.data.getLocalPosition(this.parent).y, drag == this && (drag.x = touchx - 32, drag.y = touchy - 42)
		}, n.do_click = function() {
			if (jv.last_button_down = Date.now(), jv.global_button_down = 0, this.texture != tiles[0][0]) {
				if (drag) {
					var e, t = 16,
						i = 16;
					touching && (t = 32, i = 42);
					for (var o, n, a, r, s = 0; s < item_length; s++)
						if (this.slot != s && this.x + t > inv[s].x + 0 && this.x + t < inv[s].x + 32 + 0 && this.y + i > inv[s].y && this.y + i < inv[s].y + 32) {
							e = s;
							break
						} this.x < -32 && -1e3 < this.x ? send({
						type: "d",
						slot: this.slot + item_page * item_length,
						amt: drop_amt
					}) : void 0 !== e && e !== this.slot && (!touching || 100 < touching) && (send({
						type: "sw",
						slot: this.slot + item_page * item_length,
						swap: e + item_page * item_length
					}), r = this.title.text, o = this.quantity, n = this.sprite, a = this.equip, this.clear_item(), void 0 !== inv[e].sprite && this.draw_item(inv[e].title.text, inv[e].quantity, inv[e].sprite, inv[e].equip), inv[e].clear_item(), void 0 !== n && inv[e].draw_item(r, o, n, a), r = inv[e]), drag.reset_drag(), drag = void 0
				}
				this.build ? jv.build_dialog.info.set_info(this) : (this.texture != tiles[0][0] && info_pane.set_info(this), r && info_pane.set_info(r), touching = 0)
			}
		}, n.do_drag = function() {
			this.build || this.texture == tiles[0][0] || (drag && drag.reset_drag(), drag = this, jv.global_button_down = 1, this.qty_text.visible = !1, this.title.visible = !1, this.z = 100, this.parent.children.sort(zCompare))
		}, n.reset_drag = function() {
			this.scale.x = 1, this.scale.y = 1, this.x = this.ox, this.y = this.oy, this.z = this.slot + 50, this.qty_text.visible = !0, this.title.visible = !0
		}, n.mouse_over = function(e) {
			this.title.alpha = 1, this.scale.x = 1.1, this.scale.y = 1.1
		}, n.mouse_out = function(e) {
			this.title.alpha = 0, this.scale.x = 1, this.scale.y = 1
		}, n.on("mouseover", n.mouse_over), n.on("mouseout", n.mouse_out), n.on("mouseup", n.do_click), n.on("mouseupoutside", n.do_click), n.on("touchend", n.do_click), n.on("touchendoutside", n.do_click), n.on("mousedown", n.do_drag), n.on("touchstart", n.do_touch), n.on("touchmove", n.do_touch_move), n.x = e, n.y = t, n.ox = e, n.oy = t, n.quantity = 0, n.qty_text = jv.text("", {
			font: "10px Verdana",
			fill: 16777215,
			lineJoin: "round",
			stroke: jv.color_medium,
			strokeThickness: 4
		}), n.qty_text.x = 0, n.qty_text.y = 22, n.addChild(n.qty_text), n.title = jv.text("", {
			font: "9px Verdana",
			fill: 16777215,
			lineJoin: "round",
			stroke: jv.color_medium,
			strokeThickness: 3
		}), n.title.x = 16 - n.title.width / 2, n.title.y = -8, n.title.alpha = 0, n.equip = 0, n.sprite = void 0, n.gfx = new PIXI.Graphics, n.gfx.x = n.x - 1, n.gfx.y = n.y - 1, n.gfx.z = n.slot, n.clear_item = function() {
			this.texture = tiles[0][0], this.tint = 16777215, this.sprite = void 0, this.qty_text.text = "", this.title.text = "", this.gfx.clear(), this.gfx.beginFill(jv.color_light, 1), this.gfx.drawRect(0, 0, 32, 32, 1), this.gfx.endFill(), this.gfx.lineStyle(2, jv.color_bright, 1), this.gfx.beginFill(jv.color_light, 0), this.gfx.moveTo(32, 32), this.gfx.lineTo(32, 0), this.gfx.moveTo(32, 32), this.gfx.lineTo(0, 32), this.gfx.lineStyle(2, jv.color_dark, 1), this.gfx.moveTo(0, 0), this.gfx.lineTo(32, 0), this.gfx.moveTo(0, 0), this.gfx.lineTo(0, 32), this.gfx.endFill()
		}, n.draw_item = function(e, t, i, o, n) {
			e && (this.texture = i < 0 ? tiles[-i % 16][Math.floor(-i / 16)] : items[i % 16][Math.floor(i / 16)], this.quantity = t, 1 < this.quantity && (this.qty_text.text = this.quantity), this.quantity || (this.tint = 5592405), this.title.text = e, this.title.x = 16 - this.title.width / 2, this.equip = o, this.sprite = i, 1 != o && 2 != o || (1 == o && (this.gfx.lineStyle(0, 7829384, 0), this.gfx.beginFill(65535, .1), this.gfx.drawRoundedRect(1, 1, 31, 31, 2), this.gfx.endFill(), this.gfx.beginFill(4521983, .2), this.gfx.drawCircle(16, 16, 12), this.gfx.endFill()), 1 == o ? this.gfx.lineStyle(2, 7454404, .9) : this.gfx.lineStyle(2, 10027008, .8), this.gfx.drawRoundedRect(1, 0, 31, 32, 2)))
		}, o.addChild(n.gfx), o.addChild(n), n.addChild(n.title), n.parent.children.sort(zCompare), n
	}
}, jv.loop = function() {
	if (now = Date.now(), "ready" == jv.state) {
		var e, t, i;
		for (show_fps && (jv.fps.text = "FPS: " + Math.round(jv.fps_num)), jv.mouseDown && jv.mouse.y < 416 && (inputting || editing) && editor.blur(), (jv.transition || 0 < map_fade.alpha) && (1 === jv.transition ? (map_fade.alpha += .03, (map_fade.visible = 1) <= map_fade.alpha && (map_fade.alpha = 1, 300 < Date.now() - last_dest) && (jv.transition = 2)) : (map_fade.alpha -= .02, map_fade.alpha <= 0 && (jv.map_title.alpha = .8, jv.map_title.timer = now, map_fade.alpha = 0, map_fade.visible = 0, jv.transition = 0))), 0 < jv.map_title.alpha && 1e3 < now - jv.map_title.timer && (jv.map_title.alpha -= .01, jv.map_title.alpha <= 0) && (jv.map_title.alpha = 0), game_fade.alpha < fade_to ? (game_fade.alpha += .01, game_fade.alpha >= fade_to && (game_fade.alpha = fade_to)) : game_fade.alpha > fade_to && (game_fade.alpha -= .01, game_fade.alpha <= fade_to) && (game_fade.alpha = fade_to), skill_status.alpha && 2600 < now - skill_status.timer && (skill_status.alpha -= .02, skill_status.alpha < .5 && exp_status.title.alpha < 1 && (exp_status.title.alpha += .04), skill_status.alpha <= 0) && (skill_status.interactive = !1, exp_status.title.alpha = 1), drag && !touching && (drag.x = jv.mouse.x - 596, drag.y = jv.mouse.y - 16), jv.upgrade_number !== jv.upgrade_current ? (0 == jv.upgrade_add.alpha && jv.upgrade_number > jv.upgrade_current && (jv.upgrade_add.text = "+" + (jv.upgrade_number - jv.upgrade_current), jv.upgrade_add.x = 569 - jv.upgrade_add.width, jv.upgrade_add.alpha = .8, jv.upgrade_timer = now), jv.upgrade_number > jv.upgrade_current + 1e4 ? jv.upgrade_current += 1e3 : jv.upgrade_number > jv.upgrade_current + 1e3 ? jv.upgrade_current += 100 : jv.upgrade_number > jv.upgrade_current + 100 ? jv.upgrade_current += 10 : jv.upgrade_number > jv.upgrade_current ? jv.upgrade_current++ : jv.upgrade_number < jv.upgrade_current - 1e4 ? jv.upgrade_current -= 1e3 : jv.upgrade_number < jv.upgrade_current - 1e3 ? jv.upgrade_current -= 100 : jv.upgrade_number < jv.upgrade_current - 100 ? jv.upgrade_current -= 10 : jv.upgrade_number < jv.upgrade_current && jv.upgrade_current--, e = "00000000" + String(jv.upgrade_current), jv.upgrade_counter.text = e.substr(e.length - 8), jv.upgrade_counter.x = 569 - jv.upgrade_counter.width) : 2e3 < now - jv.upgrade_timer && 0 < jv.upgrade_add.alpha && (jv.upgrade_add.alpha -= .04, jv.upgrade_add.alpha < 0) && (jv.upgrade_add.alpha = 0), effects.process(function(e) {
				e.update()
			}), mobs.process(function(e) {
				e.update()
			}), myself && myself.moved && update_container(), update_sort && 500 < now - last_sort && (player_container.children.sort(sortCompare), update_sort = 0, last_sort = now), 500 < now - animation_timer && (animation_timer = now, anim_map_container.visible = !anim_map_container.visible, anim1_container.visible = !anim1_container.visible, anim2_container.visible = !anim2_container.visible), is_chatting ? input_field.hasFocus && "say" === jv.toggle_chat.mode && "/" != input_field.chars[0] && input_field.chars.length || (is_chatting = 0, send({
				type: "c",
				r: "c0"
			})) : input_field.hasFocus && "say" == jv.toggle_chat.mode && "/" !== input_field.chars[0] && input_field.chars.length && (is_chatting = 1, send({
				type: "c",
				r: "c1"
			})), t = 0; t < jv.chat_fade.lines.length; t++) jv.chat_fade.lines[t].timer = jv.chat_fade.lines[t].timer + 1 || 1, 600 < jv.chat_fade.lines[t].timer && (jv.chat_fade.lines[t].alpha -= .02), jv.chat_fade.lines[t].alpha <= 0 && (i = jv.chat_fade.lines.shift(), jv.chat_fade.line_container.removeChild(i), jv.chat_fade.offset += i.height + jv.chat_fade.line_space, i = null);
		jv.chat_fade.line_container.y > -jv.chat_fade.offset && (jv.chat_fade.line_container.y -= 2)
	}
};
var parse = function(json) {
		if ("zip" === json.type) {
			var i, packets = JSON.parse(jv.unzip(json.data));
			if (void 0 !== packets.type) parse(packets);
			else
				for (i = 0; i < packets.length; i++) parse(JSON.parse(packets[i]))
		} else if ("pkg" === json.type) {
			var i, packets = JSON.parse(json.data);
			for (i = 0; i < packets.length; i++) parse(JSON.parse(packets[i]))
		} else if ("logmsg" === json.type) jv.login_dialog.notice.text = json.text, jv.login_dialog.notice.w = 0, jv.login_dialog.notice.center(), jv.login_dialog.okay.enable(1), jv.login_dialog.create.enable(1), jv.login_dialog.worlds.enable(1), jv.login_dialog.guest.enable(1);
		else if ("crtmsg" === json.type) jv.create_dialog.notice.text = json.text, jv.create_dialog.notice.w = 0, jv.create_dialog.notice.center(), jv.create_dialog.okay.enable(1), jv.create_dialog.login.enable(1);
		else if ("mload" !== json.type)
			if ("music" === json.type) playMusic(json.m, 0, json.s);
			else if ("P" === json.type) last_pong = Date.now(), ping = last_pong - last_ping, ping_count++, jv.ping.text = 8e3 <= ping ? "PING: dropped" : "PING: " + Math.round(ping);
		else if ("accepted" === json.type) {
			var temp_input;
			json.created ? (Cookies.set("ml_user", jv.base64_encode(jv.create_dialog.username.chars), {
				expires: 730
			}), Cookies.set("ml_pass", jv.base64_encode(jv.create_dialog.password.chars), {
				expires: 730
			}), jv.choose_name.visible = 0, jv.login_dialog.username.setText(jv.create_dialog.username.chars), jv.login_dialog.password.setText(jv.create_dialog.password.chars), jv.create_dialog.visible = 0, jv.create_dialog.okay.enable(1), jv.create_dialog.login.enable(1), jv.create_dialog.notice.text = "", myName = jv.create_dialog.username.chars) : (json.guest ? (Cookies.set("ml_user", jv.base64_encode(json.name), {
				expires: 730
			}), Cookies.set("ml_pass", jv.base64_encode(jv.base64_encode(json.pass)), {
				expires: 730
			}), jv.login_dialog.username.setText(json.name), jv.login_dialog.password.setText(jv.base64_encode(json.pass)), jv.login_dialog.guest.visible = 0) : jv.login_dialog.visible && jv.login_dialog.username.chars ? (Cookies.set("ml_user", jv.base64_encode(jv.login_dialog.username.chars), {
				expires: 730
			}), Cookies.set("ml_pass", jv.base64_encode(jv.login_dialog.password.chars), {
				expires: 730
			}), jv.login_dialog.username.setText(jv.login_dialog.username.chars), jv.login_dialog.password.setText(jv.login_dialog.password.chars)) : jv.create_dialog.visible && jv.create_dialog.username.chars && (Cookies.set("ml_user", jv.base64_encode(jv.create_dialog.username.chars), {
				expires: 730
			}), Cookies.set("ml_pass", jv.base64_encode(jv.create_dialog.password.chars), {
				expires: 730
			}), jv.login_dialog.username.setText(jv.create_dialog.username.chars), jv.login_dialog.password.setText(jv.create_dialog.password.chars)), jv.create_dialog.notice.text = "", jv.login_dialog.notice.text = "", splash.visible = 0, jv.login_dialog.hide(), jv.create_dialog.hide(), me = json.id, ui_container.visible = 1, static_container.visible = 1, game_fade.visible = 1, game_state = GAME_PLAYING, jv.login_dialog.username.blur(), jv.login_dialog.password.blur(), window.onbeforeunload = confirmLeave, MAP_WIDTH = json.mw, MAP_HEIGHT = json.mh, tile_speed = JSON.parse(JSON.stringify(json.tile)), myName = json.name, temp_input = document.getElementById("input_field"), temp_input && temp_input.blur(), fade_to = 0, fadeSong(music.rpgtitle))
		} else if ("death" === json.type) myName = "", family = "", me = -1, window.onbeforeunload = null, myself = void 0, game_fade.visible = 1, fade_to = 1, splash.visible = 0, jv.login_dialog.hide(), jv.spawn_dialog.death.text = json.death.replace(/(<([^>]+)>)/gi, ""), jv.spawn_dialog.dust.text = json.angel_dust, jv.spawn_dialog.show();
		else if ("quit" === json.type) has_quit = 1, connection.close(), show_reconnect("");
		else if ("fade" === json.type) fade_to = json.f;
		else if ("pass" !== json.type)
			if ("message" === json.type) {
				if (json.text = unescape(json.text), void 0 !== json.id) {
					var talker = getMob(json.id);
					talker && (talker.bubble = jv.ChatBubble.create(json.text, talker), json.text = talker.name + ": <span style='color:#e8e87d'>" + json.text + "</span>")
				} else if (void 0 !== json.x) return jv.ChatBubble.create(json.text, json.x, json.y), void(json.sound && playSound(json.sound));
				json.name && myself && json.name !== myself.name && -1 === jv.chatters.indexOf(json.name) && (jv.chatters.push(json.name), 5 < jv.chatters.length) && jv.chatters.shift(), append(json.text), void 0 !== json.error && (jv.disconnect_error = json.error)
			} else if ("script" === json.type) document.getElementById("script_code").style.display = "", document.getElementById("script_name").style.display = "", document.getElementById("script_name").value = json.name, editor.setValue(json.script), editor.clearSelection();
		else if ("mt" === json.type) jv.transition = 1, map_fade.alpha = 1, 1 == json.s ? jv.map_title.tint = 8978312 : 0 === json.s ? jv.map_title.tint = 16777215 : jv.map_title.tint = JSON.parse(json.s), jv.map_title.alpha = 0, dest = -1, last_dest = Date.now(), json.m ? playMusic(json.m) : playMusic(), json.w && (MAP_WIDTH = json.w), json.h && (MAP_HEIGHT = json.h), jv.map_title.text = json.t, jv.map_title.x = Math.floor(378 - jv.map_title.width / 2), dlevel = json.n, cave_wall != json.c && (cave_wall = json.c, cur_wall = cur_cover = cave_wall, make_covers()), cave_floor = json.f;
		else if ("mi" !== json.type)
			if ("obj_tpl" === json.type) {
				var tpl = {};
				tpl.name = json.name, tpl.description = json.desc, tpl.can_stack = json.stack, tpl.can_pickup = json.pickup, tpl.can_block = json.block, tpl.sprite = json.spr, tpl.build = json.build, object_dict[json.tpl] = tpl, objects.process(function(e) {
					e.template == json.tpl && e.cleanup()
				})
			} else if ("plr_tpl" === json.type) {
			var tpl = {};
			tpl.name = json.n, tpl.tribe = json.t, tpl.level = json.l, null == json.p ? tpl.title_color = 15724527 : tpl.title_color = json.p, tpl.premium = json.pr, myself && json.id == myself.id && (jv.premium = json.pr, jv.dialog_costume && (jv.dialog_costume.diamonds.text = jv.premium || 0), !(jv.premium || 1 <= tpl.level) || myself.name && -1 != myself.name.indexOf("guest-") || (jv.costume_button.visible = !0, jv.diamonds_button.visible = !0)), tpl.sprite = json.s, tpl.body = json.b, tpl.hair = json.h, tpl.hair_color = json.hc, tpl.clothes = json.c, tpl.clothes_color = json.cc, tpl.eye_color = json.ec, tpl.id = json.id, tpl.body && -1 != tpl.body && (tpl.sheet = build_doll(tpl.body, tpl.clothes, tpl.clothes_color, tpl.hair, tpl.hair_color, tpl.eye_color)), player_dict[json.id] = tpl, mobs.process(function(e) {
				e.template == json.id && e.cleanup()
			})
		} else if ("fx_tpl" === json.type) eval("var ob = " + json.code), effect_dict[json.tpl] = ob;
		else if ("fx" === json.type) {
			var ef, ob;
			!json.force && 250 < effects.items.length - effects.hole.length || (ef = jv.Effect.create(), ob = effect_dict[json.tpl], ef.sound = json.s, ef.x = 32 * json.x + 16, ef.y = 32 * json.y, ef.dir = json.d, ef.start = ob.start, ef.run = ob.run, ef.move = ob.move, (has_focus || json.force) && effects.add(ef), void 0 !== sound[ef.sound] && playSound(ef.sound))
		} else if ("obj" === json.type) {
			object_container.cacheAsBitmap && (object_container.cacheAsBitmap = !1, anim1_container.cacheAsBitmap = !1, anim2_container.cacheAsBitmap = !1), objects.process(function(e) {
				e.updated = 0
			});
			for (var i = 0; i < json.data.length; i++) parse(JSON.parse(json.data[i]));
			for (var to_cleanup = [], len = (objects.process(function(e) {
					0 === e.updated && to_cleanup.push(e)
				}), to_cleanup.length), i = 0; i < len; i++) to_cleanup[i].cleanup()
		} else if ("pl" === json.type) {
			mobs.process(function(e) {
				e.updated = 0
			});
			for (var i = 0; i < json.data.length; i++) parse(JSON.parse(json.data[i]));
			for (var to_cleanup = [], len = (mobs.process(function(e) {
					0 == e.updated && to_cleanup.push(e)
				}), to_cleanup.length), i = 0; i < len; i++) to_cleanup[i].cleanup()
		} else if ("o" === json.type) {
			object_container.cacheAsBitmap && (object_container.cacheAsBitmap = !1, anim1_container.cacheAsBitmap = !1, anim2_container.cacheAsBitmap = !1), json.x = Number(json.x), json.y = Number(json.y);
			var key = getkey(json.x, json.y),
				tile_index = (delete map_index[key], map_index[key] = {}, map_index[key]),
				to_cleanup = (tile_index.o = [], tile_index.update = now, tile_index.template = json.d, tile_index.block = 0, []);
			objects.process(function(e) {
				e.x === json.x && e.y === json.y && to_cleanup.push(e)
			});
			var i, len = to_cleanup.length;
			for (i = 0; i < len; i++) to_cleanup[i].cleanup();
			var obj = json.d.split("|");
			for (i in "" == obj[0] && (obj = []), obj) object = jv.Object.create(), object.template = obj[i], object.x = Number(json.x), object.y = Number(json.y), object.name = object_dict[object.template].name, object.description = object_dict[object.template].description, object.build = object_dict[object.template].build, object.buildup() || (object.sprite = object_dict[object.template].sprite, object.sprite < 0 ? object.obj_sprite = jv.sprite(tiles[-object.sprite % 16][Math.floor(-object.sprite / 16)]) : object.obj_sprite = jv.sprite(items[object.sprite % 16][Math.floor(object.sprite / 16)]), object.obj_sprite.x = 32 * object.x, object.obj_sprite.y = 32 * object.y, object_container.addChild(object.obj_sprite)), object.can_block = object_dict[object.template].can_block, object.can_stack = object_dict[object.template].can_stack, object.can_pickup = object_dict[object.template].can_pickup, object.can_block && (tile_index.block = 1), tile_index.o.push(object), objects.add(object)
		} else if ("mp" === json.type) jv.mapping_dialog.show();
		else if ("stat" === json.type) {
			var i;
			for (i in json.obj) jv.stat_dialog[i] && (jv.stat_dialog[i].text = json.obj[i])
		} else if ("upg" === json.type) jv.upgrades = JSON.parse(JSON.stringify(json.obj)), jv.upgrade_dialog.do_update(), jv.upgrade_dialog.show();
		else if ("reinc" === json.type) jv.reinc = JSON.parse(JSON.stringify(json.obj)), jv.reincarnate_dialog.do_update();
		else if ("abc" === json.type) jv.ability[json.i] && jv.ability[json.i].activate();
		else if ("abl" === json.type) {
			var i;
			for (jv.abl = JSON.parse(JSON.stringify(json.obj)), i = 0; i < jv.abl.length || i < jv.ability.length; i++) jv.abl[i] ? (jv.ability[i] ? jv.ability[i].spr !== jv.abl[i].spr && (jv.ability[i].icon.texture = items[jv.abl[i].spr % 16][Math.floor(jv.abl[i].spr / 16)]) : jv.ability[i] = jv.AbilityButton.create(520 - 68 * i, 362, jv.abl[i].spr, static_container), jv.ability[i].ready && (Date.now() - jv.abl[i].c) / (1e3 * jv.abl[i].cd) < 1 && jv.ability[i].activate(), jv.ability[i].cooldown = 1e3 * jv.abl[i].cd, jv.ability[i].last_click = jv.abl[i].c, jv.ability[i].spr = jv.abl[i].spr, jv.ability[i].ind = i, jv.ability[i].do_update(), jv.ability[i].visible = 1) : jv.ability[i] && (jv.ability[i].visible = 0)
		} else if ("quest" === json.type) jv.quest = JSON.parse(JSON.stringify(json.obj)), jv.quest_dialog.do_update(), jv.quest_dialog.show();
		else if ("skill" === json.type) {
			var i;
			for (i in jv.skills = JSON.parse(JSON.stringify(json.obj)), jv.skill_tier = json.tier, jv.skill_order = [], jv.skills) jv.skill_order.push(i);
			jv.skill_order.sort(function(e, t) {
				return jv.skills[t][2] - jv.skills[e][2]
			}), jv.skill_dialog.do_update(), jv.skill_dialog.show()
		} else if ("cb" === json.type) json.b && (jv.costumes.push(Number(json.b)), jv.costume_percent = Math.ceil(jv.costumes.length / max_costume * 100), jv.dialog_costume) && (jv.dialog_costume.percent.text = jv.costume_percent + "%"), json.pr && (jv.premium = Number(json.pr), jv.dialog_costume) && (jv.dialog_costume.diamonds.text = jv.premium || 0), jv.dialog_costume && jv.dialog_costume.notice && (jv.dialog_costume.notice.text = json.r, jv.dialog_costume.notice.x = jv.dialog_costume.w / 2 - jv.dialog_costume.notice.width / 2, jv.dialog_costume.apply_button.enable(1), jv.dialog_costume.diamonds.text = jv.premium, json.b) && jv.dialog_costume.update();
		else if ("costumes" === json.type) jv.costumes = json.c, jv.costume_list = json.l, jv.costume_percent = Math.ceil(jv.costumes.length / max_costume * 100), jv.dialog_costume && (jv.dialog_costume.percent.text = jv.costume_percent + "%");
		else if ("game" === json.type) jv.lock_body = json.lb, jv.lock_hair = json.lh, jv.lock_clothes = json.lc, jv.premium = json.pr, jv.dialog_costume && (jv.dialog_costume.diamonds.text = jv.premium || 0), (jv.premium || myself && 1 <= myself.level && -1 == myself.name.indexOf("guest-")) && (jv.costume_button.visible = !0, jv.diamonds_button.visible = !0);
		else if ("ping" === json.type) json.c == ping_count && (ping = Date.now() - last_ping, ping_count++);
		else if ("pos" === json.type) {
			var mob = getMob(me);
			mob && (json.t ? (jv.transition = 1, map_fade.alpha = 1, jv.map_title.alpha = 0, dest = -1, last_dest = Date.now()) : 0 <= mob.x && 0 <= mob.y && mob.x < MAP_WIDTH && mob.y < MAP_HEIGHT && (dest = -1), json.t || (jv.transition = 0), mob.x = json.x, mob.y = json.y, mob.fromx = json.x, mob.fromy = json.y, mob.tweenx = 0, mob.tweeny = 0, mob.traveled = 0, mob.last_check = Date.now(), mob.update_pos(), update_container())
		} else if ("hpp" === json.type) {
			var mob = getMob(json.id);
			mob && (mob.hpbar || (mob.hpbar = jv.HPBar.create(mob, json.o)), mob.hpbar.set(json.n))
		} else if ("hpo" === json.type) {
			var object;
			objects.process(function(e) {
				object || e.x != json.x || e.y != json.y || (object = e)
			}), object && (object.hpbar || (object.hpbar = jv.HPBar.create(object, json.o)), object.hpbar.set(json.n))
		} else if ("t" === json.type) {
			var mob = getMob(json.id),
				lb;
			mob && null != player_dict[json.tpl] && (mob.template = json.tpl, mob.name = player_dict[json.tpl].name, mob.tribe = player_dict[json.tpl].tribe, mob.level = player_dict[json.tpl].level, mob.sprite = player_dict[json.tpl].sprite, mob.body = player_dict[json.tpl].body, mob.hair = player_dict[json.tpl].hair, mob.clothes = player_dict[json.tpl].clothes, mob.title_color = player_dict[json.tpl].title_color, mob.hair_color = player_dict[json.tpl].hair_color, mob.clothes_color = player_dict[json.tpl].clothes_color, mob.eye_color = player_dict[json.tpl].eye_color, -1 !== mob.sprite && (mob.monster_sprite.texture = monster[mob.sprite][0][0], mob.monster_sprite.width < 32 && (mob.monster_sprite.scale.x = 32 / mob.monster_sprite.width), mob.monster_sprite.height < 32 && (mob.monster_sprite.scale.y = 32 / mob.monster_sprite.height), mob.halfx = Math.floor(mob.monster_sprite.width / 2), mob.halfy = Math.floor(mob.monster_sprite.height / 2), mob.xoffset = 16 - mob.halfx, mob.yoffset = 16 - Math.floor(mob.monster_sprite.height), (0 <= mob.body ? do_player_title : (null !== mob.title && mob.title.parent.removeChild(mob.title), mob.title = null, do_mob_title))(mob), lb = mob.monster_sprite.getLocalBounds(), mob.monster_sprite.width <= 48 ? mob.monster_sprite.hitArea = new PIXI.Rectangle(lb.x - 8, lb.y - 8, lb.width + 16, lb.height + 16) : mob.monster_sprite.hitArea = new PIXI.Rectangle(lb.x, lb.y, lb.width, lb.height)), mob.set_sprite(), mob.update_pos())
		} else if ("p" === json.type) {
			var mob = getMob(json.id),
				lb;
			if (null !== mob) mob.speed = json.s, mob.cur_speed = json.s, (json.id !== me || json.x == mob.x && json.y == mob.y) && (mob.last_dir = json.d, mob.dir = json.d), mob.chat_sprite.visible ? json.ch || (mob.chat_sprite.visible = 0) : json.ch && (mob.chat_sprite.visible = 1), json.i ? mob.prefix || (mob.prefix = json.i, mob.title.text = mob.prefix + mob.name, mob.title.xoff = mob.title.width / 2, mob.title.x = mob.spr.x - mob.title.xoff + mob.halfx) : mob.prefix && (delete mob.prefix, mob.title.text = mob.name, mob.title.xoff = mob.title.width / 2, mob.title.x = mob.spr.x - mob.title.xoff + mob.halfx), (1 < Math.abs(mob.x - json.x) || 1 < Math.abs(mob.y - json.y)) && (json.id === me && -1 != dest || (mob.fromx = mob.x, mob.fromy = mob.y, mob.x = json.x, mob.y = json.y, json.id == me && (mob.fromx = mob.x, mob.fromy = mob.y, mob.tweenx = 0, mob.tweeny = 0, mob.traveled = 0, mob.last_check = Date.now(), mob.update_pos(), update_container())), 4 < Math.abs(mob.x - json.x) || 4 < Math.abs(mob.y - json.y)) && (mob.fromx = json.x, mob.fromy = json.y, mob.x = json.x, mob.y = json.y, mob.traveled = 0, json.id == me) && (mob.fromx = mob.x, mob.fromy = mob.y, mob.tweenx = 0, mob.tweeny = 0, mob.traveled = 0, mob.last_check = Date.now(), mob.update_pos(), update_container()), mob.x === json.x && mob.y === json.y || json.id !== me && (mob.fromx = mob.x, mob.fromy = mob.y, mob.move(json.x, json.y));
			else {
				if (null == player_dict[json.tpl]) return;
				mob = jv.Entity.create(), mob.id = json.id, mob.x = json.x, mob.y = json.y, mob.template = json.tpl, mob.traveling = 0, mob.fromx = mob.x, mob.fromy = mob.y, mob.dx = json.dx, mob.dy = json.dy, mob.speed = json.s, mob.cur_speed = json.s, mob.dir = json.d, mob.name = player_dict[json.tpl].name, mob.tribe = player_dict[json.tpl].tribe, mob.level = player_dict[json.tpl].level, mob.sprite = player_dict[json.tpl].sprite, mob.body = player_dict[json.tpl].body, mob.hair = player_dict[json.tpl].hair, mob.clothes = player_dict[json.tpl].clothes, mob.title_color = player_dict[json.tpl].title_color, mob.hair_color = player_dict[json.tpl].hair_color, mob.clothes_color = player_dict[json.tpl].clothes_color, mob.eye_color = player_dict[json.tpl].eye_color, mob.id == me && (myself = mob, jv.premium || 1 <= myself.level && -1 == myself.name.indexOf("guest-")) && (jv.costume_button.visible = !0, jv.diamonds_button.visible = !0), mob.moved = 1, -1 !== mob.sprite ? (mob.monster_sprite = jv.sprite(monster[mob.sprite][0][0]), mob.monster_sprite.width < 32 && (mob.monster_sprite.scale.x = 32 / mob.monster_sprite.width), mob.monster_sprite.height < 32 && (mob.monster_sprite.scale.y = 32 / mob.monster_sprite.height), mob.halfx = Math.floor(mob.monster_sprite.width / 2), mob.halfy = Math.floor(mob.monster_sprite.height / 2), mob.xoffset = 16 - mob.halfx, mob.yoffset = 16 - Math.floor(mob.monster_sprite.height), (0 <= mob.body ? do_player_title : do_mob_title)(mob), mob.monster_sprite.width <= 48 && (lb = mob.monster_sprite.getLocalBounds(), mob.monster_sprite.hitArea = new PIXI.Rectangle(lb.x - 8, lb.y - 8, lb.width + 16, lb.height + 16))) : (mob.sheet = player_dict[json.tpl].sheet, mob.body_sprite = jv.sprite(mob.sheet[0][0]), mob.body_sprite.scale.x = 2, mob.body_sprite.scale.y = 2, mob.halfx = Math.floor(mob.body_sprite.width / 2), mob.halfy = Math.floor(mob.body_sprite.height / 2), mob.xoffset = 16 - mob.halfx, mob.yoffset = 18 - Math.floor(mob.body_sprite.height), do_player_title(mob)), mob.set_sprite(), mob.chat_sprite || (mob.chat_sprite = jv.sprite(), mob.chat_sprite.texture = jv.chat_say.texture, mob.chat_sprite.scale.x = 2, mob.chat_sprite.scale.y = 2, mob.chat_sprite.visible = 0, hover_container.addChild(mob.chat_sprite), mob.chat_dots = new PIXI.Graphics, mob.chat_dots.lineStyle(0, 1), mob.chat_dots.beginFill(3355443, 1), mob.chat_dots.drawRect(1.5, 3, 1, 1), mob.chat_dots.drawRect(3.5, 3, 1, 1), mob.chat_dots.drawRect(5.5, 3, 1, 1), mob.chat_dots.endFill(), mob.chat_sprite.addChild(mob.chat_dots)), mob.update_pos(), mob.id == me && update_container(), mobs.add(mob)
			}
			mob.updated = 1
		} else if ("inv" === json.type) {
			var data = json.data,
				i;
			for (i in item_data) item_data[i] = {};
			for (i in data) item_data[data[i].slot] = {}, item_data[data[i].slot].slot = data[i].slot, item_data[data[i].slot].n = data[i].n, item_data[data[i].slot].tpl = data[i].t, item_data[data[i].slot].spr = data[i].spr, item_data[data[i].slot].qty = data[i].qty, item_data[data[i].slot].eqp = data[i].eqp, item_data[data[i].slot].col = data[i].col;
			update_inventory()
		} else if ("bld" === json.type) json.data && (jv.raw_build_data = json.data), update_recipes(), update_build();
		else if ("remove" === json.type) {
			var mob = getMob(json.id);
			mob && mob.cleanup()
		} else if ("object" !== json.type)
			if ("tile" === json.type) {
				var c = loc2tile(json.x, json.y);
				map[c] && (map_container.cacheAsBitmap && (map_container.cacheAsBitmap = !1, anim_map_container.cacheAsBitmap = !1), map[c].texture = tiles[json.tile % 16][Math.floor(json.tile / 16)], map[c].spr = json.tile, 325 == json.tile ? (map[c].anim.visible = 1, anim_map_container.animations++) : map[c].anim.visible = 0, 16777215 != map[c].tint && (map[c].tint = 16777215), update_edges(), update_sort = 1)
			} else if ("map" === json.type) jv.update_map(json);
		else if ("s" === json.type) {
			var i;
			for (i in json.t && last_status !== json.t + json.k && (skill_status.timer = Date.now(), skill_status.interactive = !0, skill_status.alpha = 1, exp_status.title.alpha = 0, last_status = json.t + json.k), void 0 !== json.h && hp_status.set(json.h), void 0 !== json.k && skill_status.set(json.k), void 0 !== json.t && (skill_status.title.text = json.t.charAt(0).toUpperCase() + json.t.slice(1)), void 0 !== json.f && hunger_status.set(json.f), void 0 !== json.e && exp_status.set(json.e), void 0 !== json.p && (jv.upgrade_number = Math.floor(Number(json.p))), void 0 !== json.q && jv.equip_sprite !== json.q && (jv.equip_sprite = json.q, jv.equip_sprite < 0 ? ph_action.graphic.texture = tiles[Number(-jv.equip_sprite) % 16][Math.floor(Number(-jv.equip_sprite) / 16)] : 0 < jv.equip_sprite ? ph_action.graphic.texture = items[Number(jv.equip_sprite) % 16][Math.floor(Number(jv.equip_sprite) / 16)] : ph_action.graphic.texture = items[7][Math.floor(791 / 16)]), void 0 !== json.u && jv.pickup_sprite !== json.u && (jv.pickup_sprite = json.u, jv.pickup_sprite <= 0 ? ph_pickup.graphic.texture = tiles[Number(-jv.pickup_sprite) % 16][Math.floor(Number(-jv.pickup_sprite) / 16)] : 0 < jv.pickup_sprite && (ph_pickup.graphic.texture = items[Number(jv.pickup_sprite) % 16][Math.floor(Number(jv.pickup_sprite) / 16)])), jv.buffbar) jv.buffbar[i].visible = 0, jv.buffbar[i].gfx.visible = 0, jv.buffbar[i].t = "";
			if (void 0 !== json.b && json.b.length)
				for (i in json.b) jv.buffbar[i] || (jv.buffbar[i] = jv.sprite(jv.buffs[0][0]), jv.buffbar[i].gfx = new PIXI.Graphics, jv.buffbar[i].gfx.beginFill(12303291, .1), jv.buffbar[i].gfx.drawCircle(4, 4, 9), jv.buffbar[i].gfx.beginFill(13421772, .2), jv.buffbar[i].gfx.drawCircle(4, 4, 7), jv.buffbar[i].gfx.beginFill(16777215, .3), jv.buffbar[i].gfx.drawCircle(4, 4, 5), jv.buffbar[i].gfx.endFill(), jv.buffbar[i].visible = 0, jv.buffbar[i].x = 12 * i, jv.buffbar[i].gfx.x = jv.buffbar[i].x, jv.buffbar[i].gfx.y = jv.buffbar[i].y, jv.buff_container.addChild(jv.buffbar[i].gfx), jv.buff_container.addChild(jv.buffbar[i]), jv.buffbar[i].interactive = !0, jv.buffbar[i].buttonMode = !0, jv.buffbar[i].do_click = function() {
					var e, t = [];
					for (e in jv.buffbar) "" !== jv.buffbar[e].t && t.push(jv.buffbar[e].t);
					append("<color:#AAAAAA>" + t.join("\n"))
				}, jv.buffbar[i].on("mouseup", jv.buffbar[i].do_click), jv.buffbar[i].on("touchend", jv.buffbar[i].do_click)), jv.buffbar[i].t = json.b[i].t, jv.buffbar[i].texture = jv.buffs[json.b[i].s][0], jv.buffbar[i].visible = 1, jv.buffbar[i].gfx.visible = 1
		} else "effect" !== json.type && "move" === json.type && getMob(json.id).set_dest(json.x, json.y)
	},
	show_reconnect = function(e) {
		var t = [];
		objects.process(function(e) {
			t.push(e)
		});
		for (var i = t.length, o = 0; o < i; o++) t[o].cleanup();
		for (i = jv.ability.length, o = 0; o < i; o++) jv.ability[o].visible = 0;
		map_index = {}, item_data = [], build_data = [], tile_speed = {}, build_length = item_length = 15, family = myName = "", me = -1, myself = void(build_page = item_page = 0), window.onbeforeunload = null, clearInterval(jv.net_timer), jv.net_timer = null, clearInterval(jv.ping_timer), jv.ping_timer = null, ui_container.visible = 0, static_container.visible = 0, game_fade.visible = 0, game_state = GAME_TITLE, splash.visible = 1, playMusic("rpgtitle"), jv.establish_dialog.hide(), jv.reconnect_dialog.show(), jv.disconnect_error && (e = jv.disconnect_error, jv.disconnect_error = null), e && (jv.reconnect_dialog.notice.text = e, jv.reconnect_dialog.notice.w = 0, jv.reconnect_dialog.notice.center(), jv.reconnect_dialog.notice.top(22))
	},
	do_connect = function() {
		jv.reconnect_dialog.hide(), init_network()
	},
	init_network = function() {
		window.WebSocket = window.WebSocket || window.MozWebSocket;
		var t = {};
		document.location.search.replace(/\??(?:([^=]+)=([^&]*)&?)/g, function() {
			function e(e) {
				return decodeURIComponent(e.split("+").join(" "))
			}
			t[e(arguments[1])] = e(arguments[2])
		}), t.ip && "" !== t.ip || (t.ip = jv.selected_ip), connection && (delete connection.onopen, connection.onopen = null, delete connection.onerror, connection.onerror = null, connection.close()), connection = jv.connection_attempt ? new WebSocket("ws://" + t.ip + ":8080") : new WebSocket("wss://" + t.ip + ":443"), jv.reconnect_dialog.hide(), jv.establish_dialog.show(), jv.connection_attempt = jv.connection_attempt + 1 || 1, connection.onopen = function() {
			jv.connection_attempt = 0, jv.establish_dialog.hide(), jv.login_dialog.show(), game_state = GAME_TITLE, jv.tutorial_window.visible = 0, jv.choose_name.visible = 0, jv.create_dialog.modal = 1, jv.create_dialog.login.visible = 1, jv.create_dialog.y = 200, jv.create_dialog.heading.text = "Create New Character", jv.create_dialog.heading.x = jv.create_dialog.w / 2 - jv.create_dialog.heading.width / 2, jv.create_dialog.close.visible = 0, jv.login_dialog.okay.enable(1), jv.login_dialog.guest.enable(1), jv.login_dialog.create.enable(1), jv.login_dialog.worlds.enable(1), jv.ping_timer || (jv.ping_timer = setInterval(function() {
				send({
					type: "P"
				}), last_ping = Date.now()
			}, 9e3)), send({
				type: "client",
				ver: version,
				mobile: phone,
				agent: navigator.userAgent
			})
		}, connection.onerror = function(e) {
			jv.login_dialog.hide(), jv.create_dialog.hide(), 1 === jv.connection_attempt ? do_connect() : (2 === jv.connection_attempt ? show_reconnect("Unable to reach server. Try a different network connection or at another time.") : show_reconnect(has_quit ? "Couldn't connect to server." : "Lost connection to server."), jv.connection_attempt = 0)
		}, connection.onmessage = function(e) {
			parse(JSON.parse(e.data)), recheck_caches()
		}, jv.net_timer || (jv.net_timer = setInterval(jv.net_timer_function, 6e3))
	},
	setup_mobile_input = (jv.net_timer_function = function() {
		1 !== connection.readyState && (1 === jv.connection_attempt ? do_connect() : (jv.login_dialog.hide(), jv.create_dialog.hide(), jv.connection_attempt ? show_reconnect("Unable to connect to server.") : show_reconnect("Lost connection to server."), jv.connection_attempt = 0))
	}, jv.command = function(e) {
		if (!editing) {
			var t = e.split(" ");
			if (-1 == me) send({
				type: "login",
				data: e
			});
			else {
				if ("/sound" == t[0] && (sound_on = Math.abs(sound_on - 1), append(sound_on ? "<em>Sounds are now on.</em>" : "<em>Sounds are now off.</em>")), "/showfps" != t[0] && "/fps" != t[0] || (show_fps = Number(!show_fps), jv.fps.visible = show_fps), ("/showping" == t[0] || "/ping" == t[0]) && (show_ping = Number(!show_ping), jv.ping.visible = show_ping) && (send({
						type: "P"
					}), last_ping = Date.now()), "/fontsize" == t[0]) {
					var i = Number(t[1]);
					if (isNaN(i)) return;
					16 < i ? i = 16 : i < 9 && (i = 9), jv.chat_box.text_style.font = i + "px Verdana", jv.chat_fade.text_style.font = i + "px Verdana"
				}
				if ("/chat" == t[0] && (jv.chat_toggle ? (jv.chat_toggle = 0, jv.chat_fade.visible = !0, jv.chat_box.visible = !1) : (jv.chat_toggle = 1, jv.chat_fade.visible = !1, jv.chat_box.visible = !0), append("Chat box toggled.")), "/chatwidth" == t[0]) {
					i = Number(t[1]);
					if (isNaN(i)) return;
					100 < i ? i = 100 : i < 30 && (i = 30);
					var o = Math.floor(346 * i / 100);
					jv.chat_box.w = o, jv.chat_box.gfx.width = o, jv.chat_box.m.width = o, jv.chat_box.resume.x = jv.chat_box.w / 2 - 35, jv.chat_box.text_style.wordWrapWidth = jv.chat_box.w - 2 * jv.chat_box.padding, jv.chat_fade.w = o, jv.chat_fade.gfx.width = o, jv.chat_fade.m.width = o, jv.chat_fade.resume.x = jv.chat_fade.w / 2 - 35, jv.chat_fade.text_style.wordWrapWidth = jv.chat_fade.w - 2 * jv.chat_fade.padding
				}
				if ("/chatopacity" == t[0]) {
					i = Number(t[1]);
					if (isNaN(i)) return;
					100 < i ? i = 100 : i < 0 && (i = 0), jv.chat_box.gfx.max_alpha = +i / 100, jv.chat_box.visible && (jv.chat_box.gfx.alpha = jv.chat_box.gfx.max_alpha)
				}
				"/action" == t[0] && (ph_action.visible ? (jv.action_button.visible = 0, ph_action.visible = 0, info_pane.x = 580, info_pane.y = 284) : (jv.action_button.visible = 1, ph_action.visible = 1, info_pane.x = 480, info_pane.y = 34), append("Action button toggled.")), "/quickuse" == t[0] && (jv.quick_toggle ? (jv.hot_scene.visible = 0, jv.quick_toggle = 0) : (jv.hot_scene.visible = 1, jv.quick_toggle = 1), append("Quick use buttons toggled.")), "/pickup" == t[0] && send({
					type: "g"
				}), "/invicons" == t[0] && (jv.inv_icons ? (jv.inv_icons = 0, jv.inv_button.visible = 0, ui_container.build.visible = 0) : (jv.inv_icons = 1, jv.inv_button.visible = 1, ui_container.build.visible = 1), append("Inv icons toggled.")), "/dpad" == t[0] && (compass2.visible ? (compass.visible = 0, compass2.visible = 0, ph_dpad.visible = 0, jv.chat_box.h = 377, jv.chat_box.gfx.height = 379, jv.chat_box.m.height = 377, jv.chat_box.mask.height = 377) : (compass.visible = 1, compass2.visible = 1, ph_dpad.visible = 1, jv.chat_box.h = 210, jv.chat_box.gfx.height = 212, jv.chat_box.m.height = 210, jv.chat_box.mask.height = 210), jv.chat_box.resume.y = jv.chat_box.h - 35, append("Dpad toggled.")), "/upload" == e ? send({
					type: "script",
					name: document.getElementById("script_name").value,
					script: editor.getValue()
				}) : "/t" == t[0] ? (last_tell = t[1], send({
					type: "chat",
					data: e
				})) : "/drop" == t[0] ? (void 0 === t[amt = 1] || isNaN(t[1]) && "all" != t[1] || (amt = t[1]), 0 < (drop_amt = amt) && amt < 1e3 ? info_pane.drop_amount.set_text("Drop: " + amt) : info_pane.drop_amount.set_text("Drop: #"), append("Drop amount set to " + amt + ".")) : 0 === e.indexOf("/") || "say" == jv.toggle_chat.mode ? send({
					type: "chat",
					data: e
				}) : "global" == jv.toggle_chat.mode ? 0 === e.indexOf("/b ") ? send({
					type: "chat",
					data: e
				}) : send({
					type: "chat",
					data: "/b " + e
				}) : "tribe" == jv.toggle_chat.mode ? 0 === e.indexOf("/tc ") ? send({
					type: "chat",
					data: e
				}) : send({
					type: "chat",
					data: "/tc " + e
				}) : "party" == jv.toggle_chat.mode ? 0 === e.indexOf("/p ") ? send({
					type: "chat",
					data: e
				}) : send({
					type: "chat",
					data: "/p " + e
				}) : "tell" == jv.toggle_chat.mode && (0 === e.indexOf("/t ") ? (last_tell = t[1], send({
					type: "chat",
					data: e
				})) : (last_tell = t[0], send({
					type: "chat",
					data: "/t " + e
				})))
			}
		}
	}, jv.current_input = null, jv.hidden_input = null, jv.stars = "************************************************************************************", jv.TextInput = {
		create: function(e, t, i, o, n) {
			var a = jv.sprite();
			return n = n || ui_container, a.interactive = !0, a.hasFocus = 0, a.h = o, a.w = i, a.x = e, a.y = t, a.pos = 0, a.mobile = 0, a.password = 0, a.maxChars = 300, a.chars = "", a.text_style = {
				font: "12px Verdana",
				align: "left",
				fill: 16777215,
				lineJoin: "round"
			}, a.placeholder_style = JSON.parse(JSON.stringify(a.text_style)), a.placeholder_style.fill = 11184810, a.str = jv.text(" ", a.text_style), a.str.x += 2, a.str.y += 4, a.placeholder = jv.text("", a.placeholder_style), a.placeholder.x += 4, a.placeholder.y += 4, a.placeholder.alpha = .8, a.hidden_str = jv.text(" ", a.text_style), a.hidden_str.x += 2, a.hidden_str.y += 4, a.cursor = jv.text("|", a.text_style), a.cursor.y += 3, a.container = new PIXI.Container, a.gfx = new PIXI.Graphics, a.gfx.beginFill(jv.color_dark, .4), a.gfx.lineStyle(2, 7829367, .2), a.gfx.drawRoundedRect(0, 0, i, o, 4), a.gfx.endFill(), a.m = new PIXI.Graphics, a.m.beginFill(1118481, 0), a.m.drawRect(0, 0, i, o), a.m.endFill(), a.mask = a.m, a.onSubmit = function() {
				"" !== this.chars && jv.command(this.chars), this.chars = "", jv.hidden_input.value = "", this.pos = 0, this.blur()
			}, a.onFocus = function() {
				jv.current_input = this, jv.hidden_input.style.display = "block", jv.hidden_input.focus(), -(this.hasFocus = 1) === this.placeholder.text.indexOf("Tell") || this.chars.length || (last_tell && "" != last_tell ? (this.chars = last_tell + " ", jv.hidden_input.value = last_tell + " ") : (this.chars = "", jv.hidden_input.value = ""), this.pos = this.chars.length), this.update(), phone && (Keyboard && Keyboard.show ? Keyboard.show() : window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard && window.cordova.plugins.Keyboard.show()), input_field !== this || jv.chat_toggle || (jv.chat_box.gfx.alpha = jv.chat_box.gfx.max_alpha, jv.chat_box.visible = !0, jv.chat_fade.visible = !1, jv.chat_box.interactive = !0)
			}, a.setText = function(e) {
				this.chars = e, this.hasFocus && (jv.hidden_input.value = e), this.pos = this.chars.length, this.update()
			}, a.onBlur = function() {
				this.hasFocus = 0, jv.hidden_input.style.display = "none", jv.hidden_input.blur(), this.update(), input_field !== this || jv.chat_toggle || jv.chat_box.resume.visible || (jv.chat_box.gfx.alpha = 0, jv.chat_box.visible = 0, jv.chat_fade.visible = 1, jv.chat_box.interactive = !1)
			}, a.focus = function() {
				this.onFocus()
			}, a.blur = function() {
				this.onBlur()
			}, a.update = function() {
				jv.hidden_input && (phone && jv.login_dialog && game_state == GAME_TITLE && (document.activeElement == jv.hidden_input ? (jv.login_dialog.y = 12, jv.login_dialog.okay.left(40), jv.login_dialog.create.right(40), jv.login_dialog.create.bottom(20), jv.create_dialog.y = 12, jv.create_dialog.login.right(32), jv.create_dialog.login.bottom(20)) : jv.checkFocus = setTimeout(function() {
					document.activeElement != jv.hidden_input && (jv.login_dialog.y = 200, jv.login_dialog.okay.center(), jv.login_dialog.create.left(32), jv.login_dialog.create.bottom(-40), jv.create_dialog.y = 200, jv.create_dialog.login.center(), jv.create_dialog.login.bottom(-40))
				}, 200)), this.mobile || (jv.hidden_input.value = this.chars, jv.hidden_input.selectionStart = this.pos, jv.hidden_input.selectionEnd = this.pos)), this.cursor.visible = this.hasFocus, this.placeholder.visible = !this.hasFocus && !this.chars.length;
				var e = this.str.text;
				this.password ? (this.str.text = jv.stars.slice(0, this.chars.length), this.hidden_str.text = this.str.text.slice(0, this.pos)) : (this.str.text = this.chars, this.hidden_str.text = this.chars.slice(0, this.pos)), this.pos < 1 ? this.cursor.x = 0 : this.cursor.x = this.hidden_str.width - 1, this.cursor.x > this.w - 6 ? this.container.x = this.w - 6 - this.cursor.x : this.container.x = 0, this.str.text !== e && this.on_change && this.on_change()
			}, a.moveCursorLeft = function() {
				0 < this.pos && this.pos--, this.update()
			}, a.moveCursorRight = function() {
				this.pos < this.chars.length && this.pos++, this.update()
			}, a.onClick = function(e) {
				var t = e.data.global.x - this.x - this.container.x - this.parent.x,
					i = this.cursor.x;
				if (t < this.cursor.x) {
					for (; 0 < this.pos && Math.floor(t) <= this.cursor.x;) i = this.cursor.x, this.moveCursorLeft();
					Math.abs(this.cursor.x - t) > Math.abs(i - t) && this.moveCursorRight()
				} else {
					for (; this.pos < this.chars.length && Math.floor(t) >= this.cursor.x;) i = this.cursor.x, this.moveCursorRight();
					Math.abs(this.cursor.x - t) > Math.abs(i - t) && this.moveCursorLeft()
				}
				this.onFocus()
			}, a.deleteText = function(e, t) {
				1 == this.chars.length ? this.chars = "" : this.chars = this.chars.slice(0, e) + this.chars.slice(t, this.chars.length), this.update()
			}, a.onKey = function(e) {
				if (this.hasFocus) {
					var t = e.key;
					if (void 0 !== t && "WakeUp" !== t && "CapsLock" !== t && "Shift" !== t && "Control" !== t && "Alt" !== t && "AltGraph" !== t && !t.match(/^F\d{1,2}$/) && "Insert" !== t && "NumLock" !== t && "Meta" !== t && "Win" !== t && "Dead" !== t && "Unidentified" !== t && "AudioVolumeDown" !== t && "AudioVolumeUp" !== t && "AudioVolumeMute" !== t)
						if ("Tab" === t) this.tab_next && (this.mobile = 1, this.tab_next.mobile = 1, this.hasFocus = 0, this.update(), this.pos = this.chars.length, jv.hidden_input.value = this.tab_next.chars, this.tab_next.pos = this.tab_next.chars.length, this.tab_next.focus(), jv.hidden_input.selectionStart = this.tab_next.pos, jv.hidden_input.selectionEnd = this.tab_next.pos, this.mobile = 0, this.tab_next.mobile = 0);
						else if ("Enter" === t || 13 == e.keyCode) this.onSubmit(), phone && (Keyboard && Keyboard.hide ? Keyboard.hide() : window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard && window.cordova.plugins.Keyboard.hide(), AndroidFullScreen) && AndroidFullScreen.isImmersiveModeSupported() && AndroidFullScreen.immersiveMode();
					else switch (t) {
						case "Left":
						case "ArrowLeft":
							this.moveCursorLeft();
							break;
						case "Escape":
							this.chars = "", this.pos = 0, jv.hidden_input.value = "", this.blur();
							break;
						case "Right":
						case "ArrowRight":
							this.moveCursorRight();
							break;
						case "PageDown":
						case "PageUp":
						case "Home":
						case "End":
							break;
						case "Up":
						case "ArrowUp":
							break;
						case "Down":
						case "ArrowDown":
							break;
						case "Backspace":
							0 < this.pos && (this.moveCursorLeft(), this.deleteText(this.pos, this.pos + 1)), e.preventDefault();
							break;
						case "Del":
						case "Delete":
							this.pos < this.chars.length && this.deleteText(this.pos, this.pos + 1);
							break;
						default:
							if (e.ctrlKey && ("j" === t.toLowerCase() || "r" === t.toLowerCase())) return;
							if (" " === (t = "Spacebar" === t ? " " : t) && e.preventDefault(), t.length, 0 < this.maxChars && this.chars.length >= this.maxChars) return
					}
				}
			}, a.sync = function() {
				this.chars = jv.hidden_input.value, this.pos = this.chars.length, this.update()
			}, a.blink = function() {
				this.hasFocus && (this.cursor.alpha ? this.cursor.alpha = 0 : this.cursor.alpha = 1)
			}, a.blink_timer = setInterval(function() {
				a.blink()
			}, 250), jv.stage.on("mousedown", function() {
				a.blur()
			}), jv.stage.on("touchstart", function() {
				a.blur()
			}), a.on("mouseup", a.onClick), a.on("touchend", a.onClick), a.addChild(a.gfx), a.addChild(a.m), a.addChild(a.container), a.container.addChild(a.str), a.container.addChild(a.placeholder), a.container.addChild(a.cursor), n.addChild(a), a.update(), a
		}
	}, function() {
		var e = document.createElement("input");
		e.type = "text", e.style.display = "none", e.style.position = "fixed", e.style.opacity = 0, e.style.pointerEvents = "none", e.style.left = "0px", e.style.bottom = "0px", e.style.left = "-100px", e.style.top = "-100px", e.style.zIndex = 10, e.autocapitalize = "off", e.addEventListener("blur", function() {
			jv.current_input && (jv.current_input.blur(), phone) && setTimeout(function() {
				jv.current_input || (Keyboard && Keyboard.hide ? Keyboard.hide() : window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard && window.cordova.plugins.Keyboard.hide())
			}, 5)
		}, !1), e.addEventListener("keydown", function(e) {
			9 === e.keyCode && e.preventDefault(), jv.current_input && (e = e || window.event, jv.current_input.hasFocus) && (jv.current_input.mobile = 1, jv.current_input.chars = jv.hidden_input.value, jv.current_input.pos = jv.hidden_input.selectionStart, jv.current_input.update(), jv.current_input.mobile = 0)
		}), e.addEventListener("keypress", function(e) {
			phone && jv.current_input && 13 == (e = e || window.event).keyCode && (jv.current_input.onSubmit(), Keyboard && Keyboard.hide ? Keyboard.hide() : window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard && window.cordova.plugins.Keyboard.hide())
		}), e.addEventListener("input", function(e) {
			setTimeout(function() {
				phone && jv.current_input && jv.current_input.hasFocus && jv.current_input.chars != jv.hidden_input.value && (jv.current_input.mobile = 1, jv.current_input.chars = jv.hidden_input.value, jv.current_input.pos = jv.hidden_input.selectionStart, jv.current_input.update(), jv.current_input.mobile = 0)
			}, 5)
		}), e.addEventListener("keyup", function(e) {
			return jv.current_input && (e = e || window.event, jv.current_input.hasFocus) && (jv.current_input.mobile = 1, jv.current_input.onKey(e), jv.current_input.chars = jv.hidden_input.value, jv.current_input.pos = jv.hidden_input.selectionStart, jv.current_input.update(), jv.current_input.mobile = 0), !1
		}), jv.hidden_input = e, document.getElementById("all_container").appendChild(jv.hidden_input)
	}),
	heading_style = (jv.ChatBox = {
		create: function(e, t, i, o, n) {
			var a = jv.sprite(),
				e = (n = n || ui_container, a.interactive = !1, a.h = o, a.w = i, a.x = e, a.y = t, a.line_limit = 500, a.drag = 0, a.dragy = 0, a.padding = 4, a.offset = 0, a.line_space = 2, a.text_style = {
					font: "12px Verdana",
					align: "left",
					wordWrap: !0,
					wordWrapWidth: i - 2 * a.padding,
					breakWords: !0,
					fill: 16777215,
					stroke: 2236962,
					strokeThickness: 4,
					lineJoin: "round"
				}, phone && (a.text_style.font = "14px Verdana"), a.lines = [], a.gfx = new PIXI.Graphics, a.gfx.beginFill(1580828, 1), a.gfx.lineStyle(2, 3686992, 1), a.gfx.drawRect(0, 0, i, o), a.gfx.endFill(), a.gfx.alpha = 0, a.gfx.max_alpha = .55, a.m = new PIXI.Graphics, a.m.beginFill(1118481), a.m.drawRect(0, 0, i, o), a.m.endFill(), a.m.alpha = 0, a.mask = a.m, a.m.visible = !0, a.m.interactive = !1, a.addChild(a.m), a.resume = new PIXI.Graphics, [0, 0, 60, 0, 30, 30, 0, 0]);
			return a.resume.beginFill(4473907, .3), a.resume.lineStyle(5, 4473924, .6), a.resume.drawPolygon(e), a.resume.lineStyle(3, 8947848, .6), a.resume.drawPolygon(e), a.resume.lineStyle(1, 13421772, .6), a.resume.drawPolygon(e), a.resume.endFill(), a.resume.x = 110, a.resume.y = a.h - 35, a.resume.cacheAsBitmap = !0, a.resume.interactive = !0, a.resume.visible = 0, a.line_container = new PIXI.Container, a.line_container.interactive = !1, a.line_container.x = a.padding, a.append = function(e, t) {
				var i = e.indexOf("color:#"),
					i = ((t = -1 !== i && (i = e.substring(i + 7, i + 13), /^[a-z0-9]+$/i.test(i)) ? "#" + i : t) ? 3 == jv.pixiver ? this.text_style.fill = t : this.text_style.fill = ["#FFFFFF", "#DDDDDD", "#AAAAAA"] : 3 == jv.pixiver ? this.text_style.fill = 16777215 : this.text_style.fill = ["#FFFFFF", "#DDDDDD", "#AAAAAA"], e = (e = (e = (e = (e = (e = e.replace(/<br>/g, "\n")).replace(/(<([^>]+)>)/gi, "")).replace(/&quot;/g, '"')).replace(/&amp;/g, "&")).replace(/&lt;/g, "<")).replace(/&gt;/g, ">"), jv.text(e, this.text_style));
				4 == jv.pixiver && t && (i.tint = hex_to_int(t.substr(1))), this.lines.length ? i.y = this.lines[this.lines.length - 1].y + this.lines[this.lines.length - 1].height + this.line_space : i.y = 0, this.lines.push(i), this.line_container.addChild(i), this.resume.visible || (this.fade ? this.line_container.height > this.h && this.line_container.height + this.offset + 2 * this.padding > this.h && (this.line_container.y = this.h - this.offset - this.line_container.height - 2 * this.padding) : this.line_container.height + this.offset + 2 * this.padding > this.h && (this.line_container.y = this.h - this.offset - this.line_container.height - 2 * this.padding)), this.lines.length == this.line_limit && (e = this.lines.shift(), this.line_container.removeChild(e), this.offset += e.height + this.line_space, void 0 !== e.destroy) && e.destroy()
			}, a.on_up = function(e) {
				e = e.data.getLocalPosition(this.parent).y;
				!this.drag && e > this.y + this.h - 60 && (this.resume.visible = 0, this.line_container.y = this.h - this.line_container.height - this.padding - this.offset), this.drag = 0
			}, a.on_down = function(e) {
				this.line_container.height < this.h - this.padding || (e = e.data.getLocalPosition(this.parent).y) > this.y + this.h - 60 || (this.drag = 1, this.dragy = e, this.origy = this.line_container.y, this.m.visible = !0, this.resume.visible = 1, this.gfx.alpha = this.gfx.max_alpha, this.interactive = !0)
			}, a.do_move = function(e) {
				e = e.data.getLocalPosition(this.parent).y;
				this.cur_y = e, this.drag && (this.line_container.y = this.origy + e - this.dragy, this.line_container.y < this.h - this.offset - this.line_container.height - this.padding ? (this.line_container.y = this.h - this.offset - this.line_container.height - this.padding, e < this.dragy - 5 && (this.drag = 0, this.m.visible = !1, this.resume.visible = 0)) : this.line_container.y > -this.offset && (this.line_container.y = -this.offset))
			}, jv.chat_box ? (a.hitArea = new PIXI.Rectangle(0, 0, 0, 0), a.line_container.hitArea = new PIXI.Rectangle(0, 0, 0, 0), a.m.hitArea = new PIXI.Rectangle(0, 0, 0, 0)) : (a.on("mouseup", a.on_up), a.on("mouseupoutside", a.on_up), a.on("touchend", a.on_up), a.on("touchendoutside", a.on_up), a.on("mousedown", a.on_down), a.on("touchstart", a.on_down), a.on("mousemove", a.do_move), a.on("touchmove", a.do_move)), a.addChild(a.gfx), a.addChild(a.line_container), a.addChild(a.resume), n.addChild(a), a
		}
	}, jv.init_dialogs = function() {
		var e = {
				font: "12px Verdana",
				fill: 15658734,
				lineJoin: "round",
				stroke: 4473924,
				strokeThickness: 4,
				align: "center"
			},
			t = ((quit_dialog = jv.Dialog.create(170, 70)).heading = jv.text("Do you want to log out?", e), quit_dialog.add(quit_dialog.heading), quit_dialog.heading.center(), quit_dialog.heading.top(8), quit_dialog.yes = jv.Button.create(0, 0, 34, "Yes", quit_dialog), quit_dialog.add(quit_dialog.yes), quit_dialog.yes.left(32), quit_dialog.yes.bottom(12), quit_dialog.yes.on_click = function() {
				send({
					type: "chat",
					data: "/quit"
				}), quit_dialog.hide()
			}, quit_dialog.no = jv.Button.create(0, 0, 34, "No", quit_dialog), quit_dialog.add(quit_dialog.no), quit_dialog.no.right(32), quit_dialog.no.bottom(12), quit_dialog.no.on_click = function() {
				quit_dialog.hide()
			}, (rate_dialog = jv.Dialog.create(370, 160)).y -= 60, rate_dialog.heading = jv.text("You're doing great!", e), rate_dialog.add(rate_dialog.heading), rate_dialog.heading.center(), rate_dialog.heading.top(8), rate_dialog.heading2 = jv.text("Do you like the game?", {
				font: "11px Verdana",
				fill: 11783372,
				lineJoin: "round",
				stroke: jv.color_dark,
				strokeThickness: 2,
				align: "left",
				wordWrap: !0,
				wordWrapWidth: 370,
				breakWords: !0
			}), rate_dialog.add(rate_dialog.heading2), rate_dialog.heading2.center(), rate_dialog.heading2.top(34), rate_dialog.yes = jv.Button.create(0, 0, 150, " ", rate_dialog, 40), rate_dialog.yes.title.style.font = "12px Verdana", rate_dialog.yes.set_text("Love it!"), rate_dialog.add(rate_dialog.yes), rate_dialog.yes.center(), rate_dialog.yes.bottom(60), rate_dialog.yes.on_click = function() {
				send({
					type: "chat",
					data: "/rating_love"
				}), rate_dialog2.show()
			}, rate_dialog.no = jv.Button.create(0, 0, 130, "Not so much..", rate_dialog, 40), rate_dialog.add(rate_dialog.no), rate_dialog.no.center(), rate_dialog.no.bottom(12), rate_dialog.no.on_click = function() {
				send({
					type: "chat",
					data: "/rating_notmuch"
				}), rate_dialog2.heading.text = "We're so sorry...", rate_dialog2.heading.x = 185 - rate_dialog2.heading.width / 2 + 1, rate_dialog2.heading2.text = "Help us know how to improve by sending some feedback", rate_dialog2.heading2.x = 185 - rate_dialog2.heading2.width / 2 + 1, rate_dialog2.yes.set_text("Send feedback here"), rate_dialog2.yes.on_click = function() {
					send({
						type: "chat",
						data: "/rating_contact"
					}), window.open("https://www.mysteralegacy.com/contact/", "_system"), rate_dialog2.hide()
				}, rate_dialog2.show()
			}, (rate_dialog2 = jv.Dialog.create(370, 160)).y -= 60, rate_dialog2.heading = jv.text("Great!", e), rate_dialog2.add(rate_dialog2.heading), rate_dialog2.heading.center(), rate_dialog2.heading.top(8), rate_dialog2.heading2 = jv.text("It would make our day if you can rate us real quick 😊", {
				font: "11px Verdana",
				fill: 11783372,
				lineJoin: "round",
				stroke: jv.color_dark,
				strokeThickness: 2,
				align: "left",
				wordWrap: !0,
				wordWrapWidth: 370,
				breakWords: !0
			}), rate_dialog2.add(rate_dialog2.heading2), rate_dialog2.heading2.center(), rate_dialog2.heading2.top(34), rate_dialog2.yes = jv.Button.create(0, 0, 150, " ", rate_dialog2, 40), rate_dialog2.yes.title.style.font = "12px Verdana", rate_dialog2.yes.set_text("Give a good rating"), rate_dialog2.add(rate_dialog2.yes), rate_dialog2.yes.center(), rate_dialog2.yes.bottom(60), rate_dialog2.yes.on_click = function() {
				send({
					type: "chat",
					data: "/rating_good"
				}), window.open("market://details?id=com.mysteralegacy.mmorpg.sandbox", "_system"), rate_dialog2.hide()
			}, rate_dialog2.no = jv.Button.create(0, 0, 130, "Not now", rate_dialog2, 40), rate_dialog2.add(rate_dialog2.no), rate_dialog2.no.center(), rate_dialog2.no.bottom(12), rate_dialog2.no.on_click = function() {
				send({
					type: "chat",
					data: "/rating_notnow"
				}), rate_dialog2.hide()
			}, jv.reincarnate_dialog = jv.Dialog.create(320, 220), jv.reincarnate_dialog.heading = jv.text("Reincarnation", e), jv.reincarnate_dialog.add(jv.reincarnate_dialog.heading), jv.reincarnate_dialog.heading.center(), jv.reincarnate_dialog.heading.top(8), jv.reincarnate_dialog.info = jv.text("", {
				font: "10px Verdana",
				fill: 11783372,
				lineJoin: "round",
				stroke: jv.color_dark,
				strokeThickness: 2,
				align: "left",
				wordWrap: !0,
				wordWrapWidth: 280,
				breakWords: !0
			}), jv.reincarnate_dialog.add(jv.reincarnate_dialog.info), jv.reincarnate_dialog.info.left(20), jv.reincarnate_dialog.info.top(44), jv.reincarnate_dialog.gain = jv.text("Exp: Myst: Top skill: ", {
				font: "10px Verdana",
				fill: 13434879,
				lineJoin: "round",
				stroke: jv.color_dark,
				strokeThickness: 2,
				align: "left"
			}), jv.reincarnate_dialog.add(jv.reincarnate_dialog.gain), jv.reincarnate_dialog.gain.left(36), jv.reincarnate_dialog.gain.bottom(52), jv.reincarnate_dialog.yes = jv.Button.create(0, 0, 140, "Level 60 Required", jv.reincarnate_dialog), jv.reincarnate_dialog.add(jv.reincarnate_dialog.yes), jv.reincarnate_dialog.yes.center(), jv.reincarnate_dialog.yes.bottom(16), jv.reincarnate_dialog.yes.on_click = function() {
				send({
					type: "c",
					r: "re"
				}), jv.reincarnate_dialog.hide()
			}, jv.reincarnate_dialog.yes.enable(0), jv.reincarnate_dialog.okay = jv.Button.create(0, 0, 24, "X", jv.reincarnate_dialog), jv.reincarnate_dialog.add(jv.reincarnate_dialog.okay), jv.reincarnate_dialog.okay.right(8), jv.reincarnate_dialog.okay.top(8), jv.reincarnate_dialog.okay.on_click = function() {
				jv.reincarnate_dialog.hide()
			}, jv.reincarnate_dialog.do_update = function() {
				jv.reincarnate_dialog.info.text = jv.reinc.desc, jv.reinc.able ? (jv.reincarnate_dialog.yes.set_text("My Body Is Ready"), jv.reincarnate_dialog.yes.enable(1)) : (jv.reincarnate_dialog.yes.set_text("Level " + jv.reinc.req + " Required"), jv.reincarnate_dialog.yes.enable(0)), jv.reincarnate_dialog.gain.text = "Exp: +" + jv.reinc.exp + "%  Myst: +" + jv.reinc.myst + "%  Top skill: " + jv.reinc.skill.capitalize()
			}, jv.upgrade_dialog = jv.Dialog.create(320, 280), jv.upgrade_dialog.heading = jv.text("Myst Upgrades", e), jv.upgrade_dialog.add(jv.upgrade_dialog.heading), jv.upgrade_dialog.heading.center(), jv.upgrade_dialog.heading.top(8), 48);
		for (jv.upgrade_dialog.btn = [], jv.upgrade_dialog.page = 0, jv.upgrade_dialog.per = 8, s = 0; s < jv.upgrade_dialog.per; s++) jv.upgrade_dialog.btn[s] = jv.Button.create(0, 0, 140, "", ui_container, 26, 11), jv.upgrade_dialog.btn[s].on_click = function() {
			jv.upgrade_dialog.info.text = this.title.text + ": " + this.desc, jv.upgrade_dialog.cost.text = "Cost: " + this.cost, jv.upgrade_dialog.buy.enable(this.afford), jv.upgrade_dialog.buy.name = this.name, jv.upgrade_dialog.trigger = this
		}, jv.upgrade_dialog.add(jv.upgrade_dialog.btn[s]), s && s % 2 == 0 && (t += 32), s % 2 ? jv.upgrade_dialog.btn[s].right(16) : jv.upgrade_dialog.btn[s].left(16), jv.upgrade_dialog.btn[s].top(t), jv.upgrade_dialog.btn[s].icon = jv.sprite(items[0][Math.floor(0)]), jv.upgrade_dialog.btn[s].icon.scale.x = .5, jv.upgrade_dialog.btn[s].icon.scale.y = .5, jv.upgrade_dialog.btn[s].icon.x = 4, jv.upgrade_dialog.btn[s].icon.y = 6, jv.upgrade_dialog.btn[s].addChild(jv.upgrade_dialog.btn[s].icon);
		jv.upgrade_dialog.do_update = function() {
			for (var e = jv.upgrade_dialog.page * jv.upgrade_dialog.per, t = 0; t < jv.upgrade_dialog.btn.length; t++) jv.upgrades[e + t] ? (jv.upgrade_dialog.btn[t].visible = 1, jv.upgrade_dialog.btn[t].set_text(jv.upgrades[e + t].t + " " + romanize(jv.upgrades[e + t].l)), jv.upgrade_dialog.btn[t].icon.texture = items[Number(jv.upgrades[e + t].s) % 16][Math.floor(Number(jv.upgrades[e + t].s) / 16)], jv.upgrade_dialog.btn[t].cost = jv.upgrades[e + t].c, jv.upgrade_dialog.btn[t].desc = jv.upgrades[e + t].d, jv.upgrade_dialog.btn[t].name = jv.upgrades[e + t].n, jv.upgrade_dialog.btn[t].afford = jv.upgrades[e + t].a, jv.upgrade_dialog.btn[t] == jv.upgrade_dialog.trigger && jv.upgrade_dialog.btn[t].on_click()) : jv.upgrade_dialog.btn[t].visible = 0;
			jv.upgrades[(jv.upgrade_dialog.page + 1) * jv.upgrade_dialog.per] ? jv.upgrade_dialog.next.enable(1) : jv.upgrade_dialog.next.enable(0), 0 < jv.upgrade_dialog.page ? jv.upgrade_dialog.prev.enable(1) : jv.upgrade_dialog.prev.enable(0)
		}, jv.upgrade_dialog.next = jv.Button.create(30, 32, 40, "Next", jv.upgrade_dialog), jv.upgrade_dialog.add(jv.upgrade_dialog.next), jv.upgrade_dialog.next.right(16), jv.upgrade_dialog.next.bottom(76), jv.upgrade_dialog.next.on_click = function() {
			jv.upgrade_dialog.page++, jv.upgrade_dialog.do_update()
		}, jv.upgrade_dialog.prev = jv.Button.create(30, 32, 40, "Prev", jv.upgrade_dialog), jv.upgrade_dialog.add(jv.upgrade_dialog.prev), jv.upgrade_dialog.prev.left(16), jv.upgrade_dialog.prev.bottom(76), jv.upgrade_dialog.prev.on_click = function() {
			jv.upgrade_dialog.page--, jv.upgrade_dialog.do_update()
		}, jv.upgrade_dialog.buy = jv.Button.create(0, 0, 90, "Buy Upgrade", jv.upgrade_dialog), jv.upgrade_dialog.add(jv.upgrade_dialog.buy), jv.upgrade_dialog.buy.right(16), jv.upgrade_dialog.buy.bottom(16), jv.upgrade_dialog.buy.on_click = function() {
			send({
				type: "c",
				r: "ub",
				u: this.name
			})
		}, jv.upgrade_dialog.buy.enable(0), jv.upgrade_dialog.info = jv.text("Select an upgrade above to read more about it.", {
			font: "10px Verdana",
			fill: 11783372,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 2,
			align: "left",
			wordWrap: !0,
			wordWrapWidth: 200,
			breakWords: !0
		}), jv.upgrade_dialog.add(jv.upgrade_dialog.info), jv.upgrade_dialog.info.x = 16, jv.upgrade_dialog.info.y = jv.upgrade_dialog.buy.y - 22, jv.upgrade_dialog.cost = jv.text("", {
			font: "10px Verdana",
			fill: 16777147,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 2,
			align: "left"
		}), jv.upgrade_dialog.add(jv.upgrade_dialog.cost), jv.upgrade_dialog.cost.x = jv.upgrade_dialog.buy.x + 4, jv.upgrade_dialog.cost.y = jv.upgrade_dialog.buy.y - 22, jv.upgrade_dialog.okay = jv.Button.create(0, 0, 24, "X", jv.upgrade_dialog), jv.upgrade_dialog.add(jv.upgrade_dialog.okay), jv.upgrade_dialog.okay.right(8), jv.upgrade_dialog.okay.top(8), jv.upgrade_dialog.okay.on_click = function() {
			jv.upgrade_dialog.hide()
		};
		t = 10;
		(option_dialog = jv.Dialog.create(200, 310)).heading = jv.text("Menu", e), option_dialog.add(option_dialog.heading), option_dialog.heading.center(), option_dialog.heading.top(8), option_dialog.sound_label = jv.text("Sound Volume", {
			font: "10px Verdana",
			fill: 16777215,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 2,
			align: "left"
		}), option_dialog.add(option_dialog.sound_label), option_dialog.sound_label.center(), option_dialog.sound_label.top(t += 32), option_dialog.sound_slider = jv.Slider.create(100), option_dialog.add(option_dialog.sound_slider), option_dialog.sound_slider.center(), option_dialog.sound_slider.top(t += 16), option_dialog.sound_slider.onChange = function() {
			jv.sound_volume = this.percent / 100
		}, option_dialog.music_label = jv.text("Music Volume", {
			font: "10px Verdana",
			fill: 16777215,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 2,
			align: "left"
		}), option_dialog.add(option_dialog.music_label), option_dialog.music_label.center(), option_dialog.music_label.top(t += 32), option_dialog.music_slider = jv.Slider.create(100), option_dialog.add(option_dialog.music_slider), option_dialog.music_slider.center(), option_dialog.music_slider.top(t += 16), option_dialog.music_slider.onChange = function() {
			for (var e in music) music[e].volume(this.percent / 100), 0 == this.percent ? music[e].stop() : jv.current_song !== music[e] || music[e].playing() || music[e].play()
		}, option_dialog.music_slider.set_percent(40), option_dialog.help = jv.Button.create(0, 0, 100, "Help"), option_dialog.help.on_click = function() {
			send({
				type: "c",
				r: "hl"
			}), option_dialog.hide()
		}, option_dialog.add(option_dialog.help), option_dialog.help.center(), option_dialog.help.top(t += 32), option_dialog.credits = jv.Button.create(0, 0, 100, "Credits"), option_dialog.credits.on_click = function() {
			send({
				type: "c",
				r: "cr"
			}), option_dialog.hide()
		}, option_dialog.add(option_dialog.credits), option_dialog.credits.center(), option_dialog.credits.top(t += 32), option_dialog.fullscreen = jv.Button.create(0, 0, 100, "Fullscreen: Off"), option_dialog.fullscreen.on_click = function() {
			var e;
			screenfull.isEnabled && (e = document.getElementById("all_container"), screenfull.toggle(e), screenfull.isFullscreen, screenfull.isFullscreen ? this.set_text("Fullscreen: On") : this.set_text("Fullscreen: Off"))
		}, phone ? (option_dialog.fullscreen.set_text("Fullscreen: On"), option_dialog.fullscreen.enable(0)) : screenfull.isEnabled && document.addEventListener(screenfull.raw.fullscreenchange, function() {
			screenfull.isFullscreen ? option_dialog.fullscreen.set_text("Fullscreen: On") : option_dialog.fullscreen.set_text("Fullscreen: Off")
		}), option_dialog.add(option_dialog.fullscreen), option_dialog.fullscreen.center(), option_dialog.fullscreen.top(t += 32), option_dialog.interface = jv.Button.create(0, 0, 100, "Interface"), option_dialog.interface.on_click = function() {
			jv.ui_options_dialog.show()
		}, option_dialog.add(option_dialog.interface), option_dialog.interface.center(), option_dialog.interface.top(t += 32), option_dialog.log = jv.Button.create(0, 0, 100, "Log Out", option_dialog), option_dialog.add(option_dialog.log), option_dialog.log.center(), option_dialog.log.top(t += 32), option_dialog.log.on_click = function() {
			quit_dialog.show()
		}, option_dialog.okay = jv.Button.create(0, 0, 24, "X", option_dialog), option_dialog.add(option_dialog.okay), option_dialog.okay.right(8), option_dialog.okay.top(8), option_dialog.okay.on_click = function() {
			Cookies.set("ml_sound", option_dialog.sound_slider.percent, {
				expires: 730
			}), Cookies.set("ml_music", option_dialog.music_slider.percent, {
				expires: 730
			}), option_dialog.hide()
		}, jv.build_dialog = jv.Dialog.create(160, 320), jv.build_dialog.right(160), jv.build_dialog.top(0), jv.build_dialog.heading = jv.text("Build & Craft", {
			font: "12px Verdana",
			fill: 15658734,
			lineJoin: "round",
			stroke: 4473924,
			strokeThickness: 4,
			align: "left"
		}), jv.build_dialog.add(jv.build_dialog.heading), jv.build_dialog.heading.left(12), jv.build_dialog.heading.top(8), jv.build_dialog.add(build_pane), build_pane.left(0), build_pane.top(0);
		for (var i = c = 0; i < 5; i++)
			for (var o = 0; o < 3; o++) bld[c] = jv.InventorySlot.create(16 + 47 * o, 40 + 38 * i, c, build_pane), bld[c].build = 1, c += 1;
		build_pane.next = jv.Button.create(0, 232, 38, "Next", build_pane), jv.build_dialog.add(build_pane.next), build_pane.next.right(16), build_pane.next.on_click = function() {
			build_page++, update_build()
		}, build_pane.prev = jv.Button.create(0, 232, 38, "Prev", build_pane), jv.build_dialog.add(build_pane.prev), build_pane.prev.left(14), build_pane.prev.on_click = function() {
			build_page--, update_build()
		}, jv.build_dialog.okay = jv.Button.create(30, 32, 24, "X", jv.build_dialog), jv.build_dialog.add(jv.build_dialog.okay), jv.build_dialog.okay.right(8), jv.build_dialog.okay.top(8), jv.build_dialog.okay.on_click = function() {
			jv.build_dialog.visible = !1
		}, jv.build_dialog.info = jv.scene(), jv.build_dialog.add(jv.build_dialog.info), jv.build_dialog.info.left(0), jv.build_dialog.info.bottom(60), jv.build_dialog.info.heading = jv.text("", {
			font: "10px Verdana",
			fill: jv.color_bright,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 4,
			align: "left"
		}), jv.build_dialog.info.heading.x = 60, jv.build_dialog.info.heading.y = 0, jv.build_dialog.info.addChild(jv.build_dialog.info.heading), jv.build_dialog.info.sprite = jv.sprite(), jv.build_dialog.info.sprite.x = 16, jv.build_dialog.info.sprite.y = 4, jv.build_dialog.info.addChild(jv.build_dialog.info.sprite), jv.build_dialog.info.use = jv.Button.create(60, 21, 36, "Build", jv.build_dialog.info, 26), jv.build_dialog.info.use.on_click = function() {
			this.parent.obj && send({
				type: "bld",
				tpl: this.parent.template
			})
		}, jv.build_dialog.info.detail = jv.Button.create(103, 21, 36, "Info", jv.build_dialog.info, 26), jv.build_dialog.info.detail.on_click = function() {
			this.parent.obj && send({
				type: "nfo",
				tpl: this.parent.template
			})
		}, jv.build_dialog.info.set_info = function(e) {
			-1 != me && ((this.obj = e) ? (this.visible = !0, 0 == e.quantity ? this.use.enable(0) : this.use.enable(1), e.build_type ? this.use.set_text(e.build_type.capitalize()) : this.obj.can_pickup ? this.use.set_text("Craft") : this.use.set_text("Build"), this.slot = e.slot, void 0 !== e.template && (this.template = e.template), 1 < e.quantity ? this.heading.text = e.title.text + "  ( " + e.quantity + " )" : this.heading.text = e.title.text, this.sprite.texture = e.texture, this.use.visible = !0, this.detail.visible = !0) : this.visible = !1)
		}, jv.build_dialog.info.use.visible = !1, jv.build_dialog.info.detail.visible = !1, jv.stat_dialog = jv.Dialog.create(318, 270), jv.stat_dialog.heading = jv.text("Character Stats", {
			font: "12px Verdana",
			fill: 15658734,
			lineJoin: "round",
			stroke: 4473924,
			strokeThickness: 4,
			align: "left"
		}), jv.stat_dialog.add(jv.stat_dialog.heading), jv.stat_dialog.heading.center(), jv.stat_dialog.heading.top(8);
		var l = {
				font: "10px Verdana",
				fill: 15658734,
				lineJoin: "round",
				stroke: 4473924,
				strokeThickness: 1,
				align: "center"
			},
			n = {
				font: "10px Verdana",
				fill: 61166,
				lineJoin: "round",
				align: "left",
				wordWrap: !0,
				wordWrapWidth: 184,
				breakWords: !0,
				stroke: 4473924,
				strokeThickness: 1
			},
			a = 24,
			r = ["level", "hp", "attack", "defense", "speed", "crit_chance", "exp_bonus", "myst_bonus", "exp_to_level", "myst_refund", "daily_bonus", "weight", "time_alive", "steps", "angel_dust", "dust_earned", "traits"];
		for (s in r) jv.stat_dialog[r[s] + "_label"] = jv.text(r[s].capitalize().replaceAll("_", " ") + ": ", l), jv.stat_dialog.add(jv.stat_dialog[r[s] + "_label"]), s % 2 != 0 && "traits" !== r[s] ? (jv.stat_dialog[r[s] + "_label"].right(80), jv.stat_dialog[r[s] + "_label"].top(a)) : (jv.stat_dialog[r[s] + "_label"].right(230), jv.stat_dialog[r[s] + "_label"].top(a += 16)), jv.stat_dialog[r[s]] = jv.text("", n), jv.stat_dialog.add(jv.stat_dialog[r[s]]), jv.stat_dialog[r[s]].x = jv.stat_dialog[r[s] + "_label"].x + jv.stat_dialog[r[s] + "_label"].width + 2, jv.stat_dialog[r[s]].y = jv.stat_dialog[r[s] + "_label"].y;
		jv.stat_dialog.okay = jv.Button.create(30, 32, 24, "X", jv.stat_dialog), jv.stat_dialog.add(jv.stat_dialog.okay), jv.stat_dialog.okay.right(8), jv.stat_dialog.okay.top(8), jv.stat_dialog.okay.on_click = function() {
			jv.stat_dialog.visible = !1
		}, jv.stat_dialog.skill = jv.Button.create(0, 0, 96, "Skills", jv.stat_dialog), jv.stat_dialog.add(jv.stat_dialog.skill), jv.stat_dialog.skill.left(10), jv.stat_dialog.skill.bottom(38), jv.stat_dialog.skill.on_click = function() {
			send({
				type: "c",
				r: "sk"
			}), jv.skill_dialog.show()
		}, jv.stat_dialog.upgrades = jv.Button.create(0, 0, 96, "Upgrades", jv.stat_dialog), jv.stat_dialog.add(jv.stat_dialog.upgrades), jv.stat_dialog.upgrades.left(111), jv.stat_dialog.upgrades.bottom(38), jv.stat_dialog.upgrades.on_click = function() {
			send({
				type: "c",
				r: "up"
			}), jv.upgrade_dialog.show()
		}, jv.stat_dialog.reincarnate = jv.Button.create(0, 0, 96, "Reincarnate", jv.stat_dialog), jv.stat_dialog.add(jv.stat_dialog.reincarnate), jv.stat_dialog.reincarnate.right(10), jv.stat_dialog.reincarnate.bottom(38), jv.stat_dialog.reincarnate.on_click = function() {
			send({
				type: "c",
				r: "rn"
			}), jv.reincarnate_dialog.show()
		}, jv.stat_dialog.reincarnate.enable(1), jv.stat_dialog.pvp = jv.Button.create(0, 0, 96, "Commands", jv.stat_dialog), jv.stat_dialog.add(jv.stat_dialog.pvp), jv.stat_dialog.pvp.left(10), jv.stat_dialog.pvp.bottom(8), jv.stat_dialog.pvp.on_click = function() {
			send({
				type: "c",
				r: "cm"
			}), jv.stat_dialog.hide()
		}, jv.stat_dialog.quest = jv.Button.create(0, 0, 96, "Quests", jv.stat_dialog), jv.stat_dialog.add(jv.stat_dialog.quest), jv.stat_dialog.quest.left(111), jv.stat_dialog.quest.bottom(8), jv.stat_dialog.quest.on_click = function() {
			send({
				type: "c",
				r: "qs"
			})
		}, jv.stat_dialog.appearance = jv.Button.create(0, 0, 96, "Appearance", jv.stat_dialog), jv.stat_dialog.add(jv.stat_dialog.appearance), jv.stat_dialog.appearance.right(10), jv.stat_dialog.appearance.bottom(8), jv.stat_dialog.appearance.enable(1), jv.stat_dialog.appearance.on_click = function() {
			jv.appearance_dialog.show()
		}, jv.skill_dialog = jv.Dialog.create(320, 250), jv.skill_dialog.heading = jv.text("Character Skills", {
			font: "12px Verdana",
			fill: 15658734,
			lineJoin: "round",
			stroke: 4473924,
			strokeThickness: 4,
			align: "left"
		}), jv.skill_dialog.add(jv.skill_dialog.heading), jv.skill_dialog.heading.center(), jv.skill_dialog.heading.top(8), jv.skill_dialog.slot = [], jv.skill_dialog.page = 0, jv.skill_dialog.do_update = function() {
			var e = jv.skill_dialog.page;
			if (jv.skills) {
				for (var t, i, o = 0, n = 0; n < jv.skill_dialog.slot.length; n++) jv.skill_dialog.slot[n] && (jv.skill_dialog.slot[n].label.visible = 0, jv.skill_dialog.slot[n].stars.visible = 0);
				for (t in jv.skill_order) {
					if (n = jv.skill_order[t], o < 10 * e);
					else {
						if (10 * (e + 1) <= o) break;
						jv.skill_dialog.slot[o] || (i = 40 + t % 10 * 16, jv.skill_dialog.slot[o] = {}, jv.skill_dialog.slot[o].stars = new PIXI.Container, jv.skill_dialog.add(jv.skill_dialog.slot[o].stars), jv.skill_dialog.slot[o].stars.row = [], jv.skill_dialog.slot[o].stars.right(172), jv.skill_dialog.slot[o].stars.top(i), jv.skill_dialog.slot[o].label = jv.text("", l), jv.skill_dialog.add(jv.skill_dialog.slot[o].label), jv.skill_dialog.slot[o].label.right(298), jv.skill_dialog.slot[o].label.top(i));
						for (var a = Math.floor(jv.skills[n][3] / 10), r = jv.skills[n][0], s = 0; s < jv.skill_dialog.slot[o].stars.row.length; s++) jv.skill_dialog.slot[o].stars.row[s] && (jv.skill_dialog.slot[o].stars.row[s].visible = 0);
						for (s = 0; s < a || s < jv.skill_tier; s++) jv.skill_dialog.slot[o].stars.row[s] || (jv.skill_dialog.slot[o].stars.row[s] = jv.sprite(jv.star.texture), jv.skill_dialog.slot[o].stars.addChild(jv.skill_dialog.slot[o].stars.row[s]), jv.skill_dialog.slot[o].stars.row[s].x = 16 * s, jv.skill_dialog.slot[o].stars.row[s].scale.x = 1, jv.skill_dialog.slot[o].stars.row[s].scale.y = 1), a <= s ? (jv.skill_dialog.slot[o].stars.row[s].alpha = .8, jv.skill_dialog.slot[o].stars.row[s].tint = 3355494) : (jv.skill_dialog.slot[o].stars.row[s].alpha = 1, r ? (jv.skill_dialog.slot[o].stars.row[s].tint = 43775, r--) : (jv.skill_dialog.slot[o].stars.row[s].tint = 16776994, s >= jv.skill_tier && (jv.skill_dialog.slot[o].stars.row[s].alpha = .4))), jv.skill_dialog.slot[o].stars.row[s].visible = 1;
						jv.skill_dialog.slot[o].label.visible = 1, jv.skill_dialog.slot[o].stars.visible = 1, jv.skill_dialog.slot[o].label.text = n.capitalize() + ": " + (jv.skills[n][0] >= jv.skill_tier ? 10 * jv.skills[n][0] : jv.skills[n][2]), jv.skills[n][2] != jv.skills[n][1] && (jv.skill_dialog.slot[o].label.text = jv.skill_dialog.slot[o].label.text + " (+" + (jv.skills[n][2] - jv.skills[n][1]) + ")"), jv.skill_dialog.slot[o].label.right(298)
					}
					o++
				}
				o >= jv.skill_order.length ? jv.skill_dialog.next.visible = 0 : jv.skill_dialog.next.visible = 1, jv.skill_dialog.prev.visible = 0 < e ? 1 : 0
			}
		}, jv.skill_dialog.next = jv.Button.create(30, 32, 40, "Next", jv.skill_dialog), jv.skill_dialog.add(jv.skill_dialog.next), jv.skill_dialog.next.right(36), jv.skill_dialog.next.bottom(16), jv.skill_dialog.next.on_click = function() {
			jv.skill_dialog.page++, jv.skill_dialog.do_update()
		}, jv.skill_dialog.prev = jv.Button.create(30, 32, 40, "Prev", jv.skill_dialog), jv.skill_dialog.add(jv.skill_dialog.prev), jv.skill_dialog.prev.left(36), jv.skill_dialog.prev.bottom(16), jv.skill_dialog.prev.on_click = function() {
			jv.skill_dialog.page--, jv.skill_dialog.do_update()
		}, jv.skill_dialog.okay = jv.Button.create(30, 32, 24, "X", jv.skill_dialog), jv.skill_dialog.add(jv.skill_dialog.okay), jv.skill_dialog.okay.right(8), jv.skill_dialog.okay.top(8), jv.skill_dialog.okay.on_click = function() {
			jv.skill_dialog.page = 0, jv.skill_dialog.visible = !1
		}, jv.spawn_dialog = jv.Dialog.create(260, 180, jv.stage), jv.spawn_dialog.left(240), jv.spawn_dialog.top(118), jv.spawn_dialog.modal = 1, jv.spawn_dialog.heading = jv.text("Just a Scratch..", e), jv.spawn_dialog.add(jv.spawn_dialog.heading), jv.spawn_dialog.heading.center(), jv.spawn_dialog.heading.top(8);
		var s, d, _, l = {
				font: "10px Verdana",
				fill: 15658734,
				lineJoin: "round",
				stroke: 4473924,
				strokeThickness: 1,
				align: "center"
			},
			n = {
				font: "11px Verdana",
				fill: 16776960,
				lineJoin: "round",
				align: "left",
				wordWrap: !0,
				wordWrapWidth: 180,
				breakWords: !0,
				stroke: 4473924,
				strokeThickness: 1
			},
			p = {
				font: "11px Verdana",
				fill: 11783372,
				lineJoin: "round",
				align: "center",
				wordWrap: !0,
				wordWrapWidth: 180,
				breakWords: !0,
				stroke: jv.color_dark,
				strokeThickness: 2
			},
			a = 16;
		jv.spawn_dialog.death = jv.text("Hero has fallen! They were level 10 and skilled at dagger. Killed by a wolf.", p), jv.spawn_dialog.add(jv.spawn_dialog.death), jv.spawn_dialog.death.center(), jv.spawn_dialog.death.top(a += 16), jv.spawn_dialog.dust_label = jv.text("Angel Dust Gained:", l), jv.spawn_dialog.add(jv.spawn_dialog.dust_label), jv.spawn_dialog.dust_label.right(90), jv.spawn_dialog.dust_label.top(a += 78), jv.spawn_dialog.dust = jv.text("120", n), jv.spawn_dialog.add(jv.spawn_dialog.dust), jv.spawn_dialog.dust.x = jv.spawn_dialog.dust_label.x + jv.spawn_dialog.dust_label.width + 2, jv.spawn_dialog.dust.y = jv.spawn_dialog.dust_label.y, jv.spawn_dialog.yes = jv.Button.create(0, 0, 80, "Respawn", jv.spawn_dialog), jv.spawn_dialog.add(jv.spawn_dialog.yes), jv.spawn_dialog.yes.center(), jv.spawn_dialog.yes.bottom(16), jv.spawn_dialog.yes.on_click = function() {
			send({
				type: "login",
				data: "/me"
			}), jv.spawn_dialog.hide()
		}, jv.quest_dialog = jv.Dialog.create(320, 260), jv.quest_dialog.heading = jv.text("Current Quests", e), jv.quest_dialog.add(jv.quest_dialog.heading), jv.quest_dialog.heading.center(), jv.quest_dialog.heading.top(8), jv.quest_dialog.task = [], jv.quest_dialog.task[0] = {}, jv.quest_dialog.task[1] = {}, jv.quest_dialog.task[0].name = jv.text("Safe Keeping", {
			font: "12px Verdana",
			fill: 15658683,
			lineJoin: "round",
			stroke: 4473924,
			strokeThickness: 1,
			align: "center"
		}), jv.quest_dialog.add(jv.quest_dialog.task[0].name), jv.quest_dialog.task[0].name.left(32), jv.quest_dialog.task[0].name.top(36), jv.quest_dialog.task[0].desc = jv.text("Make a floor tile with wood, clay, or stone. Build one in your inventory then use it to create a floor under you. Floor tiles keep your items safe so they don't decay.", {
			font: "11px Verdana",
			fill: 11783372,
			lineJoin: "round",
			align: "left",
			wordWrap: !0,
			wordWrapWidth: 260,
			breakWords: !0,
			stroke: jv.color_dark,
			strokeThickness: 2
		}), jv.quest_dialog.add(jv.quest_dialog.task[0].desc), jv.quest_dialog.task[0].desc.left(32), jv.quest_dialog.task[0].desc.top(56), jv.quest_dialog.task[1].name = jv.text("Safe Keeping", {
			font: "12px Verdana",
			fill: 15658683,
			lineJoin: "round",
			stroke: 4473924,
			strokeThickness: 1,
			align: "center"
		}), jv.quest_dialog.add(jv.quest_dialog.task[1].name), jv.quest_dialog.task[1].name.left(32), jv.quest_dialog.task[1].name.top(142), jv.quest_dialog.task[1].desc = jv.text("Make a floor tile with wood, clay, or stone. Build one in your inventory then use it to create a floor under you. Floor tiles keep your items safe so they don't decay.", {
			font: "11px Verdana",
			fill: 11783372,
			lineJoin: "round",
			align: "left",
			wordWrap: !0,
			wordWrapWidth: 260,
			breakWords: !0,
			stroke: jv.color_dark,
			strokeThickness: 2
		}), jv.quest_dialog.add(jv.quest_dialog.task[1].desc), jv.quest_dialog.task[1].desc.left(32), jv.quest_dialog.task[1].desc.top(162), jv.quest_dialog.okay = jv.Button.create(30, 32, 24, "X", jv.quest_dialog), jv.quest_dialog.add(jv.quest_dialog.okay), jv.quest_dialog.okay.right(8), jv.quest_dialog.okay.top(8), jv.quest_dialog.okay.on_click = function() {
			jv.quest_dialog.page = 0, jv.quest_dialog.visible = !1
		}, jv.quest_dialog.do_update = function() {
			jv.quest_dialog.task[0].name.text = "", jv.quest_dialog.task[0].desc.text = "", jv.quest_dialog.task[1].name.text = "", jv.quest_dialog.task[1].desc.text = "";
			var e, t, i = 0;
			for (e in jv.quest) t = jv.quest[e].name, jv.quest[e].prog && (t += " [" + jv.quest[e].prog + "]"), jv.quest_dialog.task[i].name.text = t, jv.quest_dialog.task[i].desc.text = jv.quest[e].desc, i++
		}, jv.mapping_dialog = jv.Dialog.create(380, 340), jv.mapping_dialog.page = 0, jv.preview_tile = jv.sprite(tiles[0][Math.floor(0)]), jv.preview_tile.tile = 0, jv.mapping_dialog.add(jv.preview_tile), jv.preview_tile.left(300), jv.preview_tile.top(16), jv.mapping_dialog.tile_label = jv.text("", {
			font: "12px Verdana",
			fill: 15658734,
			lineJoin: "round",
			stroke: 4473924,
			strokeThickness: 4,
			align: "left"
		}), jv.mapping_dialog.add(jv.mapping_dialog.tile_label), jv.mapping_dialog.tile_label.left(300), jv.mapping_dialog.tile_label.top(48), jv.map_tile = [], jv.itm_tile = [], jv.mapping_dialog.update = function() {
			for (var e, t = 0, i = 0; i < 8; i++)
				for (e = 0; e < 16; e++) jv.map_tile[t] ? (jv.map_tile[t].texture = tiles[(t + 128 * jv.mapping_dialog.page) % 16][Math.floor((t + 128 * jv.mapping_dialog.page) / 16)], jv.map_tile[t].tile = t + 128 * jv.mapping_dialog.page) : (jv.map_tile[t] = jv.sprite(tiles[(t + 128 * jv.mapping_dialog.page) % 16][Math.floor((t + 128 * jv.mapping_dialog.page) / 16)]), jv.map_tile[t].tile = t + 128 * jv.mapping_dialog.page, jv.map_tile[t].interactive = !0, jv.map_tile[t].scale.x = .5, jv.map_tile[t].scale.y = .5, jv.map_tile[t].mouseover = function() {
					jv.preview_tile.texture = tiles[this.tile % 16][Math.floor(this.tile / 16)]
				}, jv.map_tile[t].mouseout = function() {
					jv.preview_tile.texture = tiles[jv.preview_tile.tile % 16][Math.floor(jv.preview_tile.tile / 16)]
				}, jv.map_tile[t].do_click = function() {
					jv.preview_tile.tile = this.tile, jv.mapping_dialog.tile_label.text = "" + this.tile, jv.preview_tile.texture = tiles[jv.preview_tile.tile % 16][Math.floor(jv.preview_tile.tile / 16)], playSound("click"), send({
						type: "c",
						r: "mp",
						s: this.tile
					})
				}, jv.map_tile[t].on("mouseup", jv.map_tile[t].do_click), jv.map_tile[t].on("touchend", jv.map_tile[t].do_click), jv.mapping_dialog.add(jv.map_tile[t]), jv.map_tile[t].top(17 * i + 16), jv.map_tile[t].left(17 * e + 16)), jv.itm_tile[t] ? (jv.itm_tile[t].texture = items[(t + 128 * jv.mapping_dialog.page) % 16][Math.floor((t + 128 * jv.mapping_dialog.page) / 16)], jv.itm_tile[t].tile = t + 128 * jv.mapping_dialog.page) : (jv.itm_tile[t] = jv.sprite(items[(t + 128 * jv.mapping_dialog.page) % 16][Math.floor((t + 128 * jv.mapping_dialog.page) / 16)]), jv.itm_tile[t].tile = t + 128 * jv.mapping_dialog.page, jv.itm_tile[t].interactive = !0, jv.itm_tile[t].scale.x = .5, jv.itm_tile[t].scale.y = .5, jv.itm_tile[t].mouseover = function() {
					jv.preview_tile.texture = items[this.tile % 16][Math.floor(this.tile / 16)]
				}, jv.itm_tile[t].mouseout = function() {
					jv.preview_tile.texture = items[jv.preview_tile.tile % 16][Math.floor(jv.preview_tile.tile / 16)]
				}, jv.itm_tile[t].do_click = function() {
					jv.preview_tile.tile = this.tile, jv.mapping_dialog.tile_label.text = "" + this.tile, jv.preview_tile.texture = items[jv.preview_tile.tile % 16][Math.floor(jv.preview_tile.tile / 16)]
				}, jv.itm_tile[t].on("mouseup", jv.itm_tile[t].do_click), jv.itm_tile[t].on("touchend", jv.itm_tile[t].do_click), jv.mapping_dialog.add(jv.itm_tile[t]), jv.itm_tile[t].top(17 * i + 160), jv.itm_tile[t].left(17 * e + 16)), t++;
			jv.mapping_dialog.page <= 0 ? jv.mapping_dialog.prev.enable(0) : jv.mapping_dialog.prev.enable(1), 7 <= jv.mapping_dialog.page ? jv.mapping_dialog.next.enable(0) : jv.mapping_dialog.next.enable(1)
		}, jv.mapping_dialog.next = jv.Button.create(30, 32, 32, ">", jv.mapping_dialog), jv.mapping_dialog.add(jv.mapping_dialog.next), jv.mapping_dialog.next.left(266), jv.mapping_dialog.next.bottom(16), jv.mapping_dialog.next.on_click = function() {
			jv.mapping_dialog.page++, jv.mapping_dialog.update()
		}, jv.mapping_dialog.prev = jv.Button.create(30, 32, 32, "<", jv.mapping_dialog), jv.mapping_dialog.add(jv.mapping_dialog.prev), jv.mapping_dialog.prev.left(16), jv.mapping_dialog.prev.bottom(16), jv.mapping_dialog.prev.on_click = function() {
			jv.mapping_dialog.page--, jv.mapping_dialog.update()
		}, jv.mapping_dialog.okay = jv.Button.create(30, 32, 24, "X", jv.mapping_dialog), jv.mapping_dialog.add(jv.mapping_dialog.okay), jv.mapping_dialog.okay.right(8), jv.mapping_dialog.okay.top(8), jv.mapping_dialog.okay.on_click = function() {
			jv.mapping_dialog.visible = !1
		}, jv.mapping_dialog.update(), jv.stage.addChild(splash), jv.login_dialog = jv.Dialog.create(260, 160, jv.stage), jv.login_dialog.left(Math.floor(jv.game_width / 2) - 128), jv.login_dialog.top(200), jv.login_dialog.modal = 1, jv.login_dialog.heading = jv.text("Character Login", e), jv.login_dialog.add(jv.login_dialog.heading), jv.login_dialog.heading.center(), jv.login_dialog.heading.top(8), jv.login_dialog.notice = jv.text("", {
			font: "9px Verdana",
			fill: 13413034,
			lineJoin: "round",
			stroke: 4473924,
			strokeThickness: 1,
			align: "center"
		}), jv.login_dialog.add(jv.login_dialog.notice), jv.login_dialog.notice.center(), jv.login_dialog.notice.top(26), jv.login_dialog.username = jv.TextInput.create(0, 0, 180, 24, jv.login_dialog), jv.login_dialog.username.placeholder.text = "Username", jv.login_dialog.add(jv.login_dialog.username), jv.login_dialog.username.center(), jv.login_dialog.username.bottom(90), jv.login_dialog.username.on_change = function() {
			"" === this.chars && (jv.login_dialog.guest.visible = 1)
		}, jv.login_dialog.password = jv.TextInput.create(0, 0, 180, 24, jv.login_dialog), jv.login_dialog.password.placeholder.text = "Password", jv.login_dialog.password.password = !0, jv.login_dialog.add(jv.login_dialog.password), jv.login_dialog.password.center(), jv.login_dialog.password.bottom(58), jv.login_dialog.username.tab_next = jv.login_dialog.password, jv.login_dialog.password.tab_next = jv.login_dialog.username, jv.login_dialog.username.onSubmit = function() {
			jv.login_dialog.okay.on_click()
		}, jv.login_dialog.password.onSubmit = jv.login_dialog.username.onSubmit, jv.login_dialog.okay = jv.Button.create(30, 32, 60, "Login", jv.login_dialog), jv.login_dialog.add(jv.login_dialog.okay), jv.login_dialog.okay.center(), jv.login_dialog.okay.bottom(20), jv.login_dialog.okay.on_click = function() {
			"" != jv.login_dialog.username.chars && "" != jv.login_dialog.password.chars && (jv.login_dialog.okay.enable(0), jv.login_dialog.create.enable(0), jv.login_dialog.worlds.enable(0), jv.login_dialog.guest.enable(0), jv.login_dialog.notice.text = "", send({
				type: "login",
				user: jv.base64_encode(jv.login_dialog.username.chars.trim()),
				pass: jv.base64_encode(jv.login_dialog.password.chars.trim())
			}))
		}, jv.login_dialog.guest = jv.Button.create(30, 32, 100, "Play as Guest", jv.login_dialog, 42), jv.login_dialog.add(jv.login_dialog.guest), jv.login_dialog.guest.right(-120), jv.login_dialog.guest.middle(), jv.login_dialog.guest.on_click = function() {
			jv.login_dialog.guest.enable(0), jv.login_dialog.create.enable(0), jv.login_dialog.worlds.enable(0), jv.login_dialog.guest.enable(0), jv.login_dialog.notice.text = "", send({
				type: "guest"
			})
		}, jv.login_dialog.guest.visible = 0, jv.login_dialog.create = jv.Button.create(30, 32, 80, "Create New", jv.login_dialog), jv.login_dialog.add(jv.login_dialog.create), jv.login_dialog.create.left(32), jv.login_dialog.create.bottom(-40), jv.login_dialog.create.on_click = function() {
			jv.login_dialog.hide(), jv.create_dialog.show()
		}, jv.login_dialog.worlds = jv.Button.create(30, 32, 80, "Worlds", jv.login_dialog), jv.login_dialog.add(jv.login_dialog.worlds), jv.login_dialog.worlds.right(32), jv.login_dialog.worlds.bottom(-40), jv.login_dialog.worlds.on_click = function() {
			jv.login_dialog.hide(), jv.create_dialog.hide(), connection.close(), show_reconnect(" ")
		}, jv.login_dialog.lostpass = jv.Button.create(30, 32, 80, "Lost password?", jv.login_dialog), jv.login_dialog.add(jv.login_dialog.lostpass), jv.login_dialog.lostpass.gfx.alpha = 0, jv.login_dialog.lostpass.right(-120), jv.login_dialog.lostpass.bottom(-50), jv.login_dialog.lostpass.on_click = function() {
			window.open("https://www.mysteralegacy.com/lostpassword/", "_system")
		}, jv.login_dialog.okay.enable(0), jv.login_dialog.create.enable(0), jv.reconnect_dialog = jv.Dialog.create(500, 190, jv.stage), jv.reconnect_dialog.left(Math.floor(jv.game_width / 2) - 250), jv.reconnect_dialog.top(192), jv.reconnect_dialog.modal = 1, jv.reconnect_dialog.heading = jv.text("- Choose a World -", e), jv.reconnect_dialog.add(jv.reconnect_dialog.heading), jv.reconnect_dialog.heading.center(), jv.reconnect_dialog.heading.top(8), jv.reconnect_dialog.notice = jv.text("", {
			font: "9px Verdana",
			fill: 13413034,
			lineJoin: "round",
			stroke: 4473924,
			strokeThickness: 1,
			align: "center"
		}), jv.reconnect_dialog.add(jv.reconnect_dialog.notice), jv.reconnect_dialog.notice.center(), jv.reconnect_dialog.notice.top(82);
		if (jv.reconnect_dialog.connect1 = jv.Button.create(40, 40, 156, "USTexas", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect1.ip = "ust.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect1), jv.reconnect_dialog.connect1.center(), jv.reconnect_dialog.connect1.top(35), jv.reconnect_dialog.connect1.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.connect2 = jv.Button.create(40, 40, 156, "USWest", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect2.ip = "usw.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect2), jv.reconnect_dialog.connect2.left(12), jv.reconnect_dialog.connect2.top(35), jv.reconnect_dialog.connect2.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.connect3 = jv.Button.create(40, 40, 156, "USEast", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect3.ip = "use.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect3), jv.reconnect_dialog.connect3.right(12), jv.reconnect_dialog.connect3.top(35), jv.reconnect_dialog.connect3.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.connect4 = jv.Button.create(40, 40, 116, "Europe", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect4.ip = "eu.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect4), jv.reconnect_dialog.connect4.right(132), jv.reconnect_dialog.connect4.top(75), jv.reconnect_dialog.connect4.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.connect5 = jv.Button.create(40, 40, 116, "Brasil", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect5.ip = "br.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect5), jv.reconnect_dialog.connect5.left(132), jv.reconnect_dialog.connect5.top(115), jv.reconnect_dialog.connect5.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.connect6 = jv.Button.create(40, 40, 116, "SE Asia", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect6.ip = "sea.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect6), jv.reconnect_dialog.connect6.right(132), jv.reconnect_dialog.connect6.top(115), jv.reconnect_dialog.connect6.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.connect7 = jv.Button.create(40, 40, 116, "SE Asia2", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect7.ip = "sea2.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect7), jv.reconnect_dialog.connect7.right(12), jv.reconnect_dialog.connect7.top(115), jv.reconnect_dialog.connect7.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.connect8 = jv.Button.create(40, 40, 116, "London", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect8.ip = "ldn.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect8), jv.reconnect_dialog.connect8.left(132), jv.reconnect_dialog.connect8.top(75), jv.reconnect_dialog.connect8.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.connect9 = jv.Button.create(40, 40, 116, "USEast2", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect9.ip = "use2.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect9), jv.reconnect_dialog.connect9.right(12), jv.reconnect_dialog.connect9.top(75), jv.reconnect_dialog.connect9.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.connect10 = jv.Button.create(40, 40, 116, "Sudamérica", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect10.ip = "sa.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect10), jv.reconnect_dialog.connect10.left(12), jv.reconnect_dialog.connect10.top(115), jv.reconnect_dialog.connect10.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.connect11 = jv.Button.create(40, 40, 116, "USWest2", jv.reconnect_dialog, 34), jv.reconnect_dialog.connect11.ip = "usw2.mysteralegacy.com", jv.reconnect_dialog.add(jv.reconnect_dialog.connect11), jv.reconnect_dialog.connect11.left(12), jv.reconnect_dialog.connect11.top(75), jv.reconnect_dialog.connect11.on_click = function() {
				jv.selected_ip = this.ip, do_connect()
			}, jv.reconnect_dialog.info = jv.text("Account names are shared across servers. Stats and items are different on each world.", {
				font: "10px Verdana",
				fill: 11783372,
				lineJoin: "round",
				stroke: jv.color_dark,
				strokeThickness: 2,
				align: "center",
				wordWrap: !0,
				wordWrapWidth: 500,
				breakWords: !1
			}), jv.reconnect_dialog.add(jv.reconnect_dialog.info), jv.reconnect_dialog.info.center(), jv.reconnect_dialog.info.bottom(24), jv.reconnect_dialog.news = phone ? jv.text("You can also play from the website: www.mysteralegacy.com", {
				font: "9px Verdana",
				fill: 10730427,
				lineJoin: "round",
				stroke: jv.color_dark,
				strokeThickness: 2,
				align: "center",
				wordWrap: !0,
				wordWrapWidth: 500,
				breakWords: !1
			}) : jv.text("You can also play from the phone app on the Google Play Store", {
				font: "9px Verdana",
				fill: 10730427,
				lineJoin: "round",
				stroke: jv.color_dark,
				strokeThickness: 2,
				align: "center",
				wordWrap: !0,
				wordWrapWidth: 500,
				breakWords: !1
			}), jv.reconnect_dialog.add(jv.reconnect_dialog.news), jv.reconnect_dialog.news.center(), jv.reconnect_dialog.news.bottom(6), jv.reconnect_dialog.tip = jv.text("Tip: If you hold down the action button for a few seconds it will stay pressed!", {
				font: "12px Verdana",
				fill: 13413119,
				lineJoin: "round",
				stroke: jv.color_dark,
				strokeThickness: 4,
				align: "right",
				wordWrap: !0,
				wordWrapWidth: 700,
				breakWords: !0
			}), jv.reconnect_dialog.add(jv.reconnect_dialog.tip), jv.reconnect_dialog.tip.center(), jv.reconnect_dialog.tip.bottom(-20), jv.reconnect_dialog.tip.alpha = .6, "undefined" != typeof mlmeta) {
			if (jv.metaconfig = mlmeta, jv.metaconfig.servers && jv.metaconfig.servers.length)
				for (s = 0; s < jv.metaconfig.servers.length; s++)(_ = jv.metaconfig.servers[s]) && (d = jv.reconnect_dialog["connect" + (s + 1)]) && (d.set_text(_.title), d.ip = _.ip);
			jv.metaconfig.tip && (jv.reconnect_dialog.tip.text = jv.metaconfig.tip, jv.reconnect_dialog.tip.x = 250 - jv.reconnect_dialog.tip.width / 2 + 1), jv.metaconfig.news && "" !== jv.metaconfig.news && (jv.reconnect_dialog.news.text = jv.metaconfig.news), jv.metaconfig.music && playMusic(jv.metaconfig.music)
		}
		jv.create_dialog = jv.Dialog.create(460, 160, jv.stage), jv.create_dialog.left(Math.floor(jv.game_width / 2) - 230), jv.create_dialog.top(200), jv.create_dialog.modal = 1, jv.create_dialog.heading = jv.text("Create New Character", e), jv.create_dialog.add(jv.create_dialog.heading), jv.create_dialog.heading.center(), jv.create_dialog.heading.top(8), jv.create_dialog.notice = jv.text("", {
			font: "9px Verdana",
			fill: 13413034,
			lineJoin: "round",
			stroke: 4473924,
			strokeThickness: 1,
			align: "center"
		}), jv.create_dialog.add(jv.create_dialog.notice), jv.create_dialog.notice.center(), jv.create_dialog.notice.top(26), jv.create_dialog.username = jv.TextInput.create(0, 0, 180, 24, jv.create_dialog), jv.create_dialog.username.placeholder.text = "Player name", jv.create_dialog.add(jv.create_dialog.username), jv.create_dialog.username.left(32), jv.create_dialog.username.bottom(90), jv.create_dialog.email = jv.TextInput.create(0, 0, 180, 24, jv.create_dialog), jv.create_dialog.email.placeholder.text = "Email (for lost passwords)", jv.create_dialog.add(jv.create_dialog.email), jv.create_dialog.email.right(32), jv.create_dialog.email.bottom(90), jv.create_dialog.password = jv.TextInput.create(0, 0, 180, 24, jv.create_dialog), jv.create_dialog.password.placeholder.text = "Password", jv.create_dialog.password.password = !0, jv.create_dialog.add(jv.create_dialog.password), jv.create_dialog.password.left(32), jv.create_dialog.password.bottom(58), jv.create_dialog.confirm = jv.TextInput.create(0, 0, 180, 24, jv.create_dialog), jv.create_dialog.confirm.placeholder.text = "Confirm password", jv.create_dialog.confirm.password = !0, jv.create_dialog.add(jv.create_dialog.confirm), jv.create_dialog.confirm.right(32), jv.create_dialog.confirm.bottom(58), jv.create_dialog.username.tab_next = jv.create_dialog.email, jv.create_dialog.email.tab_next = jv.create_dialog.password, jv.create_dialog.password.tab_next = jv.create_dialog.confirm, jv.create_dialog.confirm.tab_next = jv.create_dialog.username, jv.create_dialog.username.onSubmit = function() {
			jv.create_dialog.okay.on_click()
		}, jv.create_dialog.password.onSubmit = jv.create_dialog.username.onSubmit, jv.create_dialog.email.onSubmit = jv.create_dialog.username.onSubmit, jv.create_dialog.confirm.onSubmit = jv.create_dialog.username.onSubmit, jv.create_dialog.okay = jv.Button.create(30, 32, 60, "Create", jv.create_dialog), jv.create_dialog.add(jv.create_dialog.okay), jv.create_dialog.okay.center(), jv.create_dialog.okay.bottom(20), jv.create_dialog.okay.on_click = function() {
			"" == jv.create_dialog.username.chars || "" == jv.create_dialog.password.chars ? (jv.create_dialog.notice.text = "Username and password required.", jv.create_dialog.notice.w = 0, jv.create_dialog.notice.center()) : "" == jv.create_dialog.email.chars ? (jv.create_dialog.notice.text = "Email required.", jv.create_dialog.notice.w = 0, jv.create_dialog.notice.center()) : jv.create_dialog.password.chars != jv.create_dialog.confirm.chars ? (jv.create_dialog.notice.text = "Password and confirmation don't match.", jv.create_dialog.notice.w = 0, jv.create_dialog.notice.center()) : (jv.create_dialog.okay.enable(0), jv.create_dialog.login.enable(0), jv.create_dialog.notice.text = "", send({
				type: "login",
				user: jv.base64_encode(jv.create_dialog.username.chars.trim()),
				email: jv.base64_encode(jv.create_dialog.email.chars.trim()),
				pass: jv.base64_encode(jv.create_dialog.password.chars.trim())
			}))
		}, jv.create_dialog.login = jv.Button.create(30, 32, 40, "Back", jv.create_dialog), jv.create_dialog.add(jv.create_dialog.login), jv.create_dialog.login.center(), jv.create_dialog.login.bottom(-40), jv.create_dialog.login.on_click = function() {
			jv.create_dialog.hide(), jv.login_dialog.show()
		}, jv.create_dialog.close = jv.Button.create(30, 32, 24, "X", jv.create_dialog), jv.create_dialog.add(jv.create_dialog.close), jv.create_dialog.close.right(8), jv.create_dialog.close.top(8), jv.create_dialog.close.on_click = function() {
			jv.create_dialog.visible = !1
		}, jv.create_dialog.close.visible = 0, (p = jv.establish_dialog = make_dialog(260, 90, "Establishing Connection", {
			no_close: 1,
			parent: jv.stage
		})).x = 250, p.y = 190, p.progress = make_label(" "), p.progress.left(4), p.progress.bottom(4), p.animal_choices = [8, 19, 131], p.animal_choice = p.animal_choices[Math.floor(Math.random() * p.animal_choices.length)], p.animal = jv.sprite(monster[p.animal_choice][1][2]), p.frame = 0, p.foot = 1, p.count = 0, p.add(p.animal), p.animal.center(), p.animal.top(38), p.on_open = function() {
			jv.establish_dialog.animate || (jv.establish_dialog.progress.text = " ", jv.establish_dialog.animal_choice = jv.establish_dialog.animal_choices[Math.floor(Math.random() * jv.establish_dialog.animal_choices.length)], jv.establish_dialog.animal.alpha = 0, jv.establish_dialog.animate = setInterval(function() {
				jv.establish_dialog.visible || (clearInterval(jv.establish_dialog.animate), jv.establish_dialog.animate = null), jv.establish_dialog.frame += jv.establish_dialog.foot, 2 != jv.establish_dialog.frame && 0 != jv.establish_dialog.frame || (jv.establish_dialog.foot = -jv.establish_dialog.foot), jv.establish_dialog.count++, jv.establish_dialog.animal.alpha < 1 && (jv.establish_dialog.animal.alpha += .05), 5 < jv.establish_dialog.count && (jv.establish_dialog.count = 0, jv.establish_dialog.progress.text = jv.establish_dialog.progress.text + ".", jv.establish_dialog.progress.x = 128, jv.establish_dialog.progress.x -= jv.establish_dialog.progress.width / 2), jv.establish_dialog.animal.texture = monster[jv.establish_dialog.animal_choice][jv.establish_dialog.frame][2]
			}, 200))
		}, (p = jv.appearance_dialog = make_dialog(300, 300, "Character Appearance")).frame = 0, p.foot = 1, p.sheet = jv.spritesheet(path + "data/body/b1.png" + vt, 18, 26), p.update_doll = function() {
			var e = jv.appearance_dialog,
				t = e.hair_color.get_selected() ? e.hair_color.get_selected().block_color : e.hair_color_custom.block_color || 16711680,
				i = e.clothes_color.get_selected() ? e.clothes_color.get_selected().block_color : e.clothes_color_custom.block_color || 16711680,
				o = e.eye_color.get_selected() ? e.eye_color.get_selected().block_color : e.eye_color_custom.block_color || 255;
			e.sheet = build_doll(e.body.value, e.clothes.value, i, e.hair.value, t, o), e.locked.visible = 0, e.doll_left.alpha = 1, e.doll_back.alpha = 1, e.doll_face.alpha = 1, e.apply.enable(1), -1 === jv.lock_body.indexOf(e.body.value) && -1 === jv.lock_hair.indexOf(e.hair.value) && -1 === jv.lock_clothes.indexOf(e.clothes.value) || (jv.premium || (e.doll_left.alpha = .7, e.doll_back.alpha = .7, e.doll_face.alpha = .7, e.apply.enable(0)), e.locked.visible = 1)
		}, p.on_open = function() {
			var e = jv.appearance_dialog;
			e.body.choose(myself.body), e.hair.choose(myself.hair), e.clothes.choose(myself.clothes), e.hair_color.choose(myself.hair_color) || (e.hair_color.unselect_all(), e.hair_color_custom.select(myself.hair_color)), e.clothes_color.choose(myself.clothes_color) || (e.clothes_color.unselect_all(), e.clothes_color_custom.select(myself.clothes_color)), e.eye_color.choose(myself.eye_color) || (e.eye_color.unselect_all(), e.eye_color_custom.select(myself.eye_color)), jv.premium ? (e.special_color_custom.select(myself.title_color), e.hair_color_custom.set_lock(0), e.clothes_color_custom.set_lock(0), e.special_color_custom.set_lock(0), e.eye_color_custom.set_lock(0)) : (e.hair_color_custom.set_lock(1), e.clothes_color_custom.set_lock(1), e.special_color_custom.set_lock(1), e.eye_color_custom.set_lock(1)), e.doll_left || (jv.dialog_construction = e, (u = e.doll_left = make_sprite(e.sheet[0][3])).top(30), u.left(25), u.scale.x = 2, u.scale.y = 2, (u = e.doll_face = make_sprite(e.sheet[0][2])).top(30), u.left(70), u.scale.x = 2, u.scale.y = 2, (u = e.doll_back = make_sprite(e.sheet[0][0])).top(30), u.left(115), u.scale.x = 2, u.scale.y = 2, (u = e.locked = make_label("-supporter style-")).alpha = .3, u.top(78), u.left(37), u.visible = 0), e.update_doll(), e.animate = setInterval(function() {
				e.visible || clearInterval(e.animate), e.frame += e.foot, 2 != e.frame && 0 != e.frame || (e.foot = -e.foot), e.doll_left.texture = e.sheet[e.frame][3], e.doll_face.texture = e.sheet[e.frame][2], e.doll_back.texture = e.sheet[e.frame][0]
			}, 200)
		}, (u = make_label("Choose Body")).top(32), u.left(180), (u = p.body = make_range(["1", "2", "3", "4", "5", "6", "7", "8", "9"])).top(50), u.left(185), u.on_change = function() {
			jv.appearance_dialog.update_doll()
		}, (u = make_label("Hair Style")).top(96), u.left(49), (u = p.hair = make_range(["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22"])).top(120), u.left(40), u.on_change = function() {
			jv.appearance_dialog.update_doll()
		}, (u = make_label("Hair Color")).top(96), u.left(175), (u = p.hair_color = make_option(6504471, "hair_color", {
			selected: 1
		})).top(120), u.left(150), (u = make_option(2960169, "hair_color")).top(120), u.left(180), (u = make_option(16772694, "hair_color")).top(120), u.left(210), u.on_change = function() {
			jv.appearance_dialog.hair_color_custom.unselect(), jv.appearance_dialog.update_doll()
		}, (u = p.hair_color_custom = make_color_picker()).top(120), u.left(240), u.low = 40, u.on_change = function() {
			jv.appearance_dialog.hair_color.unselect_all(), jv.appearance_dialog.update_doll()
		}, (u = make_label("Clothing Style")).top(160), u.left(38), (u = p.clothes = make_range(["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16"])).top(184), u.left(40), u.on_change = function() {
			jv.appearance_dialog.update_doll()
		}, (u = make_label("Clothing Color")).top(160), u.left(165), (u = p.clothes_color = make_option(14540253, "clothes_color", {
			selected: 1
		})).top(184), u.left(150), (u = make_option(4958277, "clothes_color")).top(184), u.left(180), (u = make_option(7059967, "clothes_color")).top(184), u.left(210), u.on_change = function() {
			jv.appearance_dialog.clothes_color_custom.unselect(), jv.appearance_dialog.update_doll()
		}, (u = p.clothes_color_custom = make_color_picker()).top(184), u.left(240), u.low = 30, u.on_change = function() {
			jv.appearance_dialog.clothes_color.unselect_all(), jv.appearance_dialog.update_doll()
		}, (u = make_label("Eye Color")).top(224), u.left(46), (u = p.eye_color = make_option(9682175, "eye_color", {
			selected: 1
		})).top(248), u.left(20), (u = make_option(11700288, "eye_color")).top(248), u.left(50), (u = make_option(8843904, "eye_color")).top(248), u.left(80), u.on_change = function() {
			jv.appearance_dialog.eye_color_custom.unselect(), jv.appearance_dialog.update_doll()
		}, (u = p.eye_color_custom = make_color_picker()).top(248), u.left(110), u.low = 120, u.on_change = function() {
			jv.appearance_dialog.eye_color.unselect_all(), jv.appearance_dialog.update_doll()
		}, (u = make_label("Name Color")).top(224), u.left(151), (u = p.special_color_custom = make_color_picker()).top(248), u.left(174), u.low = 100, (u = p.apply = make_button("Apply")).bottom(12), u.right(12), u.on_click = function() {
			var e = jv.appearance_dialog,
				t = e.hair_color.get_selected() ? e.hair_color.get_selected().block_color : e.hair_color_custom.block_color || 16711680,
				i = e.clothes_color.get_selected() ? e.clothes_color.get_selected().block_color : e.clothes_color_custom.block_color || 16711680,
				o = e.eye_color.get_selected() ? e.eye_color.get_selected().block_color : e.eye_color_custom.block_color || 255;
			send({
				type: "c",
				r: "ap",
				c: e.clothes.value,
				b: e.body.value,
				h: e.hair.value,
				cc: i,
				hc: t,
				ec: o,
				nc: e.special_color_custom.block_color || 16777215
			}), e.hide()
		}, (u = jv.costume_button = make_button("Costume Shop")).bottom(-36), u.left(38), u.on_click = function() {
			send({
				type: "c",
				r: "cs"
			})
		}, u.visible = !1, (jv.premium || myself && 1 <= myself.level) && (u.visible = !0), (u = jv.diamonds_button = make_button("Get Diamonds")).bottom(-36), u.right(38), u.on_click = function() {
			window.open("https://www.mysteralegacy.com/perks?u=" + myself.name[1] + myself.name[0] + jv.base64_encode(myself.name), "_system")
		}, u.visible = !1, (jv.premium || myself && 1 <= myself.level && -1 == myself.name.indexOf("guest-")) && (u.visible = !0);
		var u, p = jv.ui_options_dialog = make_dialog(360, 300, "Interface Options");
		(u = p.inv_buttons = make_button("Toggle Inventory Buttons", {
			width: 160
		})).top(40), u.left(16), u.on_click = function() {
			jv.inv_icons ? (jv.inv_icons = 0, jv.inv_button.visible = 0, ui_container.build.visible = 0, Cookies.set("ml_inventory_buttons", !1)) : (jv.inv_icons = 1, jv.inv_button.visible = 1, jv.inv_button.expanded || (ui_container.build.visible = 1), Cookies.set("ml_inventory_buttons", !0))
		}, (u = p.lock_chat = make_button("Toggle Chat Window", {
			width: 160
		})).top(70), u.left(16), u.on_click = function() {
			jv.chat_toggle ? (jv.chat_toggle = 0, jv.chat_fade.visible = !0, jv.chat_box.visible = !1, jv.chat_box.interactive = !1, Cookies.set("ml_chat_window", !1)) : (jv.chat_toggle = 1, jv.chat_fade.visible = !1, jv.chat_box.visible = !0, jv.chat_box.gfx.alpha = jv.chat_box.gfx.max_alpha, jv.chat_box.interactive = !0, Cookies.set("ml_chat_window", !0))
		}, (u = p.lock_dpad = make_button("Toggle D-Pad", {
			width: 160
		})).top(100), u.left(16), u.on_click = function() {
			compass2.visible ? (compass.visible = 0, compass2.visible = 0, ph_dpad.visible = 0, jv.chat_box.h = 377, jv.chat_box.gfx.height = 379, jv.chat_box.m.height = 377, jv.chat_box.mask.height = 377, jv.chat_box.resume.y = jv.chat_box.h - 35, Cookies.set("ml_dpad", !1)) : (compass.visible = 1, compass2.visible = 1, ph_dpad.visible = 1, jv.chat_box.h = 210, jv.chat_box.gfx.height = 212, jv.chat_box.m.height = 210, jv.chat_box.mask.height = 210, jv.chat_box.resume.y = jv.chat_box.h - 35, Cookies.set("ml_dpad", !0))
		}, (u = p.lock_quick = make_button("Toggle Quick Buttons", {
			width: 160
		})).top(40), u.right(16), u.on_click = function() {
			jv.quick_toggle ? (jv.hot_scene.visible = 0, jv.quick_toggle = 0, Cookies.set("ml_quick_buttons", !1)) : (jv.inv_button.expanded || (jv.hot_scene.visible = 1), jv.quick_toggle = 1, Cookies.set("ml_quick_buttons", !0))
		}, (u = p.lock_action = make_button("Toggle Action Button", {
			width: 160
		})).top(70), u.right(16), u.on_click = function() {
			ph_action.visible ? (jv.action_button.visible = 0, ph_action.visible = 0, info_pane.x = 580, info_pane.y = 284, Cookies.set("ml_action_button", !1)) : (jv.action_button.visible = 1, ph_action.visible = 1, info_pane.x = 480, info_pane.y = 34, Cookies.set("ml_action_button", !0))
		}, (u = p.chat_opacity_label = make_label("Chat Opacity")).top(130), u.center(), (u = p.chat_opacity = make_slider({
			width: 120
		})).top(150), u.center(), u.set_percent(Cookies.get("ml_chat_opacity") || 50), u.onChange = function() {
			jv.chat_box.gfx.max_alpha = this.percent / 100, jv.chat_box.visible && (jv.chat_box.gfx.alpha = jv.chat_box.gfx.max_alpha), Cookies.set("ml_chat_opacity", this.percent)
		}, (u = p.chat_width_label = make_label("Chat Width")).top(180), u.center(), (u = p.chat_width = make_slider({
			width: 120
		})).top(200), u.center(), u.set_percent(Cookies.get("ml_chat_width") || 50), u.onChange = function() {
			var e = .7 * this.percent + 30;
			isNaN(e) || (100 < e ? e = 100 : e < 30 && (e = 30), e = Math.floor(346 * e / 100), jv.chat_box.w = e, jv.chat_box.gfx.width = e, jv.chat_box.m.width = e, jv.chat_box.resume.x = jv.chat_box.w / 2 - 35, jv.chat_box.text_style.wordWrapWidth = jv.chat_box.w - 2 * jv.chat_box.padding, jv.chat_fade.w = e, jv.chat_fade.gfx.width = e, jv.chat_fade.m.width = e, jv.chat_fade.resume.x = jv.chat_fade.w / 2 - 35, jv.chat_fade.text_style.wordWrapWidth = jv.chat_fade.w - 2 * jv.chat_fade.padding, Cookies.set("ml_chat_width", this.percent))
		}, (u = p.font_size_label = make_label("Font Size")).top(230), u.center(), (u = p.font_size = make_slider({
			width: 120
		})).top(250), u.center(), u.set_percent(Cookies.get("ml_font_size") || 50), u.onChange = function() {
			var e = .07 * this.percent + 9;
			isNaN(e) || (16 < e ? e = 16 : e < 9 && (e = 9), jv.chat_box.text_style.font = e + "px Verdana", jv.chat_fade.text_style.font = e + "px Verdana", Cookies.set("ml_font_size", this.percent))
		}, phone && (jv.app_exit = jv.Button.create(splash.width - 74, splash.height - 60, 40, "Exit", splash), jv.app_exit.alpha = .6, jv.app_exit.on_click = function() {
			navigator.app.exitApp()
		})
	}, {
		font: "12px Verdana",
		fill: 15658734,
		lineJoin: "round",
		stroke: 4473924,
		strokeThickness: 4,
		align: "left"
	}),
	label_style = {
		font: "11px Verdana",
		fill: 14540253,
		lineJoin: "round",
		stroke: 3355443,
		strokeThickness: 3,
		align: "left"
	},
	plain_style = {
		font: "10px Verdana",
		fill: 16777215,
		lineJoin: "round",
		stroke: 4473924,
		strokeThickness: 1,
		align: "left"
	},
	make_dialog = function(e, t, i, o) {
		(o = o || {}).parent || (o.parent = ui_container);
		var n = jv.Dialog.create(e, t, o.parent);
		return i && (n.heading = jv.text(i, heading_style), n.add(n.heading), n.heading.center(), n.heading.top(8)), o.modal && (n.modal = 1), o.no_close || (n.close = jv.Button.create(30, 32, 24, "X", n), n.add(n.close), n.close.right(8), n.close.top(8), n.close.on_click = function() {
			n.visible = !1
		}), n
	},
	make_button = function(e, t) {
		(t = t || {}).parent || (t.parent = jv.dialog_construction || ui_container);
		e = jv.Button.create(0, 0, t.width || Math.max(24, 7 * e.length + 14), e, t.parent, t.height);
		return t.parent.add(e), e.center(), e.middle(), e
	},
	make_slider = function(e) {
		(e = e || {}).parent || (e.parent = jv.dialog_construction || ui_container);
		var t = jv.Slider.create(e.width || 64, e.parent);
		return e.parent.add(t), t.center(), t.middle(), t
	},
	make_option = function(e, t, i) {
		(i = i || {}).parent || (i.parent = jv.dialog_construction || ui_container);
		e = jv.OptionButton.create(0, 0, i.width || Math.max(24, 7 * (e.length || 0) + 7), e, t, i.parent);
		return i.parent.add(e), e.center(), e.middle(), i.selected && e.select(), e
	},
	make_color_picker = function(e) {
		(e = e || {}).parent || (e.parent = jv.dialog_construction || ui_container);
		var t = jv.ColorPicker.create(0, 0, e.parent);
		return e.parent.add(t), t.center(), t.middle(), t
	},
	make_label = function(e, t) {
		(t = t || {}).parent || (t.parent = jv.dialog_construction || ui_container);
		e = jv.text(e || "Label", t.style || label_style);
		return t.parent.add(e), e.center(), e.middle(), e
	},
	make_text_field = function(e) {
		(e = e || {}).parent || (e.parent = jv.dialog_construction || ui_container);
		var t = jv.TextInput.create(0, 0, 120, 24, e.parent);
		return e.placeholder && (t.email.placeholder.text = e.placeholder), e.parent.add(t), t.center(), t.middle(), t.on_submit = function(e) {
			t.onSubmit(e)
		}, t
	},
	make_sprite = function(e, t) {
		(t = t || {}).parent || (t.parent = jv.dialog_construction || ui_container);
		e = jv.sprite(e);
		return t.parent.add(e), e.center(), e.middle(), e
	},
	make_range = function(e, t) {
		(t = t || {}).parent || (t.parent = jv.dialog_construction || ui_container);
		var i = new PIXI.Container;
		i.add = function(e) {
			this.addChild(e), e.w = e.w || e.width, e.h = e.h || e.height;

			function t() {}
			e.center = t, e.middle = t, e.left = t, e.right = t, e.top = t, e.bottom = t
		}, i.list = e, i.index = 0, i.label = make_label(e[0], {
			style: plain_style,
			parent: i
		}), i.label.x = 32, i.label.y = 8, i.less = make_button("<", {
			parent: i
		}), i.less.on_click = function() {
			0 < this.parent.index ? this.parent.index-- : this.parent.index = this.parent.list.length - 1, this.parent.label.text = this.parent.list[this.parent.index], this.parent.value = isNaN(Number(this.parent.label.text)) ? this.parent.label.text : Number(this.parent.label.text), this.parent.on_change && this.parent.on_change()
		}, i.more = make_button(">", {
			parent: i
		}), i.more.on_click = function() {
			this.parent.index >= this.parent.list.length - 1 ? this.parent.index = 0 : this.parent.index++, this.parent.label.text = this.parent.list[this.parent.index], this.parent.value = isNaN(Number(this.parent.label.text)) ? this.parent.label.text : Number(this.parent.label.text), this.parent.on_change && this.parent.on_change()
		}, i.value = isNaN(Number(i.label.text)) ? i.label.text : Number(i.label.text), i.choose = function(e) {
			for (var t in this.list)
				if (this.list[t] == String(e)) return this.index = t, this.label.text = this.list[this.index], this.value = isNaN(Number(this.label.text)) ? this.label.text : Number(this.label.text), 1;
			return 0
		};
		var o, n = 0;
		for (o in e) e[o].length > n && (n = e[o].length);
		return i.more.x = 40 + 6 * n, t.parent.add(i), i.center(), i.middle(), i
	},
	init_ui = (jv.Button = {
		create: function(e, t, i, o, n, a, r) {
			var s = jv.sprite();
			return n = n || ui_container, s.interactive = !0, s.button_alpha = .8, s.font_size = r || 12, s.h = a || 26, s.w = i, s.hitArea = new PIXI.Rectangle(0, 0, i, s.h), s.do_click = function() {
				this.is_enabled && (this.on_up(), this.silent || playSound("click"), this.on_click) && this.on_click()
			}, s.on_up = function() {
				jv.last_button_down = Date.now(), jv.global_button_down = 0, this.is_enabled && (this.is_pressed = 0, this.graphic && (s.graphic.y = s.graphic.oy), this.clear_item(), this.draw_item())
			}, s.on_down = function() {
				jv.global_button_down = 1, this.is_enabled && (this.clear_item(), this.draw_item(1), this.is_pressed = 1, this.graphic && (s.graphic.y = s.graphic.oy + 1), this.on_press) && this.on_press()
			}, s.buttonMode = !0, s.on("mouseup", s.do_click), s.on("mouseupoutside", s.on_up), s.on("touchend", s.do_click), s.on("touchendoutside", s.on_up), s.on("mousedown", s.on_down), s.on("touchstart", s.on_down), s.down = 0, s.is_pressed = 0, s.is_enabled = 1, s.x = e, s.y = t, s.z = -10, "string" != typeof o && (s.graphic = jv.sprite(o), s.graphic.x = s.w / 2 - s.graphic.width / 2, s.graphic.y = s.h / 2 - s.graphic.height / 2, s.graphic.oy = s.graphic.y, o = ""), s.title = jv.text(o, {
				font: s.font_size + "px Verdana",
				fill: [13421772, 16777215, 11184810],
				lineJoin: "round",
				dropShadow: !0,
				dropShadowColor: jv.color_base,
				dropShadowDistance: 2,
				dropShadowAngle: 1
			}), s.title.x = i / 2 - s.title.width / 2 + 1, s.title.y = s.h / 2 - s.title.height / 2 + 1, s.title.oy = s.title.y, s.set_text = function(e) {
				this.title.text = e, this.title.x = this.w / 2 - this.title.width / 2 + 1, this.title.y = this.h / 2 - this.title.height / 2 + 1, this.title.oy = this.title.y
			}, s.gfx = new PIXI.Graphics, s.enable = function(e) {
				this.is_enabled = e, this.buttonMode = e, this.clear_item(), e ? (this.title.style = {
					font: this.font_size + "px Verdana",
					fill: [13421772, 16777215, 11184810],
					lineJoin: "round",
					dropShadow: !0,
					dropShadowColor: jv.color_base,
					dropShadowDistance: 2,
					dropShadowAngle: 1
				}, this.draw_item()) : (this.title.style = {
					font: this.font_size + "px Verdana",
					fill: jv.color_dark,
					lineJoin: "round",
					dropShadow: !1
				}, this.draw_item(1))
			}, s.clear_item = function() {
				this.gfx.clear()
			}, s.draw_item = function(e) {
				this.gfx.cacheAsBitmap = !1, this.down = e || 0, this !== ph_action && (this.gfx.beginFill(jv.color_dark), this.gfx.drawRect(0, 0, i, 2), this.gfx.drawRect(0, 0, 2, this.h), this.gfx.drawRect(0, this.h - 2, i, 2), this.gfx.drawRect(i - 2, 0, 2, this.h), this.gfx.beginFill(this.main_color || jv.color_light, this.button_alpha), e ? (this.gfx.drawRect(2, 2, i - 4, this.h - 4), this.is_enabled && (this.gfx.beginFill(jv.color_dark, .6), this.gfx.drawRect(2, 2, i - 4, 2), this.gfx.drawRect(i - 4, 2, 2, this.h - 6), this.gfx.beginFill(16777215, .2), this.gfx.drawRect(2, this.h - 4, i - 4, 2), this.gfx.drawRect(2, 4, 2, this.h - 6), this.gfx.endFill(), this.title.y = this.title.oy + 1)) : (this.gfx.drawRect(2, 2, i - 4, this.h - 4), this.gfx.beginFill(16777215, .2), this.gfx.drawRect(2, 2, i - 4, 2), this.gfx.drawRect(i - 4, 2, 2, this.h - 6), this.gfx.beginFill(jv.color_dark, .6), this.gfx.drawRect(2, this.h - 4, i - 4, 2), this.gfx.drawRect(2, 4, 2, this.h - 6), this.gfx.beginFill(2236962, .2), this.gfx.drawRect(4, this.h - 4 - Math.ceil(this.h / 3), i - 8, Math.ceil(this.h / 3)), this.gfx.endFill(), this.title.y = this.title.oy), this.gfx.cacheAsBitmap = !0)
			}, s.draw_item(), s.addChild(s.gfx), s.graphic && s.addChild(s.graphic), s.addChild(s.title), n.addChild(s), s
		}
	}, jv.OptionButton = {
		create: function(e, t, i, o, n, a, r) {
			var s = jv.sprite();
			return a = a || ui_container, s.interactive = !0, s.h = r || 24, s.w = i, s.selected = 0, s.series = n, jv.option_container || (jv.option_container = []), jv.option_container[n] || (jv.option_container[n] = []), jv.option_container[n].push(s), s.hitArea = new PIXI.Rectangle(0, 0, i, s.h), s.do_click = function() {
				if (this.is_enabled) {
					var e, t;
					for (e in this.on_up(), this.silent || playSound("click"), this.on_click && this.on_click(), jv.option_container[this.series]) jv.option_container[this.series][e].selected = 0, jv.option_container[this.series][e].draw_item(), !t && jv.option_container[this.series][e].on_change && (t = jv.option_container[this.series][e].on_change);
					this.selected = 1, this.draw_item(), t && t()
				}
			}, s.get_selected = function() {
				for (var e in jv.option_container[this.series])
					if (jv.option_container[this.series][e].selected) return jv.option_container[this.series][e]
			}, s.unselect_all = function() {
				for (var e in jv.option_container[this.series]) jv.option_container[this.series][e].selected = 0, jv.option_container[this.series][e].draw_item()
			}, s.choose = function(e) {
				for (var t in jv.option_container[this.series])
					if (jv.option_container[this.series][t].block_color == e || jv.option_container[this.series][t].label && jv.option_container[this.series][t].label.text == String(e)) return jv.option_container[this.series][t].select(), 1;
				return 0
			}, s.select = function(e) {
				this.unselect_all(), this.selected = 1, this.draw_item()
			}, s.on_up = function() {
				this.is_enabled && (this.is_pressed = 0, this.clear_item(), this.draw_item())
			}, s.on_down = function() {
				this.is_enabled && (this.clear_item(), this.draw_item(1), this.is_pressed = 1, this.on_press) && this.on_press()
			}, s.buttonMode = !0, s.on("mouseup", s.do_click), s.on("mouseupoutside", s.on_up), s.on("touchend", s.do_click), s.on("touchendoutside", s.on_up), s.on("mousedown", s.on_down), s.on("touchstart", s.on_down), s.down = 0, s.is_pressed = 0, s.is_enabled = 1, s.x = e, s.y = t, s.z = -10, "number" == typeof o ? s.block_color = o : (s.label = jv.text(o, {
				font: "9px Verdana",
				fill: 16777215,
				lineJoin: "round",
				dropShadow: !0,
				dropShadowColor: jv.color_base,
				dropShadowDistance: 2,
				dropShadowAngle: 1
			}), s.label.x = i / 2 - s.label.width / 2 + 1, s.label.y = s.h / 2 - s.label.height / 2 + 1, s.label.oy = s.label.y, s.set_text = function(e) {
				this.label.text = e, this.label.x = this.w / 2 - this.label.width / 2 + 1, this.label.y = this.h / 2 - this.label.height / 2 + 1, this.label.oy = this.label.y
			}), s.gfx = new PIXI.Graphics, s.enable = function(e) {
				this.is_enabled = e, this.buttonMode = e, this.clear_item(), e ? (this.label.style = {
					font: "9px Verdana",
					fill: 16777215,
					lineJoin: "round",
					dropShadow: !0,
					dropShadowColor: jv.color_base,
					dropShadowDistance: 2,
					dropShadowAngle: 1
				}, this.draw_item()) : (this.label.style = {
					font: "9px Verdana",
					fill: jv.color_base,
					lineJoin: "round",
					dropShadow: !1
				}, this.draw_item(1))
			}, s.clear_item = function() {
				this.gfx.clear()
			}, s.draw_item = function(e) {
				this.clear_item(), this.down = e || 0, this.selected ? this.gfx.lineStyle(2, 2236962) : this.gfx.lineStyle(2, 5592405, .3), this.gfx.drawRect(3, 3, this.w - 6, this.h - 6), this.block_color && (this.gfx.lineStyle(0, 0), this.gfx.beginFill(this.block_color, 1), this.gfx.drawRect(4, 4, this.w - 8, this.h - 8), this.gfx.endFill())
			}, s.draw_item(), s.addChild(s.gfx), s.label && s.addChild(s.label), a.addChild(s), s
		}
	}, jv.ColorPicker = {
		create: function(e, t, i) {
			var o, n = jv.sprite();
			return i = i || ui_container, n.interactive = !0, n.h = 24, n.w = 24, n.hitArea = new PIXI.Rectangle(0, 0, n.w, n.h), n.do_click = function(e) {
				this.silent || playSound("click"), this.is_enabled && !this.locked && (this.on_up(), this.on_click && this.on_click(), this.active ? (touchx = e.data.getLocalPosition(this.picker).x, touchy = e.data.getLocalPosition(this.picker).y, 490 < touchx && (touchx = 490), this.block_color = this.get_color(Math.floor(touchx), Math.floor(touchy)), this.low && (this.block_color = color_limit(this.block_color, this.low)), this.active = 0, this.picker.width = 16, this.picker.height = 5, this.picker.x = 4, this.picker.y = 16, this.selected = 1, this.on_change && this.on_change()) : (this.active = 1, this.picker.width = 128, this.picker.height = 128, this.picker.x = -64, this.picker.y = -64, this.picker.visible = 1, jv.bringToFront(this)), this.draw_item())
			}, n.set_lock = function(e) {
				this.locked = e || 0, this.draw_item()
			}, n.unselect = function() {
				this.active = 0, this.picker.width = 16, this.picker.height = 16, this.picker.x = 4, this.picker.y = 5, this.selected = 0, delete this.block_color, this.draw_item()
			}, n.select = function(e, t) {
				this.block_color = e, this.picker.width = 16, this.picker.height = 5, this.picker.x = 4, this.picker.y = 16, this.active = 0, this.selected = 1, t && this.on_change && this.on_change(), this.draw_item()
			}, n.on_up = function() {
				this.is_enabled && (this.is_pressed = 0, this.clear_item(), this.draw_item())
			}, n.on_down = function() {
				this.is_enabled && (this.clear_item(), this.draw_item(1), this.is_pressed = 1, this.on_press) && this.on_press()
			}, n.buttonMode = !0, n.on("mouseup", n.do_click), n.on("mouseupoutside", n.on_up), n.on("touchend", n.do_click), n.on("touchendoutside", n.on_up), n.on("mousedown", n.on_down), n.on("touchstart", n.on_down), n.down = 0, n.is_pressed = 0, n.is_enabled = 1, n.x = e, n.y = t, n.z = -10, n.lock = jv.sprite(items[9][55]), n.lock.visible = 0, n.lock.alpha = .8, n.lock.scale.x = .5, n.lock.scale.y = .5, n.lock.x = 4, n.lock.y = 4, n.picker = jv.sprite(jv.color_picker.texture), n.picker.interactive = !0, n.picker.buttonMode = !0, n.picker.x = 4, n.picker.y = 5, n.picker.width = 16, n.picker.height = 16, n.picker.alpha = 1, n.active = 0, n.gfx = new PIXI.Graphics, 4 == jv.pixiver ? (o = new PIXI.Sprite(jv.color_picker.texture), n.pixels = jv.renderer.extract.pixels(o)) : (e = new PIXI.RenderTexture(jv.renderer, 128, 128, PIXI.SCALE_MODES.NEAREST, 1), o = new PIXI.Sprite(jv.color_picker.texture), (t = new PIXI.Container).addChild(o), e.render(t), n.pixels = e.getPixels()), n.get_color = function(e, t) {
				var i = this.pixels[512 * t + 4 * e];
				return ((i << 8) + this.pixels[512 * t + 4 * e + 1] << 8) + this.pixels[512 * t + 4 * e + 2]
			}, n.enable = function(e) {
				this.is_enabled = e, this.buttonMode = e, this.clear_item(), e ? this.draw_item() : this.draw_item(1)
			}, n.clear_item = function() {
				this.gfx.clear()
			}, n.draw_item = function() {
				this.clear_item(), this.lock.visible = this.locked, this.selected ? this.gfx.lineStyle(2, 2236962) : this.gfx.lineStyle(2, 5592405, .4), this.gfx.drawRect(3, 3, this.w - 6, this.h - 6), this.block_color && (this.gfx.lineStyle(0, 0), this.gfx.beginFill(this.block_color, 1), this.gfx.drawRect(4, 4, this.w - 8, this.h - 8), this.gfx.endFill())
			}, n.draw_item(), n.addChild(n.gfx), n.addChild(n.picker), n.addChild(n.lock), i.addChild(n), n
		}
	}, jv.AbilityButton = {
		create: function(e, t, i, o) {
			var n = jv.sprite();
			return o = o || ui_container, n.interactive = !0, n.h = 42, n.w = 42, n.last_click = 0, n.cooldown = 5e3, n.spr = i, n.ready = 1, n.progress = 1, n.draw_timer = null, n.hitArea = new PIXI.Rectangle(0, 0, n.w, n.h), n.do_update = function() {
				var e = Date.now();
				e - this.last_click < 0 && (this.last_click = e), this.progress = (e - this.last_click) / this.cooldown, this.cdcover.scale.y = Math.max(this.progress, 0), this.cdcover.y = this.h - 2 - this.progress * (this.h - 2), 1 <= this.progress && (clearInterval(this.draw_timer), this.ready = 1, this.icon.tint = 16777215, this.cdcover.visible = 0, this.cdcover.scale.y = .01)
			}, n.activate = function() {
				this.clear_item(), this.draw_item(), this.last_click = Date.now(), this.draw_timer = setInterval(this.do_update.bind(this), 100), this.ready = 0, this.cdcover.visible = 1, this.icon.tint = 4473924
			}, n.do_click = function() {
				this.is_enabled && this.ready && (this.on_up(), this.silent || playSound("click"), this.on_click && this.on_click(), send({
					type: "c",
					r: "ab",
					a: this.ind
				}))
			}, n.on_up = function() {
				this.is_enabled && this.ready && (this.is_pressed = 0, this.clear_item(), this.draw_item())
			}, n.on_down = function() {
				this.is_enabled && this.ready && (this.clear_item(), this.draw_item(1), this.is_pressed = 1, this.on_press) && this.on_press()
			}, n.buttonMode = !0, n.on("mouseup", n.do_click), n.on("mouseupoutside", n.on_up), n.on("touchend", n.do_click), n.on("touchendoutside", n.on_up), n.on("mousedown", n.on_down), n.on("touchstart", n.on_down), n.down = 0, n.is_pressed = 0, n.is_enabled = 1, n.x = e, n.y = t, n.z = -10, n.icon = jv.sprite(items[i % 16][Math.floor(i / 16)]), n.icon.x = n.w / 2 - n.icon.width / 2 + 0, n.icon.y = n.h / 2 - n.icon.height / 2 + 0, n.icon.oy = n.icon.y, n.set_text = function(e) {}, n.gfx = new PIXI.Graphics, n.cdcover = new PIXI.Graphics, n.enable = function(e) {
				this.is_enabled = e, this.buttonMode = e, this.clear_item(), e ? this.draw_item() : this.draw_item(1)
			}, n.clear_item = function() {
				this.gfx.clear()
			}, n.draw_item = function(e) {
				this.down = e || 0, this.gfx.beginFill(3355443, 1), this.gfx.drawRect(0, 0, 2, this.h), this.gfx.drawRect(0, 0, this.w, 2), this.gfx.drawRect(0, this.h - 2, this.w, 2), this.gfx.drawRect(this.w - 2, 0, 2, this.h), e ? this.gfx.beginFill(65535, .6) : this.gfx.beginFill(0, .8), this.gfx.drawRect(2, 2, this.w - 4, this.h - 4), this.gfx.endFill(), this.icon.y = this.icon.oy, this.gfx.alpha = .6
			}, n.cdcover.beginFill(65535, .6), n.cdcover.drawRect(2, 2, n.w - 4, n.h - 4), n.cdcover.endFill(), n.cdcover.visible = 0, n.draw_item(), n.addChild(n.gfx), n.addChild(n.cdcover), n.addChild(n.icon), o.addChild(n), n
		}
	}, jv.Slider = {
		create: function(e, t) {
			var i = jv.sprite();
			return t = t || ui_container, i.interactive = !0, i.h = 20, i.w = e, i.x = 0, i.y = 0, i.buttonMode = !0, i.on_move = function(e) {
				this.drag && (e = e.data.global.x - this.x - this.parent.x - this.knob.w / 2, this.parent.parent && (e -= this.parent.parent.x), e < 0 ? e = 0 : e > this.w - this.knob.w && (e = this.w - this.knob.w), this.knob.x = e, this.percent = Math.round(this.knob.x / (this.w - this.knob.w) * 100), this.onChange) && this.onChange()
			}, i.on_up = function() {
				this.drag = 0
			}, i.on_down = function() {
				this.drag = 1
			}, i.on("mouseup", i.on_up), i.on("mouseupoutside", i.on_up), i.on("touchend", i.on_up), i.on("touchendoutside", i.on_up), i.on("mousedown", i.on_down), i.on("touchstart", i.on_down), i.on("mousemove", i.on_move), i.on("touchmove", i.on_move), i.percent = 50, i.gfx = new PIXI.Graphics, i.knob = new PIXI.Graphics, i.knob.w = 12, i.set_percent = function(e) {
				e < 0 ? e = 0 : 100 < e && (e = 100), this.percent = e, this.knob.x = e / 100 * (this.w - this.knob.w)
			}, i.set_percent(50), i.draw_item = function() {
				this.gfx.beginFill(jv.color_dark), this.gfx.drawRect(2, this.h / 2, this.w - 4, 3), this.gfx.endFill(), this.knob.beginFill(jv.color_dark, 0), this.knob.drawRect(-8, -8, this.knob.w + 16, this.h + 16), this.knob.endFill(), this.knob.beginFill(jv.color_dark), this.knob.drawRect(0, 0, this.knob.w, this.h), this.knob.beginFill(jv.color_bright), this.knob.drawRect(2, 2, this.knob.w - 4, this.h - 4), this.knob.beginFill(jv.color_medium), this.knob.drawRect(2, 4, this.knob.w - 4, this.h - 6), this.knob.endFill()
			}, i.draw_item(), i.addChild(i.gfx), i.addChild(i.knob), t.addChild(i), i
		}
	}, jv.Dialog = {
		list: [],
		create: function(e, t, i) {
			var o = jv.sprite();
			return o.w = e, o.h = t, i || ((i = ui_container).w = jv.game_width), jv.theme(o, e, t, .9), jv.Dialog.list.push(o), (jv.dialog_construction = o).visible = !1, o.show = function() {
				for (var e in jv.Dialog.list) {
					if (jv.Dialog.list[e].visible && jv.Dialog.list[e].modal) return;
					jv.Dialog.list[e].visible = !1
				}
				this.visible = !0, this.on_open && this.on_open()
			}, o.hide = function() {
				this.visible = !1
			}, o.center = function() {
				jv.center(this)
			}, o.middle = function() {
				jv.middle(this)
			}, o.left = function(e) {
				jv.left(this, e)
			}, o.right = function(e) {
				jv.right(this, e)
			}, o.top = function(e) {
				jv.top(this, e)
			}, o.bottom = function(e) {
				jv.bottom(this, e)
			}, o.add = function(e) {
				e.parent !== this && this.addChild(e), e.w = e.w || e.width, e.h = e.h || e.height, e.center = this.center, e.middle = this.middle, e.left = this.left, e.right = this.right, e.top = this.top, e.bottom = this.bottom
			}, i.addChild(o), o.center(), o.middle(), o
		}
	}, jv.center = function(e, t) {
		t = t || e.parent || ui_container, e.x = (t.w || t.width) / 2 - (e.w || e.width) / 2
	}, jv.middle = function(e, t) {
		t = t || e.parent || ui_container, e.y = (t.h || t.height) / 2 - (e.h || e.height) / 2
	}, jv.left = function(e, t, i) {
		i = i || e.parent || ui_container, e.x = t
	}, jv.right = function(e, t, i) {
		i = i || e.parent || ui_container, e.x = (i.w || i.width) - (e.w || e.width) - t
	}, jv.top = function(e, t, i) {
		i = i || e.parent || ui_container, e.y = t
	}, jv.bottom = function(e, t, i) {
		i = i || e.parent || ui_container, e.y = (i.h || i.height) - (e.h || e.height) - t
	}, jv.theme = function(e, t, i, o) {
		var n, a, r, s;
		for (e.background = new PIXI.Graphics, e.background.beginFill(jv.color_base, o || 1), e.background.drawRect(0, 0, t, i), n = 0; n < t; n += 16)
			for (a = 0; a < i; a += 16) Math.random() * i <= a && (1.7 < 2 * Math.random() ? e.background.beginFill(jv.color_bright, .12) : e.background.beginFill(jv.color_dark, .4), t < n + (s = 16) && (s = t - n), i < a + (r = 16) && (r = i - a), e.background.drawRect(n, a, s, r));
		e.frame = new PIXI.Graphics, e.frame.beginFill(16777215, .4), e.frame.drawRect(0, 0, t - 4, 4), e.frame.beginFill(jv.color_dark, .5), e.frame.drawRect(0, 0, 4, i - 4), e.frame.beginFill(16777215, .2), e.frame.drawRect(t - 4, 0, 4, i), e.frame.beginFill(jv.color_dark, .6), e.frame.drawRect(0, i - 4, t, 4), e.frame.lineStyle(2, jv.color_dark), e.frame.drawRect(1, 1, t - 2, i - 2), e.background.cacheAsBitmap = !0, e.frame.cacheAsBitmap = !0, e.addChild(e.background), e.addChild(e.frame)
	}, function() {
		jv.upgrade_sprite = jv.sprite(items[13][Math.floor(237 / 16)]), jv.upgrade_sprite.x = 548, jv.upgrade_sprite.y = -5, jv.upgrade_sprite.alpha = .6, ui_container.addChild(jv.upgrade_sprite), jv.upgrade_number = 0, jv.upgrade_current = 0, jv.upgrade_timer = 0, jv.upgrade_counter = new PIXI.extras.BitmapText("", {
			font: "20px mapfont",
			align: "center"
		}), jv.upgrade_counter.interactive = !0, jv.upgrade_counter.buttonMode = !0, jv.upgrade_counter.on("mouseup", function() {
			send({
				type: "c",
				r: "up"
			}), jv.upgrade_dialog.show()
		}), jv.upgrade_counter.on("touchend", function() {
			send({
				type: "c",
				r: "up"
			}), jv.upgrade_dialog.show()
		}), jv.upgrade_counter.alpha = .8, jv.upgrade_counter.x = 502, jv.upgrade_counter.y = 3, ui_container.addChild(jv.upgrade_counter), jv.upgrade_add = new PIXI.extras.BitmapText("", {
			font: "20px mapfont",
			align: "right"
		}), jv.upgrade_add.x = 518, jv.upgrade_add.y = 24, jv.upgrade_add.alpha = 0, jv.add_number = 0, ui_container.addChild(jv.upgrade_add), jv.ver_text = jv.text("Ver. " + version, {
			font: "10px Verdana",
			fill: 12311995,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 2,
			align: "right"
		}), jv.ver_text.x = 665, jv.ver_text.y = 390, splash.addChild(jv.ver_text), jv.map_title = new PIXI.extras.BitmapText("", {
			font: "24px mapfont",
			align: "center"
		}), jv.map_title.x = 170, jv.map_title.y = 318, jv.map_title.alpha = 0, ui_container.addChild(jv.map_title), jv.choose_name = jv.Button.create(480, 270, 90, "Choose Name", ui_container, 36), jv.choose_name.on_click = function() {
			jv.create_dialog.visible ? jv.create_dialog.hide() : (jv.create_dialog.show(), jv.create_dialog.modal = 0, jv.create_dialog.login.visible = 0, jv.create_dialog.y = 12, jv.create_dialog.heading.text = "Choose Name", jv.create_dialog.heading.x = jv.create_dialog.w / 2 - jv.create_dialog.heading.width / 2, jv.create_dialog.close.visible = 1)
		}, jv.choose_name.visible = 0, (ph_dpad = jv.sprite()).choose_dir = function(e) {
			var t, i;
			jv.chat_box.drag || (e || jv.mouseDown) && (t = jv.mouse.x, i = jv.mouse.y, e && (t = touchx, i = touchy), t < this.x || t > this.x + this.width || i < this.y || i > this.y + this.height || (jv.glow.x = t, jv.glow.y = i, this.stop_move(), jv.glow.visible = 1, compass2.alpha = .85, Math.abs(t - this.cx) > Math.abs(i - this.cy) ? t < this.cx ? keyLeft.isDown = 1 : keyRight.isDown = 1 : i < this.cy ? keyUp.isDown = 1 : keyDown.isDown = 1))
		}, ph_dpad.stop_move = function() {
			keyDown.isDown = 0, keyUp.isDown = 0, keyLeft.isDown = 0, keyRight.isDown = 0, jv.glow.visible = 0, compass2.alpha = .55
		}, ph_dpad.do_touch_move = function(e) {
			touchx = e.data.getLocalPosition(this.parent).x, touchy = e.data.getLocalPosition(this.parent).y, this.choose_dir(1)
		}, ph_dpad.do_mouse_move = function(e) {
			this.choose_dir(0)
		}, ph_dpad.interactive = !0, inventory.alpha = .5, compass.x = 34, compass.y = 237, ph_dpad.x = 34, ph_dpad.y = 259, ph_dpad.width = 136, ph_dpad.height = 140, ph_dpad.cx = -1 + ph_dpad.x + ph_dpad.width / 2, ph_dpad.cy = -5 + ph_dpad.y + ph_dpad.height / 2, ph_dpad.alpha = 0, ph_dpad.on("mousedown", function() {
			jv.mouseDown = 1, ph_dpad.choose_dir()
		}), ph_dpad.on("touchstart", ph_dpad.do_touch_move), ph_dpad.on("mouseup", function() {
			jv.mouseDown = 0, this.stop_move()
		}), ph_dpad.on("mouseupoutside", function() {
			jv.mouseDown = 0, this.stop_move()
		}), ph_dpad.on("touchend", function() {
			this.stop_move()
		}), ph_dpad.on("touchendoutside", function() {
			this.stop_move()
		}), ph_dpad.on("touchmove", ph_dpad.do_touch_move), ph_dpad.on("mousemove", ph_dpad.do_mouse_move), (compass2 = new PIXI.Sprite(compass.texture)).x = 34, compass2.y = 236, compass2.alpha = .55, compass2.tint = jv.color_base, compass.hitArea = compass2.hitArea = new PIXI.Rectangle(0, 0, 136, 140), jv.glow = new PIXI.Graphics, jv.glow.beginFill(21845, .3), jv.glow.drawCircle(0, 0, 28), jv.glow.beginFill(26214, .6), jv.glow.drawCircle(0, 0, 20), jv.glow.beginFill(30583, .8), jv.glow.drawCircle(0, 0, 16), jv.glow.beginFill(34952, 1), jv.glow.drawCircle(0, 0, 12), jv.glow.beginFill(39321), jv.glow.drawCircle(0, 0, 10), jv.glow.beginFill(48059), jv.glow.drawCircle(0, 0, 8), jv.glow.beginFill(56797), jv.glow.drawCircle(0, 0, 6), jv.glow.beginFill(65535), jv.glow.drawCircle(0, 0, 4), jv.glow.endFill(), jv.glow.x = 37, jv.glow.y = 318, jv.glow.mask = compass, jv.glow.visible = 0, target_container = jv.scene(), master_container.addChild(target_container), player_container.x = 0, player_container.y = 0, master_container.addChild(player_container), target_container.addChildAt(target, 0), (effect_container = jv.scene()).x = 0, effect_container.y = 0, jv.add(master_container), hover_container = jv.scene(), (hp_status = jv.StatusBar.create("Health", 2271778)).x = 224, hp_status.y = 14, hp_status.alpha = 1, hp_status.set(100), (hunger_status = jv.StatusBar.create("Food", 11149858)).x = 312, hunger_status.y = 14, hunger_status.alpha = 1, hunger_status.set(50), (exp_status = jv.StatusBar.create("Experience", 2237098)).x = 400, exp_status.y = 14, exp_status.alpha = 1, exp_status.set(0), (skill_status = jv.StatusBar.create("Exploration", 3381759)).set(0), skill_status.alpha = 0, skill_status.x = 400, skill_status.y = 24, inventory.x = jv.game_width - 160, inventory.y = 34, ui_container.addChild(inventory), jv.inv_button = jv.Button.create(680, 220, 60, items[15][Math.floor(191 / 16)], ui_container, 42), jv.inv_button.button_alpha = .2, jv.inv_button.arrow = new PIXI.Graphics;
		var e, t = [0, 8, 10, 0, 10, 16, 0, 8];
		for (jv.inv_button.arrow.beginFill(jv.color_dark, .3), jv.inv_button.arrow.lineStyle(3, 3355443, .3), jv.inv_button.arrow.drawPolygon(t), jv.inv_button.arrow.lineStyle(2, 4473924, .3), jv.inv_button.arrow.drawPolygon(t), jv.inv_button.arrow.lineStyle(1, 2236962, .3), jv.inv_button.arrow.drawPolygon(t), jv.inv_button.arrow.endFill(), jv.inv_button.arrow.x = 45, jv.inv_button.arrow.y = 14, jv.inv_button.addChildAt(jv.inv_button.arrow, jv.inv_button.children.length - 2), jv.inv_button.clear_item(), jv.inv_button.draw_item(), jv.inv_button.arrow.cacheAsBitmap = !0, jv.inv_button.on_click = function() {
				this.expanded ? (this.expanded = 0, inv_pane.visible = 0, inventory.visible = 0, ui_container.cur_page.visible = 0, ui_container.inv_prev.visible = 0, ui_container.inv_next.visible = 0, jv.inv_icons && (ui_container.build.visible = 1), jv.quick_toggle && (jv.hot_scene.visible = 1), info_pane.visible = !1, info_pane.slot = void 0, this.arrow.rotation = 0, this.arrow.x = 45, this.arrow.y = 14, this.x = 680) : (this.expanded = 1, inv_pane.visible = 1, inventory.visible = 1, ui_container.cur_page.visible = 1, ui_container.inv_prev.visible = 1, ui_container.inv_next.visible = 1, ui_container.build.visible = 0, jv.hot_scene.visible = 0, this.arrow.rotation = 3.1456, this.arrow.x = 59, this.arrow.y = 28, this.x = 520)
			}, jv.hot_scene = jv.scene(), jv.hot_scene.x = 596, jv.hot_scene.y = 50, jv.hot_button = [], e = 0; e < 6; e++) jv.hot_button[e] = jv.Button.create(e < 3 ? 0 : 66, 55 * e - (e < 3 ? 0 : 165), 60, items[0][Math.floor(0)], jv.hot_scene, 42), jv.hot_button[e].button_alpha = .5, jv.hot_button[e].main_color = jv.color_dark, jv.hot_button[e].slot = jv.hot_slot[e], jv.hot_button[e].qty_text = jv.text("", {
			font: "12px Verdana",
			fill: 15658734,
			lineJoin: "round",
			stroke: jv.color_medium,
			strokeThickness: 4
		}), jv.hot_button[e].qty_text.x = 0, jv.hot_button[e].qty_text.y = 28, jv.hot_button[e].addChild(jv.hot_button[e].qty_text), jv.hot_button[e].clear_item(), jv.hot_button[e].draw_item(), jv.hot_button[e].on_click = function() {
			send({
				type: "u",
				slot: this.slot
			})
		};
		ui_container.addChild(jv.hot_scene), (ph_pickup = jv.Button.create(678, 284, 62, items[0][Math.floor(0)], ui_container, 44)).button_alpha = .6, ph_pickup.title.style = {
			font: "12px Verdana",
			fill: 16777215,
			lineJoin: "round",
			dropShadow: !0,
			dropShadowColor: jv.color_base,
			dropShadowDistance: 2,
			dropShadowAngle: 1
		}, ph_pickup.on_press = function() {
			keyShift.press()
		}, ph_pickup.uparrow = new PIXI.Graphics;
		t = [0, 20, 16, 20, 16, 30, 32, 30, 32, 20, 48, 20, 24, 0, 0, 20];
		ph_pickup.uparrow.beginFill(2236996, .3), ph_pickup.uparrow.lineStyle(5, 3355443, .2), ph_pickup.uparrow.drawPolygon(t), ph_pickup.uparrow.lineStyle(3, 4473924, .2), ph_pickup.uparrow.drawPolygon(t), ph_pickup.uparrow.lineStyle(1, jv.color_dark, .3), ph_pickup.uparrow.drawPolygon(t), ph_pickup.uparrow.endFill(), ph_pickup.uparrow.x = 6, ph_pickup.uparrow.y = 6, ph_pickup.addChildAt(ph_pickup.uparrow, ph_pickup.children.length - 2), ph_pickup.uparrow.alpha = .5, ph_pickup.visible = 1, ph_pickup.gfx.alpha = 0, jv.pickup_button.tint = jv.color_base, jv.pickup_button.alpha = .55, jv.pickup_button.x = -20, jv.pickup_button.y = -26, jv.pickup_button.scale.x = .5, jv.pickup_button.scale.y = .5, ph_pickup.addChild(jv.pickup_button), ph_pickup.swapChildren(jv.pickup_button, ph_pickup.gfx), ph_pickup.clear_item(), ph_pickup.draw_item(), ph_action = jv.Button.create(574, 296, 100, items[7][Math.floor(791 / 16)], ui_container, 100), jv.action_button.tint = jv.color_base, jv.action_button.alpha = .55, jv.action_button.x = -40, jv.action_button.y = -38, jv.action_button.scale.x = .9, jv.action_button.scale.y = .9, ph_action.addChild(jv.action_button), ph_action.swapChildren(jv.action_button, ph_action.gfx), ph_action.button_alpha = .2, ph_action.clear_item(), ph_action.draw_item(), ph_action.title.style = {
			font: "12px Verdana",
			fill: 16777215,
			lineJoin: "round",
			dropShadow: !0,
			dropShadowColor: jv.color_base,
			dropShadowDistance: 2,
			dropShadowAngle: 1
		}, ph_action.set_text(" "), ph_action.silent = 1, ph_action.on_click = function() {
			this.clear_item(), this.draw_item(), keySpace.isDown = 0, jv.action_button.alpha = .55
		}, ph_action.on_press = function() {
			keySpace.isDown = 1, jv.action_button.alpha = .85
		}, jv.tutorial_window = jv.scene(), jv.tutorial_window.x = 185, jv.tutorial_window.y = 320, jv.tutorial_window.background = new PIXI.Graphics, jv.tutorial_window.background.x = 0, jv.tutorial_window.background.y = 0, jv.tutorial_window.background.beginFill(0, .6), jv.tutorial_window.background.drawRoundedRect(0, 0, 325, 80, 4), jv.tutorial_window.background.endFill(), jv.tutorial_window.background.lineStyle(3, 16777215, .3), jv.tutorial_window.background.drawRoundedRect(0, 0, 325, 80, 4), jv.tutorial_window.background.cacheAsBitmap = !0, jv.tutorial_window.addChild(jv.tutorial_window.background), jv.tutorial_window.info = jv.text("", {
			font: "13px Verdana",
			fill: 16771483,
			lineJoin: "round",
			wordWrap: !0,
			wordWrapWidth: 309,
			breakWords: !0,
			stroke: 1118481,
			strokeThickness: 2,
			align: "left"
		}), jv.tutorial_window.info.alpha = .9, jv.tutorial_window.info.x = 8, jv.tutorial_window.info.y = 4, jv.tutorial_window.addChild(jv.tutorial_window.info), jv.tutorial_window.visible = 0, ui_container.addChild(jv.tutorial_window), (info_pane = jv.scene()).background = new PIXI.Graphics, info_pane.background.x = 0, info_pane.background.y = 0, info_pane.background.beginFill(jv.color_base, .5), info_pane.background.drawRect(0, 0, 100, 122), info_pane.background.cacheAsBitmap = !0, info_pane.addChild(info_pane.background), info_pane.x = 480, info_pane.y = 34, info_pane.visible = !1, info_pane.heading = jv.text("", {
			font: "10px Verdana",
			fill: jv.color_bright,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 4,
			align: "left"
		}), info_pane.heading.x = 4, info_pane.heading.y = 0, info_pane.addChild(info_pane.heading), info_pane.sprite = jv.sprite(), info_pane.sprite.x = 35, info_pane.sprite.y = 18, info_pane.addChild(info_pane.sprite), info_pane.use = jv.Button.create(52, 55, 39, "Use", info_pane, 32), info_pane.use.on_click = function() {
			this.parent.obj && (this.parent.obj.id ? send({
				type: "c",
				r: "rp",
				id: this.parent.obj.id
			}) : send({
				type: "u",
				slot: this.parent.slot
			}))
		}, info_pane.drop = jv.Button.create(10, 55, 39, "Drop", info_pane, 32), info_pane.drop.on_click = function() {
			this.parent.obj && send({
				type: "d",
				slot: this.parent.slot,
				amt: drop_amt
			})
		}, info_pane.drop_amount = jv.Button.create(10, 92, 80, " ", info_pane), info_pane.drop_amount.title.style.letterSpacing = -1, info_pane.drop_amount.set_text("Drop Amt: all"), info_pane.drop_amount.on_click = function() {
			var e = "all" !== drop_amt && "1" !== drop_amt && "10" !== drop_amt ? 1 : 0;
			drop_amt = "all" == drop_amt ? "1" : "1" == drop_amt ? "10" : "all", this.set_text("Drop Amt: " + drop_amt), e && append("Drop amount set to " + drop_amt + ".")
		}, info_pane.drop_amount.visible = !1, info_pane.use.visible = !1, info_pane.drop.visible = !1, info_pane.set_info = function(e) {
			-1 != me && ((this.obj = e) ? (this.visible = !0, this.sprite.x = 35, this.sprite.y = 18, void 0 !== e.quantity ? (this.sprite.scale.x = 1, this.sprite.scale.y = 1, this.background.height = 122, this.slot = e.slot + item_page * item_length, void 0 !== e.template && (this.template = e.template), 1 < e.quantity ? this.heading.text = e.title.text + "[" + e.quantity + "]" : this.heading.text = e.title.text, this.heading.x = 50 - this.heading.width / 2, this.sprite.texture = e.texture, this.use.set_text("Use"), this.use.x = 52, this.use.y = 55, this.use.visible = !0, this.drop.visible = !0, this.drop_amount.visible = !0) : (this.background.height = 85, this.use.y = 48, "" != e.tribe ? (this.heading.text = e.name + " (" + e.level + ")\r\n" + e.tribe, this.sprite.y = 30, this.use.y = 64, this.background.height = 100) : void 0 !== e.level ? this.heading.text = e.name + " (" + e.level + ")" : this.heading.text = e.name, e.monster_sprite ? this.sprite.texture = e.monster_sprite.texture : (e.title.visible = !1, this.sprite.texture = e.spr.texture, e.title.visible = !0), this.heading.x = 50 - this.heading.width / 2, 26 == e.spr.texture.height && 18 == e.spr.texture.width ? (this.sprite.scale.y = 2, this.sprite.scale.x = 2, "" == e.tribe ? (this.background.height = 108, this.use.y = 72) : (this.background.height = 112, this.sprite.y = 22, this.use.y = 76)) : (this.sprite.scale.y = 32 / e.spr.texture.height, this.sprite.scale.x = this.sprite.scale.y, "" == e.tribe && (this.sprite.x = 35, this.sprite.y = 12)), this.use.visible = !myself || myself != e, this.use.set_text("Info"), this.use.x = 34, this.drop.visible = !1, this.drop_amount.visible = !1, target.id = e.id, target.redraw(e.spr.width), target.x = e.spr.x + e.halfx, target.y = e.spr.y + e.spr.height - 2, send({
				type: "t",
				t: target.id
			}), target.id == me ? (target.visible = !1, info_pane.visible = !1) : target.visible = !0)) : (this.visible = !1, this.slot = void 0))
		}, ui_container.addChild(info_pane), ui_container.build = jv.Button.create(610, 220, 60, items[15][Math.floor(719 / 16)], ui_container, 42), ui_container.build.button_alpha = .2, ui_container.build.clear_item(), ui_container.build.draw_item(), ui_container.build.on_click = function() {
			jv.build_dialog.visible ? jv.build_dialog.hide() : jv.build_dialog.show(), build_type && "" != build_type ? jv.build_dialog.info.use.set_text(build_type) : jv.build_dialog.info.use.set_text("Build"), jv.build_dialog.info.obj && (void 0 !== jv.build_dialog.info.obj.quantity || jv.build_dialog.info.obj.build) && jv.build_dialog.info.set_info(), update_build()
		}, (build_pane = jv.scene()).x = 16, build_pane.visible = !0, jv.chat_box = jv.ChatBox.create(0, 40, 276, 210), jv.chat_fade = jv.ChatBox.create(0, 40, 276, 210), jv.chat_fade.fade = 1, jv.chat_fade.text_style.strokeThickness = 5, jv.chat_fade.text_style.stroke = 3355443, jv.chat_fade.line_limit = 20, jv.chat_fade.interactive = 0, jv.init_dialogs(), master_container.addChild(hover_container), master_container.addChild(effect_container), (map_fade = new PIXI.Graphics).beginFill(0), map_fade.lineStyle(1, 0), map_fade.drawRect(0, 0, jv.game_width, jv.game_height), map_fade.endFill(), map_fade.alpha = 0, static_container = jv.scene(), jv.add(static_container), jv.add(map_fade), jv.add(ui_container), (inv_pane = jv.scene()).x = jv.game_width - 160, ui_container.addChild(inv_pane);
		for (var i = c = 0; i < 5; i++)
			for (var o = 0; o < 3; o++) inv[c] = jv.InventorySlot.create(16 + 47 * o, 44 + 38 * i, c, inv_pane), c += 1;
		ui_container.interactive = !0, (game_fade = new PIXI.Graphics).beginFill(0), game_fade.lineStyle(1, 0), game_fade.drawRect(0, 0, jv.game_width, jv.game_height), game_fade.endFill(), jv.add(game_fade), ui_container.cur_page = jv.text("1", {
			font: "12px Verdana",
			fill: jv.color_light,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 4,
			align: "center"
		}), ui_container.cur_page.x = jv.game_width - 87, ui_container.cur_page.y = 239, ui_container.addChild(ui_container.cur_page), ui_container.inv_next = jv.Button.create(jv.game_width - 49, 236, 32, ">"), ui_container.inv_next.on_click = function() {
			item_page < 4 && (item_page++, ui_container.cur_page.text = String(item_page + 1), update_inventory())
		}, ui_container.inv_prev = jv.Button.create(jv.game_width - 146, 236, 32, "<"), ui_container.inv_prev.on_click = function() {
			0 < item_page && (item_page--, ui_container.cur_page.text = String(item_page + 1), update_inventory())
		};
		t = jv.game_width - 144;
		ui_container.stats = jv.Button.create(t, 4, 60, " ", null, 32), ui_container.stats.button_alpha = .5, ui_container.stats.title.style.letterSpacing = -1, ui_container.stats.set_text("Character"), ui_container.stats.clear_item(), ui_container.stats.draw_item(!1), ui_container.stats.on_click = function() {
			jv.stat_dialog.show(), send({
				type: "c",
				r: "st"
			})
		}, ui_container.options = jv.Button.create(t += 66, 4, 60, "Menu", null, 32), ui_container.options.button_alpha = .5, ui_container.options.clear_item(), ui_container.options.draw_item(!1), ui_container.options.on_click = function() {
			option_dialog.show()
		}, jv.game_width, ui_container.addChild(compass2), ui_container.addChild(compass), ui_container.addChild(jv.glow), ui_container.addChild(ph_dpad), jv.fps = jv.text("FPS: ", {
			font: "12px Verdana",
			fill: 8978431,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 4,
			align: "right"
		}), jv.fps.x = 280, jv.fps.y = 30, jv.fps.visible = show_fps, ui_container.addChild(jv.fps), jv.ping = jv.text("PING: ", {
			font: "12px Verdana",
			fill: 16777096,
			lineJoin: "round",
			stroke: jv.color_dark,
			strokeThickness: 4,
			align: "right"
		}), jv.ping.x = 334, jv.ping.y = 30, jv.ping.visible = show_ping, ui_container.addChild(jv.ping), jv.toggle_chat = new PIXI.Sprite, jv.toggle_chat.interactive = !0, jv.toggle_chat.scale.x = 2, jv.toggle_chat.scale.y = 2, jv.toggle_chat.x = 14, jv.toggle_chat.y = 14, jv.toggle_chat.alpha = .6, jv.toggle_chat.texture = jv.chat_say.texture, jv.toggle_chat.mode = "say", jv.toggle_chat.buttonMode = !0, jv.toggle_chat.hitArea = new PIXI.Polygon(new PIXI.Point(-5, -9), new PIXI.Point(18, -9), new PIXI.Point(18, 12), new PIXI.Point(-5, 12)), jv.toggle_chat.onClick = function() {
			"say" == this.mode ? (this.mode = "global", this.texture = jv.chat_global.texture, input_field.placeholder.text = "Global chat..") : "global" == this.mode ? (this.mode = "tribe", this.texture = jv.chat_tribe.texture, input_field.placeholder.text = "Tribe chat..") : "tribe" == this.mode ? (this.mode = "party", this.texture = jv.chat_party.texture, input_field.placeholder.text = "Party chat..") : "party" == this.mode ? (this.mode = "tell", this.texture = jv.chat_tell.texture, input_field.placeholder.text = "Tell..") : "tell" == this.mode && (this.mode = "say", this.texture = jv.chat_say.texture, input_field.placeholder.text = "Chat..")
		}, jv.toggle_chat.on("mouseup", jv.toggle_chat.onClick), jv.toggle_chat.on("touchend", jv.toggle_chat.onClick), inv_pane.visible = 0, inventory.visible = 0, ui_container.cur_page.visible = 0, ui_container.inv_prev.visible = 0, ui_container.inv_next.visible = 0, ui_container.addChild(jv.toggle_chat), jv.ability = [], (input_field = jv.TextInput.create(34, 10, 180, 24)).placeholder.text = "Chat..", setup_mobile_input(), jv.bringToFront(jv.spawn_dialog), jv.bringToFront(jv.create_dialog), jv.quick_toggle = 1, jv.inv_icons = 1
	});
jv.ready = function() {
	if (jv.retry_assets.length) jv.retried = 1, PIXI.loader.reset(), PIXI.loader.add(jv.retry_assets), PIXI.loader.load(jv.ready), console.log("Retrying assets: " + JSON.stringify(jv.retry_assets)), jv.retry_assets = [];
	else {
		jv.state = "ready", splash = jv.sprite(path + "data/misc/splash_screen.jpg" + vt), jv.color_picker = jv.sprite(path + "data/misc/color.png" + vt), jv.sound_icon = jv.sprite(path + "data/misc/sound_icon.png" + vt), jv.music_icon = jv.sprite(path + "data/misc/music_icon.png" + vt), jv.music_icon.x = 12, jv.music_icon.y = 320, jv.music_icon.scale.x = .75, jv.music_icon.scale.y = .75, jv.music_icon.tint = 2237149, jv.music_icon.alpha = .7, jv.music_icon.interactive = !0, jv.music_icon.buttonMode = !0, jv.music_icon.onClick = function() {
			if (.7 == this.alpha) {
				for (var e in this.alpha = .3, jv.music_volume = 0, music) music[e].volume(0);
				option_dialog.music_slider.set_percent(0)
			} else {
				for (e in this.alpha = .7, jv.music_volume = .4, music) music[e].volume(jv.music_volume);
				option_dialog.music_slider.set_percent(40)
			}
		}, jv.music_icon.on("mouseup", jv.music_icon.onClick), jv.music_icon.on("touchend", jv.music_icon.onClick), splash.addChild(jv.music_icon), jv.sound_icon.x = 15, jv.sound_icon.y = 360, jv.sound_icon.scale.x = .75, jv.sound_icon.scale.y = .75, jv.sound_icon.tint = 2237149, jv.sound_icon.alpha = .7, jv.sound_icon.interactive = !0, jv.sound_icon.buttonMode = !0, jv.sound_icon.onClick = function() {
			.7 == this.alpha ? (this.alpha = .3, jv.sound_volume = 0, option_dialog.sound_slider.set_percent(0)) : (this.alpha = .7, jv.sound_volume = .5, option_dialog.sound_slider.set_percent(50))
		}, jv.sound_icon.on("mouseup", jv.sound_icon.onClick), jv.sound_icon.on("touchend", jv.sound_icon.onClick), splash.addChild(jv.sound_icon);
		for (var e = 1; e <= max_costume; e++) monster[e] = jv.spritesheet(path + "data/monsters/" + e + ".png" + vt, 24, 32);
		tiles = jv.spritesheet(path + "data/misc/tile16.png" + vt, 16, 16, 2), items = jv.spritesheet(path + "data/misc/item16.png" + vt, 16, 16, 2), edges = jv.spritesheet(path + "data/misc/edges.png" + vt, 32, 32), compass = jv.sprite(path + "data/misc/compass.png" + vt), jv.action_button = jv.sprite(path + "data/misc/button.png" + vt), jv.pickup_button = jv.sprite(path + "data/misc/button.png" + vt), jv.chat_say = jv.sprite(path + "data/misc/chat_say.png" + vt), jv.chat_tell = jv.sprite(path + "data/misc/chat_tell.png" + vt), jv.chat_tribe = jv.sprite(path + "data/misc/chat_tribe.png" + vt), jv.chat_party = jv.sprite(path + "data/misc/chat_party.png" + vt), jv.chat_global = jv.sprite(path + "data/misc/chat_global.png" + vt), jv.buffs = jv.spritesheet(path + "data/misc/buffs.png" + vt, 8, 8), ui_container = jv.scene(), inventory = jv.sprite(), jv.theme(inventory, 160, 236), jv.star = jv.sprite(path + "data/misc/star.png" + vt), jv.star.x = 200, jv.star.y = 200, jv.buffbar = [], jv.buff_container = jv.scene(), jv.buff_container.scale.x = 2, jv.buff_container.scale.y = 2, ui_container.addChild(jv.buff_container), jv.buff_container.x = 194, jv.buff_container.y = 336, keyEnter.release = function() {
			input_field.hasFocus || input_field.focus()
		}, keyShift.press = function() {
			input_field.hasFocus || editing || -1 !== me && send({
				type: "g"
			})
		}, keyTab.press = function() {
			input_field.hasFocus || editing || -1 !== me && jv.inv_button.on_click()
		}, keyC.press = function() {
			input_field.hasFocus || editing || -1 !== me && jv.toggle_chat.onClick()
		}, keyB.press = function() {
			input_field.hasFocus || editing || -1 !== me && ui_container.build.on_click()
		}, keyI.press = function() {
			input_field.hasFocus || editing || -1 !== me && (jv.stat_dialog.visible ? jv.stat_dialog.hide() : ui_container.stats.on_click())
		}, keyK.press = function() {
			input_field.hasFocus || editing || -1 !== me && (jv.skill_dialog.visible ? jv.skill_dialog.hide() : jv.stat_dialog.skill.on_click())
		}, keyU.press = function() {
			input_field.hasFocus || editing || -1 !== me && (jv.upgrade_dialog.visible ? jv.upgrade_dialog.hide() : jv.stat_dialog.upgrades.on_click())
		}, keyM.press = function() {
			input_field.hasFocus || editing || -1 !== me && (jv.mapping_dialog.visible ? (jv.mapping_dialog.hide(), map_container.interactive || (mapping_mode = 1, map_container.interactive = !0, map_container.mousedown = map_container.touchend = function(e, t) {
				if (!input_field.hasFocus && !editing && (!t || jv.mouseDown)) {
					var i;
					Date.now() - jv.last_mouseDown < 200 && (i = 1), (game_state !== GAME_PLAYING || !e && jv.last_mouseDown && i) && (n = 1);
					var o, n, a = 0;
					for (o in jv.Dialog.list) jv.Dialog.list[o].visible && a++;
					a && (n = 1), (jv.global_button_down || Date.now() - jv.last_button_down < 200) && (n = 1), jv.last_mouseDown = Date.now(), jv.mouseDown = !0;
					var r = jv.trackx,
						s = jv.tracky;
					jv.trackx = Math.max(Math.floor(jv.mouse.x) || -9999999, Math.floor(touchx) || -9999999), jv.tracky = Math.max(Math.floor(jv.mouse.y) || -9999999, Math.floor(touchy) || -9999999), (n = e && i && Math.floor(r / 32) == Math.floor(jv.trackx / 32) && Math.floor(s / 32) == Math.floor(jv.tracky / 32) ? 1 : n) || send({
						type: "w",
						r: t ? 1 : 0,
						x: Math.floor((jv.trackx - master_container.x) / 32),
						y: Math.floor((jv.tracky - master_container.y) / 32)
					})
				}
			}, map_container.mousemove = function() {
				input_field.hasFocus || editing || jv.mouseDown && this.mousedown(1)
			})) : send({
				type: "c",
				r: "mp"
			}))
		}, keyQ.press = function() {
			input_field.hasFocus || editing || -1 !== me && jv.ability[0] && jv.ability[0].do_click()
		}, keyE.press = function() {
			input_field.hasFocus || editing || -1 !== me && jv.ability[1] && jv.ability[1].do_click()
		}, keyR.press = function() {
			input_field.hasFocus || editing || -1 !== me && jv.ability[2] && jv.ability[2].do_click()
		}, keyT.press = function() {
			input_field.hasFocus || editing || -1 !== me && jv.ability[3] && jv.ability[3].do_click()
		}, keyF.press = function() {
			input_field.hasFocus || editing || -1 !== me && jv.ability[4] && jv.ability[4].do_click()
		}, keyEscape.press = function() {
			if (!input_field.hasFocus && !editing && -1 !== me)
				for (var e in jv.Dialog.list) {
					if (jv.Dialog.list[e].visible && jv.Dialog.list[e].modal) return;
					jv.Dialog.list[e].visible = !1
				}
		}, keyComma.press = function() {
			input_field.hasFocus || editing || -1 !== me && ui_container.inv_prev.on_click()
		}, keyPeriod.press = function() {
			input_field.hasFocus || editing || -1 !== me && ui_container.inv_next.on_click()
		}, keySlash.press = function() {
			input_field.hasFocus || editing || -1 !== me && "" == input_field.chars && (input_field.chars = "/", input_field.pos = 1, input_field.focus(), setTimeout(function() {
				keySlash.isUp = !0
			}, 100))
		}, keyBackslash.press = function() {
			input_field.hasFocus || editing || -1 !== me && "" == input_field.chars && (input_field.chars = "/b ", input_field.pos = 3, input_field.focus(), setTimeout(function() {
				keyBackslash.isUp = !0
			}, 100))
		}, keyBracket.press = function() {
			input_field.hasFocus || editing || -1 !== me && "" == input_field.chars && (input_field.chars = last_tell && "" != last_tell ? "/t " + last_tell + " " : "/t ", input_field.pos = input_field.chars.length, input_field.focus(), setTimeout(function() {
				keyBracket.isUp = !0
			}, 100))
		}, keyQuote.press = function() {
			input_field.hasFocus || editing || -1 !== me && "" == input_field.chars && (input_field.chars = "/tc ", input_field.pos = input_field.chars.length, input_field.focus(), setTimeout(function() {
				keyQuote.isUp = !0
			}, 100))
		}, key1.press = function() {
			input_field.hasFocus || editing || -1 !== me && send({
				type: "u",
				slot: 0
			})
		}, key2.press = function() {
			input_field.hasFocus || editing || -1 !== me && send({
				type: "u",
				slot: 1
			})
		}, key3.press = function() {
			input_field.hasFocus || editing || -1 !== me && send({
				type: "u",
				slot: 2
			})
		}, key4.press = function() {
			input_field.hasFocus || editing || -1 !== me && send({
				type: "u",
				slot: 3
			})
		}, key5.press = function() {
			input_field.hasFocus || editing || -1 !== me && send({
				type: "u",
				slot: 4
			})
		}, key6.press = function() {
			input_field.hasFocus || editing || -1 !== me && send({
				type: "u",
				slot: 5
			})
		}, key7.press = function() {
			input_field.hasFocus || editing || -1 !== me && send({
				type: "u",
				slot: 6
			})
		}, key8.press = function() {
			input_field.hasFocus || editing || -1 !== me && send({
				type: "u",
				slot: 7
			})
		}, key9.press = function() {
			input_field.hasFocus || editing || -1 !== me && send({
				type: "u",
				slot: 8
			})
		}, document.getElementById("jv").oncontextmenu = function(e) {
			if (e.preventDefault(), map_container.interactive && mapping_mode && (jv.mouseDown = 1, map_container.mousedown(0, 1), jv.mouseDown = 0), jv.inv_button.expanded)
				for (var t = 0; t < item_length; t++) jv.mouse.x > inv[t].x + 580 && jv.mouse.x < inv[t].x + 32 + 580 && jv.mouse.y > inv[t].y && jv.mouse.y < inv[t].y + 32 && inv[t].texture != tiles[0][0] && send({
					type: "d",
					slot: t + item_page * item_length,
					amt: drop_amt
				})
		}, document.querySelector("canvas").onfocusout = function() {
			input_field.blur()
		}, (master_container = jv.scene()).x = 0, master_container.y = 0, (map_container = jv.scene()).x = 0, map_container.y = 0, anim_map_container = jv.scene(), (edge_container = jv.scene()).x = 0;
		for (var t, i = edge_container.y = 0, o = -jv.update_x; o < jv.update_x; o++)
			for (t = -jv.update_y; t < jv.update_y; t++) map[i] = new PIXI.Sprite, map[i].x = 32 * o, map[i].y = 32 * t, map_container.addChild(map[i]), map[i].anim = jv.sprite(tiles[6][Math.floor(20.375)]), map[i].anim.x = 32 * o, map[i].anim.y = 32 * t, map[i].anim.visible = 0, anim_map_container.addChild(map[i].anim), map[i].edge = jv.sprite(edges[0][1]), map[i].edge.x = 32 * o, map[i].edge.y = 32 * t, map[i].edge.spr = 16, map[i].edge.visible = 0, edge_container.addChild(map[i].edge), map[i].cover = jv.sprite(edges[0][1]), map[i].cover.x = 32 * o, map[i].cover.y = 32 * t - 20, map[i].cover.ry = map[i].cover.y, map[i].cover.visible = 0, player_container.addChild(map[i].cover), map[i].cover_mask = jv.sprite(edges[0][1]), map[i].cover_mask.x = 0, map[i].cover_mask.y = 0, map[i].cover_mask.visible = 0, map[i].cover.addChild(map[i].cover_mask), i += 1;
		anim_map_container.animations = 0, master_container.addChild(map_container), master_container.addChild(anim_map_container), master_container.addChild(edge_container), anim1_container = jv.scene(), master_container.addChild(anim1_container), anim2_container = jv.scene(), master_container.addChild(anim2_container), anim2_container.visible = 0, (object_container = jv.scene()).x = 0, object_container.y = 0, master_container.addChild(object_container), (target = jv.sprite()).gfx = new PIXI.Graphics, target.addChild(target.gfx), target.redraw = function(e) {
			this.gfx.clear(), this.gfx.lineStyle(2, 16777062, .8), this.gfx.beginFill(16777028, .4), this.gfx.drawEllipse(0, 0, e / 2, 8), this.gfx.endFill()
		}, target.redraw(16), target.visible = !1, init_ui(), jv.ml_sound = Cookies.get("ml_sound"), jv.ml_sound && (jv.sound_volume = Number(jv.ml_sound), option_dialog.sound_slider.set_percent(jv.sound_volume)), jv.ml_music = Cookies.get("ml_music"), jv.ml_music && (option_dialog.music_slider.set_percent(Number(jv.ml_music)), option_dialog.music_slider.onChange());
		var n = Cookies.get("ml_user"),
			a = Cookies.get("ml_pass");
		n && a ? (jv.login_dialog.username.setText(jv.base64_decode(n)), jv.login_dialog.password.setText(jv.base64_decode(a))) : jv.login_dialog.guest.visible = 1, "true" === Cookies.get("ml_inventory_buttons") ? (jv.inv_icons = 1, jv.inv_button.visible = 1, ui_container.build.visible = 1) : "false" === Cookies.get("ml_inventory_buttons") && (jv.inv_icons = 0, jv.inv_button.visible = 0, ui_container.build.visible = 0), "true" === Cookies.get("ml_chat_window") ? (jv.chat_toggle = 1, jv.chat_fade.visible = !1, jv.chat_box.visible = !0, jv.chat_box.interactive = !0, jv.chat_box.gfx.alpha = jv.chat_box.gfx.max_alpha) : "false" === Cookies.get("ml_chat_window") && (jv.chat_toggle = 0, jv.chat_fade.visible = !0, jv.chat_box.visible = !1), "true" === Cookies.get("ml_dpad") ? (compass.visible = 1, compass2.visible = 1, ph_dpad.visible = 1, jv.chat_box.h = 210, jv.chat_box.gfx.height = 212, jv.chat_box.m.height = 210, jv.chat_box.mask.height = 210, jv.chat_box.resume.y = jv.chat_box.h - 35) : "false" === Cookies.get("ml_dpad") && (compass.visible = 0, compass2.visible = 0, ph_dpad.visible = 0, jv.chat_box.h = 377, jv.chat_box.gfx.height = 379, jv.chat_box.m.height = 377, jv.chat_box.mask.height = 377, jv.chat_box.resume.y = jv.chat_box.h - 35), "true" === Cookies.get("ml_quick_buttons") ? (jv.hot_scene.visible = 1, jv.quick_toggle = 1) : "false" === Cookies.get("ml_quick_buttons") && (jv.hot_scene.visible = 0, jv.quick_toggle = 0), "true" === Cookies.get("ml_action_button") ? (jv.action_button.visible = 1, ph_action.visible = 1, info_pane.x = 480, info_pane.y = 34) : "false" === Cookies.get("ml_action_button") && (jv.action_button.visible = 0, ph_action.visible = 0, info_pane.x = 580, info_pane.y = 284);
		void 0 !== Cookies.get("ml_chat_opacity") && (jv.chat_box.gfx.max_alpha = Cookies.get("ml_chat_opacity") / 100, jv.chat_box.visible) && (jv.chat_box.gfx.alpha = jv.chat_box.gfx.max_alpha);
		n = .7 * Cookies.get("ml_chat_width") + 30, n = (isNaN(n) || (100 < n ? n = 100 : n < 30 && (n = 30), a = Math.floor(346 * n / 100), jv.chat_box.w = a, jv.chat_box.gfx.width = a, jv.chat_box.m.width = a, jv.chat_box.resume.x = jv.chat_box.w / 2 - 35, jv.chat_box.text_style.wordWrapWidth = jv.chat_box.w - 2 * jv.chat_box.padding, jv.chat_fade.w = a, jv.chat_fade.gfx.width = a, jv.chat_fade.m.width = a, jv.chat_fade.resume.x = jv.chat_fade.w / 2 - 35, jv.chat_fade.text_style.wordWrapWidth = jv.chat_fade.w - 2 * jv.chat_fade.padding), .07 * Cookies.get("ml_font_size") + 9);
		isNaN(n) || (16 < n ? n = 16 : n < 9 && (n = 9), jv.chat_box.text_style.font = n + "px Verdana", jv.chat_fade.text_style.font = n + "px Verdana"), jv.loading_container.visible = 0, playMusic("rpgtitle", 1), append("<strong><span style='color:#99ff66'>Mystera</span> <span style='color:#66ffff'>Legacy</span> <span style='color:#ffff66'>" + version + "</span></strong>"), wall_sprite = new PIXI.Sprite, make_covers(), jv.reconnect_dialog.show(), game_fade.visible = 0, ui_container.visible = 0, "undefined" != typeof ace && ((editor = ace.edit("script_code")).setTheme("ace/theme/monokai"), editor.getSession().setMode("ace/mode/javascript"), editor.on("blur", function() {
			editing = 0
		}), editor.on("focus", function() {
			editing = 1
		})), !phone && ((a = document.getElementById("script_name")) && (a.style.display = "none"), a = document.getElementById("script_code")) && (a.style.display = "none"), document.addEventListener("visibilitychange", function() {
			document.hidden ? jv.before_blur() : has_focus = 1
		})
	}
};
